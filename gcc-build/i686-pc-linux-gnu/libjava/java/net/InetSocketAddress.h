// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_net_InetSocketAddress__
#define __java_net_InetSocketAddress__

#pragma interface

#include <java/net/SocketAddress.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
      class InetSocketAddress;
      class InetAddress;
    }
  }
};

class ::java::net::InetSocketAddress : public ::java::net::SocketAddress
{
public:
  InetSocketAddress (::java::net::InetAddress *, jint);
  InetSocketAddress (jint);
  InetSocketAddress (::java::lang::String *, jint);
  jboolean equals (::java::lang::Object *);
  ::java::net::InetAddress *getAddress () { return addr; }
  ::java::lang::String *getHostName () { return hostname; }
  jint getPort () { return port; }
  jint hashCode ();
  jboolean isUnresolved ();
  virtual ::java::lang::String *toString ();
private:
  static const jlong serialVersionUID = 5076001401234631237LL;
public: // actually package-private
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::net::SocketAddress )))) hostname;
  ::java::net::InetAddress *addr;
  jint port;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_net_InetSocketAddress__ */

#! /bin/sh

# gij - temporary wrapper script for .libs/gij
# Generated by ltmain.sh - GNU libtool 1.4a-GCC3.0 (1.641.2.256 2001/05/28 20:09:07 with GCC-local changes)
#
# The gij program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
Xsed='sed -e 1s/^X//'
sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
if test "${CDPATH+set}" = set; then CDPATH=:; export CDPATH; fi

relink_command="cd /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava; LIBRARY_PATH=\"/usr/lib/i386-linux-gnu\"; export LIBRARY_PATH; { test -z \"\${COMPILER_PATH+set}\" || unset COMPILER_PATH || { COMPILER_PATH=; export COMPILER_PATH; }; }; { test -z \"\${GCC_EXEC_PREFIX+set}\" || unset GCC_EXEC_PREFIX || { GCC_EXEC_PREFIX=; export GCC_EXEC_PREFIX; }; }; { test -z \"\${LD_RUN_PATH+set}\" || unset LD_RUN_PATH || { LD_RUN_PATH=; export LD_RUN_PATH; }; }; LD_LIBRARY_PATH=\"/home/yanxin/git/jrate/gcc-build/bfd:/home/yanxin/git/jrate/gcc-build/opcodes:/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/.libs:/home/yanxin/git/jrate/gcc-build/bfd:/home/yanxin/git/jrate/gcc-build/opcodes:/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/.libs:/opt/AMDAPP/lib/x86\"; export LD_LIBRARY_PATH; PATH=\"/usr/lib/jvm/jdk1.6.0_45/bin:/usr/lib/jvm/jdk1.6.0_45/jre/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\"; export PATH; /home/yanxin/git/jrate/gcc-build/gcc/gcj -B/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/ -B/home/yanxin/git/jrate/gcc-build/gcc/ -ffloat-store -g -O2 -o \$progdir/\$file -shared-libgcc gij.o  -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libstdc++-v3/src -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libjRateCore -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libjRateCore/.libs /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libstdc++-v3/src/.libs/libstdc++.so -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/.libs -lm -lm -lm -L/home/yanxin/git/jrate/gcc-build/gcc -L/usr/lib/i386-linux-gnu -L/usr/local/lib/gcc-lib/i686-pc-linux-gnu/3.3.3 -L/usr/local/lib/gcc-lib/i686-pc-linux-gnu/3.3.3/../../.. -lgcc_s -lc -lgcc_s -lm -lgcc_s -lc -lgcc_s -L/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/.libs ./.libs/libgcj.so -lm -lm -lm -lgcc_s -lc -lgcc_s -lm -lgcc_s -lc -lgcc_s /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libjRateCore/.libs/libjRateCore.so /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so -lpthread -ldl -lrt -lpthread -lgcc_s -lc -lgcc_s -Wl,--rpath -Wl,/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libstdc++-v3/src/.libs -Wl,--rpath -Wl,/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/.libs -Wl,--rpath -Wl,/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libjRateCore/.libs -Wl,--rpath -Wl,/home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/.libs -Wl,--rpath -Wl,/usr/local/lib/."

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variable:
  notinst_deplibs=' /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libstdc++-v3/src/libstdc++.la libgcj.la /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libjava/../libjRateCore/libjRateCore.la /home/yanxin/git/jrate/gcc-build/i686-pc-linux-gnu/libstdc++-v3/src/libstdc++.la'
else
  # When we are sourced in execute mode, $file and $echo are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    echo="/bin/echo"
    file="$0"
    # Make sure echo works.
    if test "X$1" = X--no-reexec; then
      # Discard the --no-reexec flag, and continue.
      shift
    elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
      # Yippee, $echo works!
      :
    else
      # Restart under the correct shell, and then maybe $echo will work.
      exec /bin/sh "$0" --no-reexec ${1+"$@"}
    fi
  fi

  # Find the directory that this script lives in.
  thisdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\\/]* | [A-Za-z]:[\\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | sed -n 's/.*-> //p'`
  done

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'gij'
  progdir="$thisdir/.libs"

  if test ! -f "$progdir/$program" || \
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if relink_command_output=`eval $relink_command 2>&1`; then :
      else
        /bin/echo "$relink_command_output" >&2
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.

      # Export the path to the program.
      PATH="$progdir:$PATH"
      export PATH

      exec $program ${1+"$@"}

      $echo "$0: cannot exec $program ${1+"$@"}"
      exit 1
    fi
  else
    # The program doesn't exist.
    $echo "$0: error: $progdir/$program does not exist" 1>&2
    $echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi

// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_nio_channels_spi_AbstractSelectableChannel__
#define __java_nio_channels_spi_AbstractSelectableChannel__

#pragma interface

#include <java/nio/channels/SelectableChannel.h>

extern "Java"
{
  namespace java
  {
    namespace nio
    {
      namespace channels
      {
        class SelectionKey;
        class Selector;
        class SelectableChannel;
        namespace spi
        {
          class AbstractSelectableChannel;
          class SelectorProvider;
        }
      }
    }
  }
};

class ::java::nio::channels::spi::AbstractSelectableChannel : public ::java::nio::channels::SelectableChannel
{
public:  // actually protected
  AbstractSelectableChannel (::java::nio::channels::spi::SelectorProvider *);
public:
  ::java::lang::Object *blockingLock () { return LOCK; }
  ::java::nio::channels::SelectableChannel *configureBlocking (jboolean);
public:  // actually protected
  void implCloseChannel ();
  virtual void implCloseSelectableChannel () = 0;
  virtual void implConfigureBlocking (jboolean) = 0;
public:
  jboolean isBlocking () { return blocking; }
  jboolean isRegistered ();
  ::java::nio::channels::SelectionKey *keyFor (::java::nio::channels::Selector *);
  ::java::nio::channels::spi::SelectorProvider *provider () { return provider__; }
private:
  ::java::nio::channels::SelectionKey *locate (::java::nio::channels::Selector *);
  void add (::java::nio::channels::SelectionKey *);
public:
  ::java::nio::channels::SelectionKey *register$ (::java::nio::channels::Selector *, jint, ::java::lang::Object *);
public: // actually package-private
  jint __attribute__((aligned(__alignof__( ::java::nio::channels::SelectableChannel ))))  registered;
  jboolean blocking;
  ::java::lang::Object *LOCK;
  ::java::nio::channels::spi::SelectorProvider *provider__;
  ::java::util::List *keys;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_nio_channels_spi_AbstractSelectableChannel__ */

// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_realtime_AsyncEventHandler__
#define __javax_realtime_AsyncEventHandler__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace javax
  {
    namespace realtime
    {
      class AsyncEventHandler;
    }
  }
  namespace gnu
  {
    namespace gcj
    {
      class RawData;
    }
  }
};

class ::javax::realtime::AsyncEventHandler : public ::java::lang::Object
{
public:  // actually protected
  AsyncEventHandler ();
  virtual jint getAndClearPendingFireCount ();
  virtual jint getAndDecrementPendingFireCount ();
  virtual jint getAndIncrementPendingFireCount ();
  virtual jint getPendingFireCount ();
public:
  virtual void handleAsyncEvent () = 0;
  void run ();
private:
  void init ();
  void fini ();
public:  // actually protected
  virtual void finalize ();
  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object )))) natFireCount_;
  jint executionEligibility;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_realtime_AsyncEventHandler__ */

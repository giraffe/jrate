diff -Nurp ../gcc/Makefile.def ./Makefile.def
--- ../gcc/Makefile.def	Tue Dec 31 14:07:33 2002
+++ ./Makefile.def	Fri Aug  5 22:03:40 2005
@@ -73,6 +73,7 @@ target_modules = { module= libiberty; };
 target_modules = { module= gperf; };
 target_modules = { module= examples; no_check=true; no_install=true; };
 target_modules = { module= libffi; };
+target_modules = { module= libjRateCore; };
 target_modules = { module= libjava; };
 target_modules = { module= zlib; };
 target_modules = { module= boehm-gc; };
diff -Nurp ../gcc/Makefile.in ./Makefile.in
--- ../gcc/Makefile.in	Fri Jul  4 21:37:08 2003
+++ ./Makefile.in	Fri Aug  5 22:03:40 2005
@@ -761,6 +761,7 @@ ALL_TARGET_MODULES = \
 	all-target-gperf \
 	all-target-examples \
 	all-target-libffi \
+	all-target-libjRateCore \
 	all-target-libjava \
 	all-target-zlib \
 	all-target-boehm-gc \
@@ -781,6 +782,7 @@ CONFIGURE_TARGET_MODULES = \
 	configure-target-gperf \
 	configure-target-examples \
 	configure-target-libffi \
+	configure-target-libjRateCore \
 	configure-target-libjava \
 	configure-target-zlib \
 	configure-target-boehm-gc \
@@ -798,6 +800,7 @@ CHECK_TARGET_MODULES = \
 	check-target-libiberty \
 	check-target-gperf \
 	check-target-libffi \
+	check-target-libjRateCore \
 	check-target-libjava \
 	check-target-zlib \
 	check-target-boehm-gc \
@@ -817,6 +820,7 @@ INSTALL_TARGET_MODULES = \
 	install-target-libiberty \
 	install-target-gperf \
 	install-target-libffi \
+	install-target-libjRateCore \
 	install-target-libjava \
 	install-target-zlib \
 	install-target-boehm-gc \
@@ -898,6 +902,7 @@ CLEAN_TARGET_MODULES = \
 	clean-target-gperf \
 	clean-target-examples \
 	clean-target-libffi \
+	clean-target-libjRateCore \
 	clean-target-libjava \
 	clean-target-zlib \
 	clean-target-boehm-gc \
@@ -1696,8 +1701,9 @@ all-libiberty:
 all-build-libiberty: configure-build-libiberty
 
 configure-target-libffi: $(ALL_GCC_C) 
+configure-target-libjRateCore: $(ALL_GCC_CXX) configure-target-libjava
 configure-target-libjava: $(ALL_GCC_C) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi
-all-target-libjava: all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi
+all-target-libjava: all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi all-target-libjRateCore
 configure-target-libstdc++-v3: $(ALL_GCC_C)
 all-target-libstdc++-v3: all-target-libiberty
 all-libtool:
@@ -1772,6 +1778,7 @@ all-target-libiberty: configure-target-l
 all-target-gperf: configure-target-gperf
 all-target-examples: configure-target-examples
 all-target-libffi: configure-target-libffi
+all-target-libjRateCore: configure-target-libjRateCore
 all-target-libjava: configure-target-libjava
 all-target-zlib: configure-target-zlib
 all-target-boehm-gc: configure-target-boehm-gc
diff -Nurp ../gcc/Makefile.tpl ./Makefile.tpl
--- ../gcc/Makefile.tpl	Fri Jul  4 21:37:08 2003
+++ ./Makefile.tpl	Fri Aug  5 22:03:40 2005
@@ -1436,8 +1436,9 @@ all-libiberty:
 all-build-libiberty: configure-build-libiberty
 
 configure-target-libffi: $(ALL_GCC_C) 
+configure-target-libjRateCore: $(ALL_GCC_CXX) configure-target-libjava
 configure-target-libjava: $(ALL_GCC_C) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi
-all-target-libjava: all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi
+all-target-libjava: all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi all-target-libjRateCore
 configure-target-libstdc++-v3: $(ALL_GCC_C)
 all-target-libstdc++-v3: all-target-libiberty
 all-libtool:
diff -Nurp ../gcc/config-ml.in ./config-ml.in
--- ../gcc/config-ml.in	Fri Jul  4 14:53:34 2003
+++ ./config-ml.in	Fri Aug  5 22:03:40 2005
@@ -81,7 +81,7 @@ ml_realsrcdir=${srcdir}
 # Scan all the arguments and set all the ones we need.
 
 ml_verbose=--verbose
-for option in ${ml_arguments}
+for option in ${ac_configure_args}
 do
   case $option in
   --*) ;;
@@ -107,7 +107,7 @@ do
 	enableopt=`echo ${option} | sed 's:^--::;s:=.*$::;s:-:_:g'`
 	eval $enableopt="$optarg"
 	;;
-  --norecursion | --no*)
+  --norecursion | --no-recursion)
 	ml_norecursion=yes
 	;;
   --silent | --sil* | --quiet | --q*)
@@ -845,7 +845,7 @@ if [ -n "${multidirs}" ] && [ -z "${ml_n
 
     if eval ${ml_config_env} ${ml_config_shell} ${ml_recprog} \
 	--with-multisubdir=${ml_dir} --with-multisrctop=${multisrctop} \
-	${ml_arguments} ${ml_srcdiroption} ; then
+	${ac_configure_args} ${ml_srcdiroption} ; then
       true
     else
       exit 1
diff -Nurp ../gcc/configure.in ./configure.in
--- ../gcc/configure.in	Fri Jan  2 08:09:48 2004
+++ ./configure.in	Fri Aug  5 22:03:40 2005
@@ -56,6 +56,7 @@ libgcj="target-libffi \
 	target-boehm-gc \
 	target-zlib \
 	target-qthreads \
+	target-libjRateCore \
 	target-libjava"
 
 # these libraries are built for the target environment, and are built after
diff -Nurp ../gcc/gcc/java/check-init.c ./gcc/java/check-init.c
--- ../gcc/gcc/java/check-init.c	Mon Nov 18 09:46:31 2002
+++ ./gcc/java/check-init.c	Fri Aug  5 22:03:40 2005
@@ -491,15 +491,16 @@ check_init (exp, before)
 	  int index = DECL_BIT_INDEX (exp);
 	  /* We don't want to report and mark as non initialized class
 	     initialization flags. */
-	  if (! LOCAL_CLASS_INITIALIZATION_FLAG_P (exp)
-	      && index >= 0 && ! ASSIGNED_P (before, index))
-	    {
-	      parse_error_context 
-		(wfl, "Variable `%s' may not have been initialized",
-		 IDENTIFIER_POINTER (DECL_NAME (exp)));
-	      /* Suppress further errors. */
-	      DECL_BIT_INDEX (exp) = -2;
-	    }
+          
+/* 	  if (! LOCAL_CLASS_INITIALIZATION_FLAG_P (exp) */
+/* 	      && index >= 0 && ! ASSIGNED_P (before, index)) */
+/* 	    { */
+/* 	      parse_error_context  */
+/* 		(wfl, "Variable `%s' may not have been initialized", */
+/* 		 IDENTIFIER_POINTER (DECL_NAME (exp))); */
+/* 	      /\* Suppress further errors. *\/ */
+/* 	      DECL_BIT_INDEX (exp) = -2; */
+/* 	    } */
 	}
       break;
 
diff -Nurp ../gcc/gcc/java/class.c ./gcc/java/class.c
--- ../gcc/gcc/java/class.c	Fri Feb 28 14:53:07 2003
+++ ./gcc/java/class.c	Fri Aug  5 22:03:40 2005
@@ -702,6 +702,7 @@ add_field (class, name, field_type, flag
   if (flags & ACC_FINAL) FIELD_FINAL (field) = 1;
   if (flags & ACC_VOLATILE) FIELD_VOLATILE (field) = 1;
   if (flags & ACC_TRANSIENT) FIELD_TRANSIENT (field) = 1;
+  if (flags & ACC_PHANTOM)   FIELD_PHANTOM (field) = 1;
   if (is_static)
     {
       FIELD_STATIC (field) = 1;
@@ -1138,6 +1139,8 @@ get_access_flags_from_decl (decl)
 	access_flags |= ACC_VOLATILE;
       if (FIELD_TRANSIENT (decl))
 	access_flags |= ACC_TRANSIENT;
+      if (FIELD_PHANTOM (decl))
+          access_flags |= ACC_PHANTOM; 
       return access_flags;
     }
   if (TREE_CODE (decl) == TYPE_DECL)
@@ -1602,6 +1605,8 @@ make_class_data (type)
 		    build (PLUS_EXPR, dtable_ptr_type,
 			   build1 (ADDR_EXPR, dtable_ptr_type, class_dtable_decl),
 			   dtable_start_offset));
+
+  PUSH_FIELD_VALUE (temp, "memory_area", null_pointer_node);
   if (! flag_hash_synchronization)
     PUSH_FIELD_VALUE (temp, "sync_info", null_pointer_node);
   FINISH_RECORD_CONSTRUCTOR (temp);
@@ -2063,7 +2068,7 @@ layout_class_method (this_class, super_c
       DECL_CONSTRUCTOR_P (method_decl) = 1;
       build_java_argument_signature (TREE_TYPE (method_decl));
     }
-  else if (! METHOD_STATIC (method_decl) && !DECL_ARTIFICIAL (method_decl))
+  else if (! METHOD_STATIC (method_decl) )
     {
       tree method_sig = 
 	build_java_argument_signature (TREE_TYPE (method_decl));
diff -Nurp ../gcc/gcc/java/decl.c ./gcc/java/decl.c
--- ../gcc/gcc/java/decl.c	Wed Feb 12 17:38:02 2003
+++ ./gcc/java/decl.c	Fri Aug  5 22:03:40 2005
@@ -665,6 +665,9 @@ java_init_decl_processing ()
   /* This isn't exactly true, but it is what we have in the source.
      There is an unresolved issue here, which is whether the vtable
      should be marked by the GC.  */
+  PUSH_FIELD (object_type_node, field, "memory_area",
+              build_pointer_type (object_type_node));
+  
   if (! flag_hash_synchronization)
     PUSH_FIELD (object_type_node, field, "sync_info",
 		build_pointer_type (object_type_node));
@@ -673,6 +676,7 @@ java_init_decl_processing ()
   FINISH_RECORD (object_type_node);
 
   field_type_node = make_node (RECORD_TYPE);
+
   field_ptr_type_node = build_pointer_type (field_type_node);
   method_type_node = make_node (RECORD_TYPE);
   method_ptr_type_node = build_pointer_type (method_type_node);
@@ -789,6 +793,12 @@ java_init_decl_processing ()
   DECL_IS_MALLOC (alloc_no_finalizer_node) = 1;
 
   t = tree_cons (NULL_TREE, ptr_type_node, endlink);
+  soft_increment_reference_count_node =
+      builtin_function ("_Jv_IncrementReferenceCount",
+                        build_function_type (ptr_type_node, t),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+
+  t = tree_cons (NULL_TREE, ptr_type_node, endlink);
   soft_initclass_node = builtin_function ("_Jv_InitClass",
 					  build_function_type (void_type_node,
 							       t),
@@ -809,6 +819,14 @@ java_init_decl_processing ()
     = builtin_function ("_Jv_MonitorExit", t, 0, NOT_BUILT_IN,
 			NULL, NULL_TREE);
   
+  soft_on_synchronized_method_enter_node =
+      builtin_function ("_Jv_OnSynchronizedMethodEnter", t, 0, NOT_BUILT_IN,
+			NULL, NULL_TREE);
+  
+  soft_on_synchronized_method_exit_node =
+      builtin_function ("_Jv_OnSynchronizedMethodExit", t, 0, NOT_BUILT_IN,
+			NULL, NULL_TREE);
+
   t = tree_cons (NULL_TREE, int_type_node, 
 		 tree_cons (NULL_TREE, int_type_node, endlink));
   soft_newarray_node
@@ -867,8 +885,53 @@ java_init_decl_processing ()
     = builtin_function ("_Jv_IsInstanceOf",
 			build_function_type (boolean_type_node, t),
 			0, NOT_BUILT_IN, NULL, NULL_TREE);
+
+  t = tree_cons (NULL_TREE, object_ptr_type_node,
+		 tree_cons (NULL_TREE, object_ptr_type_node, endlink));
+  soft_field_write_barrier_node
+    = builtin_function ("_Jv_FieldWriteBarrier",
+                        build_function_type (void_type_node, t),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+
+  t = tree_cons (NULL_TREE, object_ptr_type_node,
+		 tree_cons (NULL_TREE, object_ptr_type_node, endlink));
+  soft_phantom_field_write_barrier_node
+      = builtin_function ("_Jv_PhantomFieldWriteBarrier",
+                          build_function_type (void_type_node, t),
+                          0, NOT_BUILT_IN, NULL, NULL_TREE);
+
+  
   t = tree_cons (NULL_TREE, object_ptr_type_node,
 		 tree_cons (NULL_TREE, object_ptr_type_node, endlink));
+  
+  soft_static_field_write_barrier_node
+    = builtin_function ("_Jv_StaticFieldWriteBarrier",
+                        build_function_type (void_type_node, t),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+  
+  
+  t = tree_cons (NULL_TREE, object_ptr_type_node,
+		 tree_cons (NULL_TREE, object_ptr_type_node, endlink));
+
+  soft_local_var_write_barrier_node
+    = builtin_function ("_Jv_LocalVarWriteBarrier",
+                        build_function_type (void_type_node, t),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+
+
+  soft_on_method_enter_node =
+      builtin_function ("_Jv_OnMethodEnter",
+                        build_function_type (void_type_node, endlink),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+  
+  soft_on_method_exit_node =
+      builtin_function ("_Jv_OnMethodExit",
+                        build_function_type (void_type_node, endlink),
+                        0, NOT_BUILT_IN, NULL, NULL_TREE);
+  
+  t = tree_cons (NULL_TREE, object_ptr_type_node,
+		 tree_cons (NULL_TREE, object_ptr_type_node, endlink)); 
+  
   soft_checkarraystore_node
     = builtin_function ("_Jv_CheckArrayStore",
 			build_function_type (void_type_node, t),
@@ -1761,8 +1824,8 @@ complete_start_java_method (fndecl)
 	lock = build_class_ref (DECL_CONTEXT (fndecl));
       else
 	lock = DECL_ARGUMENTS (fndecl);
-      BUILD_MONITOR_ENTER (enter, lock);
-      BUILD_MONITOR_EXIT (exit, lock);
+      BUILD_SYNCHRONIZED_METHOD_ENTER (enter, lock);
+      BUILD_SYNCHRONIZED_METHOD_EXIT (exit, lock);
       if (!CLASS_FROM_SOURCE_P (DECL_CONTEXT (fndecl)))
 	{
 	  expand_expr_stmt (enter);
@@ -1779,6 +1842,28 @@ complete_start_java_method (fndecl)
 	  BLOCK_EXPR_BODY (function_body) = lock;
 	}
     }
+  else
+    {
+      /* jRate additions to intercept method enter/exit point */
+      tree function_body = DECL_FUNCTION_BODY (fndecl);
+      /* [MGD] function_body is null if compiling from bytecode rather
+       * than Java source -- since _Jv_OnMethodEnter() and
+       * _Jv_OnMethodExit() don't do anything right now, we just don't
+       * put in this instrumentation (for now). */
+      if (function_body)
+        {
+          tree onEnter, onExit, wrappedBody;
+          BUILD_ON_METHOD_ENTER(onEnter);
+          BUILD_ON_METHOD_EXIT(onExit);
+          tree body = BLOCK_EXPR_BODY (function_body);
+          wrappedBody = build (COMPOUND_EXPR, void_type_node,
+                               onEnter,
+                               build (TRY_FINALLY_EXPR, void_type_node,
+                                      body, onExit));
+          TREE_SIDE_EFFECTS (wrappedBody) = 1;
+          BLOCK_EXPR_BODY (function_body) = wrappedBody; 
+        }
+    }
 }
 
 void
diff -Nurp ../gcc/gcc/java/expr.c ./gcc/java/expr.c
--- ../gcc/gcc/java/expr.c	Tue Mar 11 14:34:40 2003
+++ ./gcc/java/expr.c	Fri Aug  5 22:03:40 2005
@@ -1302,6 +1302,116 @@ expand_java_INSTANCEOF (type)
   push_value (value);
 }
 
+tree
+build_field_write_barrier (from, to)
+     tree from, to;
+{
+  tree check;
+
+  if (!flag_scope_check)
+    {
+      tree type_p = TREE_TYPE (from);
+      warning ("jRate-gcj: NOT patching field");
+      return build1 (NOP_EXPR, type_p, from);
+    }
+
+  check = build (CALL_EXPR, void_type_node,
+                 build_address_of (soft_field_write_barrier_node),
+                 tree_cons (NULL_TREE, from,
+                            build_tree_list (NULL_TREE, to)),
+                 NULL_TREE);
+
+  TREE_SIDE_EFFECTS (check) = 1;
+
+  return check;
+}
+
+tree
+build_phantom_field_write_barrier (from, to)
+     tree from, to;
+{
+  tree check;
+
+  if (!flag_scope_check)
+    {
+      tree type_p = TREE_TYPE (from);
+      warning ("jRate-gcj: NOT patching phantom field");
+      return build1 (NOP_EXPR, type_p, from);
+    }
+
+  check = build (CALL_EXPR, void_type_node,
+                 build_address_of (soft_phantom_field_write_barrier_node),
+                 tree_cons (NULL_TREE, from,
+                            build_tree_list (NULL_TREE, to)),
+                 NULL_TREE);
+
+  TREE_SIDE_EFFECTS (check) = 1;
+
+  return check;
+}
+
+
+tree
+build_static_field_write_barrier (from, to)
+     tree from, to;
+{
+  tree check;
+
+  if (!flag_scope_check)
+    {
+      tree type_p = TREE_TYPE (null_pointer_node);
+      warning ("jRate-gcj: NOT patching static field");
+      return build1 (NOP_EXPR, type_p, null_pointer_node);
+    }
+
+  check = build (CALL_EXPR, void_type_node,
+                 build_address_of (soft_static_field_write_barrier_node),
+                 tree_cons (NULL_TREE, null_pointer_node,
+                            build_tree_list (NULL_TREE, to)),
+                 NULL_TREE);
+
+  TREE_SIDE_EFFECTS (check) = 1;
+
+  return check;
+}
+
+
+tree
+build_local_var_write_barrier (from, to)
+     tree from, to;
+{
+  tree check;
+
+  if (!flag_scope_check)
+    {
+      tree type_p = TREE_TYPE (from);
+      warning ("jRate-gcj: NOT patching local var");
+      return build1 (NOP_EXPR, type_p, from);
+    }
+
+  check = build (CALL_EXPR, void_type_node,
+                 build_address_of (soft_local_var_write_barrier_node),
+                 tree_cons (NULL_TREE, from,
+                            build_tree_list (NULL_TREE, to)),
+                 NULL_TREE);
+
+  TREE_SIDE_EFFECTS (check) = 1;
+
+  return check;
+}
+
+tree
+build_increment_reference_count (target)
+     tree target;
+{
+    tree retVal = build (CALL_EXPR, ptr_type_node,
+                         build_address_of (soft_increment_reference_count_node),
+                         target, NULL_TREE);
+
+    TREE_SIDE_EFFECTS (retVal) = 1; 
+    return retVal;
+}
+
 static void
 expand_java_CHECKCAST (type)
      tree type;
@@ -2412,6 +2522,8 @@ expand_java_field_op (is_static, is_putt
       return;
     }
 
+  // Keep a reference to the current Object in self_ref
+  tree self_ref = field_ref;
   field_ref = build_field_ref (field_ref, self_type, field_name);
   if (is_static)
     field_ref = build_class_init (self_type, field_ref);
@@ -2437,6 +2549,14 @@ expand_java_field_op (is_static, is_putt
 		warning_with_decl (field_decl, "assignment to final field `%s' not in constructor");
 	    }
 	}
+      if (JREFERENCE_TYPE_P(field_type)
+          && field_type != rawdata_ptr_type_node) 
+        {
+          tree check = (FIELD_STATIC (field_decl)) ?
+            build_static_field_write_barrier(self_ref, new_value) :
+            build_field_write_barrier(self_ref, new_value);
+          expand_expr_stmt (check);
+        }
       expand_assignment (field_ref, new_value, 0, 0);
     }
   else
@@ -2525,6 +2645,7 @@ java_expand_expr (exp, target, tmode, mo
 	    START_RECORD_CONSTRUCTOR (temp, object_type_node);
 	    PUSH_FIELD_VALUE (temp, "vtable",
 			      get_primitive_array_vtable (element_type));
+            PUSH_FIELD_VALUE (temp, "memory_area", null_pointer_node);
 	    if (! flag_hash_synchronization)
 	      PUSH_FIELD_VALUE (temp, "sync_info", null_pointer_node);
 	    FINISH_RECORD_CONSTRUCTOR (temp);
diff -Nurp ../gcc/gcc/java/gcj.texi ./gcc/java/gcj.texi
--- ../gcc/gcc/java/gcj.texi	Sun Mar 30 11:01:58 2003
+++ ./gcc/java/gcj.texi	Fri Aug  5 22:03:40 2005
@@ -406,6 +406,17 @@ improve performance for code which store
 It is safe to use this option if you are sure your code will never throw an 
 @code{ArrayStoreException}.
 
+@item -fno-scope-check
+Don't generate object reference store checks for RTSJ memory
+referencing requirements.  When storing object references, the
+real-time Java specification mandates a runtime check for
+assignability; an object X may only refer to another object Y if Y is
+guaranteed to be live at least as long as X (so that dangling pointers
+cannot be manufactured).  With this option, these runtime checks are
+omitted.  This can improve performance.  It is safe to use this option
+if you are sure your code will never throw an
+@code{IllegalAssignmentError}.
+
 @item -fjni
 With @command{gcj} there are two options for writing native methods: CNI
 and JNI@.  By default @command{gcj} assumes you are using CNI@.  If you are
diff -Nurp ../gcc/gcc/java/java-tree.h ./gcc/java/java-tree.h
--- ../gcc/gcc/java/java-tree.h	Mon Nov 18 12:13:35 2002
+++ ./gcc/java/java-tree.h	Fri Aug  5 22:03:40 2005
@@ -222,6 +222,9 @@ extern int flag_indirect_dispatch;
 /* When zero, don't generate runtime array store checks. */
 extern int flag_store_check;
 
+/* When zero, don't generate runtime RTSJ object reference checks. */
+extern int flag_scope_check;
+
 /* Encoding used for source files.  */
 extern const char *current_encoding;
 
@@ -374,6 +377,16 @@ enum java_tree_index
   JTI_ALLOC_OBJECT_NODE,
   JTI_ALLOC_NO_FINALIZER_NODE,
   JTI_SOFT_INSTANCEOF_NODE,
+  JTI_SOFT_FIELD_WRITE_BARRIER_NODE,
+  JTI_SOFT_PHANTOM_FIELD_WRITE_BARRIER_NODE,
+  JTI_SOFT_STATIC_FIELD_WRITE_BARRIER_NODE,
+  JTI_SOFT_LOCAL_VAR_WRITE_BARRIER_NODE,
+  JTI_SOFT_ON_METHOD_ENTER_NODE,
+  JTI_SOFT_ON_METHOD_EXIT_NODE,
+  JTI_SOFT_ON_SYNCHRONIZED_METHOD_ENTER_NODE,
+  JTI_SOFT_ON_SYNCHRONIZED_METHOD_EXIT_NODE,
+  JTI_SOFT_INCREMENT_REFERENCE_COUNT_NODE,
+  
   JTI_SOFT_CHECKCAST_NODE,
   JTI_SOFT_INITCLASS_NODE,
   JTI_SOFT_NEWARRAY_NODE,
@@ -633,6 +646,26 @@ extern GTY(()) tree java_global_trees[JT
   java_global_trees[JTI_ALLOC_NO_FINALIZER_NODE]
 #define soft_instanceof_node \
   java_global_trees[JTI_SOFT_INSTANCEOF_NODE]
+
+#define soft_phantom_field_write_barrier_node \
+   java_global_trees[JTI_SOFT_PHANTOM_FIELD_WRITE_BARRIER_NODE] 
+#define soft_field_write_barrier_node \
+   java_global_trees[JTI_SOFT_FIELD_WRITE_BARRIER_NODE] 
+#define soft_static_field_write_barrier_node \
+   java_global_trees[JTI_SOFT_STATIC_FIELD_WRITE_BARRIER_NODE] 
+#define soft_local_var_write_barrier_node \
+   java_global_trees[JTI_SOFT_LOCAL_VAR_WRITE_BARRIER_NODE]
+#define soft_on_method_enter_node \
+   java_global_trees[JTI_SOFT_ON_METHOD_ENTER_NODE]
+#define soft_on_method_exit_node \
+   java_global_trees[JTI_SOFT_ON_METHOD_EXIT_NODE]
+#define soft_on_synchronized_method_enter_node \
+   java_global_trees[JTI_SOFT_ON_SYNCHRONIZED_METHOD_ENTER_NODE]
+#define soft_on_synchronized_method_exit_node \
+   java_global_trees[JTI_SOFT_ON_SYNCHRONIZED_METHOD_EXIT_NODE]
+#define soft_increment_reference_count_node \
+   java_global_trees[JTI_SOFT_INCREMENT_REFERENCE_COUNT_NODE]
+
 #define soft_checkcast_node \
   java_global_trees[JTI_SOFT_CHECKCAST_NODE]
 #define soft_initclass_node \
@@ -1180,6 +1213,13 @@ extern tree build_java_soft_divmod PARAM
 extern tree binary_numeric_promotion PARAMS ((tree, tree, tree *, tree *));
 extern tree build_java_arrayaccess PARAMS ((tree, tree, tree));
 extern tree build_java_arraystore_check PARAMS ((tree, tree));
+
+extern tree build_phantom_field_write_barrier PARAMS ((tree, tree));
+extern tree build_field_write_barrier PARAMS ((tree, tree));
+extern tree build_static_field_write_barrier PARAMS ((tree, tree));
+extern tree build_local_var_write_barrier PARAMS ((tree, tree));
+extern tree build_increment_reference_count PARAMS ((tree));
+
 extern tree build_newarray PARAMS ((int, tree));
 extern tree build_anewarray PARAMS ((tree, tree));
 extern tree build_new_array PARAMS ((tree, tree));
@@ -1351,6 +1391,7 @@ extern void java_inlining_map_static_ini
 #define FIELD_FINAL(DECL) DECL_FINAL (DECL)
 #define FIELD_VOLATILE(DECL) DECL_LANG_FLAG_4 (DECL)
 #define FIELD_TRANSIENT(DECL) DECL_LANG_FLAG_5 (DECL)
+#define FIELD_PHANTOM(DECL) TREE_PHANTOM (DECL)
 
 /* Access flags etc for a class (a TYPE_DECL): */
 
@@ -1716,6 +1757,42 @@ extern tree *type_map;
     TREE_SIDE_EFFECTS (WHERE) = 1;				\
   }
 
+#define BUILD_SYNCHRONIZED_METHOD_ENTER(WHERE, ARG)             \
+  {                                                             \
+    (WHERE) = build (CALL_EXPR, int_type_node,                  \
+                     build_address_of (soft_on_synchronized_method_enter_node), \
+                     build_tree_list (NULL_TREE, (ARG)),        \
+                     NULL_TREE);                                \
+    TREE_SIDE_EFFECTS (WHERE) = 1;                              \
+  }
+
+#define BUILD_SYNCHRONIZED_METHOD_EXIT(WHERE, ARG)              \
+  {                                                             \
+    (WHERE) = build (CALL_EXPR, int_type_node,                  \
+                     build_address_of (soft_on_synchronized_method_exit_node),  \
+                     build_tree_list (NULL_TREE, (ARG)),        \
+                     NULL_TREE);                                \
+    TREE_SIDE_EFFECTS (WHERE) = 1;                              \
+  }
+
+
+#define BUILD_ON_METHOD_ENTER(WHERE)                                 \
+  {                                                                 \
+    (WHERE) = build (CALL_EXPR, int_type_node,                      \
+                     build_address_of (soft_on_method_enter_node),  \
+                     NULL_TREE,  NULL_TREE);                        \
+    TREE_SIDE_EFFECTS (WHERE) = 1;                                  \
+  }
+
+
+#define BUILD_ON_METHOD_EXIT(WHERE)                                \
+  {                                                                \
+    (WHERE) = build (CALL_EXPR, int_type_node,                     \
+                     build_address_of (soft_on_method_exit_node),  \
+                     NULL_TREE,  NULL_TREE);                       \
+    TREE_SIDE_EFFECTS (WHERE) = 1;                                 \
+  }
+
 /* Nonzero if TYPE is an unchecked exception */
 #define IS_UNCHECKED_EXCEPTION_P(TYPE)				\
   (inherits_from_p ((TYPE), runtime_exception_type_node)	\
diff -Nurp ../gcc/gcc/java/jcf-dump.c ./gcc/java/jcf-dump.c
--- ../gcc/gcc/java/jcf-dump.c	Fri Mar 28 16:18:48 2003
+++ ./gcc/java/jcf-dump.c	Fri Aug  5 22:03:40 2005
@@ -368,6 +368,7 @@ DEFUN (print_access_flags, (stream, flag
   if (flags & ACC_STATIC) fprintf (stream, " static");
   if (flags & ACC_FINAL) fprintf (stream, " final");
   if (flags & ACC_TRANSIENT) fprintf (stream, " transient");
+  if (flags & ACC_PHANTOM) fprintf(stream, " __phantom__");
   if (flags & ACC_VOLATILE) fprintf (stream, " volatile");
   if (flags & ACC_NATIVE) fprintf (stream, " native");
   if (flags & ACC_SYNCHRONIZED)
diff -Nurp ../gcc/gcc/java/jcf-write.c ./gcc/java/jcf-write.c
--- ../gcc/gcc/java/jcf-write.c	Thu Apr 10 09:54:08 2003
+++ ./gcc/java/jcf-write.c	Fri Aug  5 22:03:40 2005
@@ -723,6 +723,8 @@ get_access_flags (decl)
 	flags |= ACC_VOLATILE;
       if (FIELD_TRANSIENT (decl))
 	flags |= ACC_TRANSIENT;
+      if (FIELD_PHANTOM (decl))
+          flags |= ACC_PHANTOM;
     }
   return flags;
 }
diff -Nurp ../gcc/gcc/java/jcf.h ./gcc/java/jcf.h
--- ../gcc/gcc/java/jcf.h	Thu Apr 10 09:54:08 2003
+++ ./gcc/java/jcf.h	Fri Aug  5 22:03:40 2005
@@ -244,6 +244,7 @@ typedef struct JCF {
 #define ACC_INTERFACE 0x0200
 #define ACC_ABSTRACT 0x0400
 #define ACC_STRICT 0x0800
+#define ACC_PHANTOM 0x1000
 
 #define ACC_VISIBILITY (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED)
 
diff -Nurp ../gcc/gcc/java/jvspec.c ./gcc/java/jvspec.c
--- ../gcc/gcc/java/jvspec.c	Mon Nov 18 22:37:50 2002
+++ ./gcc/java/jvspec.c	Fri Aug  5 22:03:40 2005
@@ -66,7 +66,7 @@ static const char jvgenmain_spec[] =
 		   %{<femit-class-file} %{<femit-class-files} %{<fencoding*}\
 		   %{<fuse-boehm-gc} %{<fhash-synchronization} %{<fjni}\
 		   %{<findirect-dispatch} \
-		   %{<fno-store-check} %{<foutput-class-dir}\
+		   %{<fno-store-check} %{<fno-scope-check} %{<foutput-class-dir}\
 		   %{<fclasspath*} %{<fCLASSPATH*} %{<fbootclasspath*}\
 		   %{<fextdirs*}\
 		   %{<fuse-divide-subroutine} %{<fno-use-divide-subroutine}\
diff -Nurp ../gcc/gcc/java/keyword.gperf ./gcc/java/keyword.gperf
--- ../gcc/gcc/java/keyword.gperf	Tue Jun 11 12:31:11 2002
+++ ./gcc/java/keyword.gperf	Fri Aug  5 22:03:40 2005
@@ -84,6 +84,7 @@ package, PACKAGE_TK
 this, THIS_TK
 strictfp, STRICT_TK
 # true, false and null aren't keyword. But we match them easily this way
+__phantom__, PHANTOM_TK
 true, TRUE_TK
 false, FALSE_TK
 null, NULL_TK
diff -Nurp ../gcc/gcc/java/keyword.h ./gcc/java/keyword.h
--- ../gcc/gcc/java/keyword.h	Tue Jun 11 12:31:11 2002
+++ ./gcc/java/keyword.h	Fri Aug  5 22:03:40 2005
@@ -1,5 +1,5 @@
-/* C code produced by gperf version 2.7 */
-/* Command-line: gperf -L C -C -F , 0 -p -t -j1 -i 1 -g -o -N java_keyword -k1,4,$ keyword.gperf  */
+/* C code produced by gperf version 2.7.2 */
+/* Command-line: gperf -L C -C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k'1,4,$' keyword.gperf  */
 /* Keyword definition for the GNU compiler for the Java(TM) language.
    Copyright (C) 1997, 1998 Free Software Foundation, Inc.
    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)
@@ -35,7 +35,7 @@ __inline
 #endif
 const struct java_keyword *java_keyword	PARAMS ((const char *, unsigned int));
 
-#define TOTAL_KEYWORDS 52
+#define TOTAL_KEYWORDS 53
 #define MIN_WORD_LENGTH 2
 #define MAX_WORD_LENGTH 12
 #define MIN_HASH_VALUE 7
@@ -44,6 +44,10 @@ const struct java_keyword *java_keyword	
 
 #ifdef __GNUC__
 __inline
+#else
+#ifdef __cplusplus
+inline
+#endif
 #endif
 static unsigned int
 hash (str, len)
@@ -61,7 +65,7 @@ hash (str, len)
       86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
       86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
       86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
-      86, 86, 86, 86, 86, 86, 86,  1, 34,  3,
+      86, 86, 86, 86, 86,  3, 86,  1, 34,  3,
        1,  1, 18,  7, 21, 28, 86, 14,  1, 86,
       18, 20, 37, 86, 15,  6,  2,  5, 40, 36,
       86, 36, 86, 86, 86, 86, 86, 86, 86, 86,
@@ -105,7 +109,8 @@ java_keyword (str, len)
 {
   static const struct java_keyword wordlist[] =
     {
-      {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
+      {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
+      {"", 0},
       {"else", ELSE_TK},
       {"true", TRUE_TK},
       {"case", CASE_TK},
@@ -137,7 +142,7 @@ java_keyword (str, len)
       {"switch", SWITCH_TK},
       {"for", FOR_TK},
       {"char", CHAR_TK},
-      {"", 0},
+      {"__phantom__", PHANTOM_TK},
       {"interface", INTERFACE_TK},
       {"byte", BYTE_TK},
       {"try", TRY_TK},
@@ -163,8 +168,9 @@ java_keyword (str, len)
       {"", 0},
       {"finally", FINALLY_TK},
       {"throw", THROW_TK},
-      {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
       {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
+      {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
+      {"", 0}, {"", 0}, {"", 0},
       {"strictfp", STRICT_TK},
       {"", 0}, {"", 0}, {"", 0}, {"", 0}, {"", 0},
       {"private", PRIVATE_TK}
diff -Nurp ../gcc/gcc/java/lang-options.h ./gcc/java/lang-options.h
--- ../gcc/gcc/java/lang-options.h	Sun Mar  3 02:35:11 2002
+++ ./gcc/java/lang-options.h	Fri Aug  5 22:03:40 2005
@@ -32,6 +32,8 @@ DEFINE_LANG_NAME ("Java")
     N_("Disable automatic array bounds checking") },
   { "-fno-store-check",
     N_("Disable assignability checks for stores into object arrays") },
+  { "-fno-scope-check",
+    N_("Disable assignability checks for RTSJ referencing requirements") },
   { "-fjni",
     N_("Assume native functions are implemented using JNI") },
   { "--bootclasspath",
diff -Nurp ../gcc/gcc/java/lang.c ./gcc/java/lang.c
--- ../gcc/gcc/java/lang.c	Tue Jun 10 13:34:11 2003
+++ ./gcc/java/lang.c	Fri Aug  5 22:03:40 2005
@@ -189,6 +189,9 @@ int flag_indirect_dispatch = 0;
 /* When zero, don't generate runtime array store checks. */
 int flag_store_check = 1;
 
+/* When zero, don't generate runtime RTSJ object reference checks. */
+int flag_scope_check = 1;
+
 /* When nonzero, print extra version information.  */
 static int version_flag = 0;
 
@@ -217,6 +220,7 @@ lang_f_options[] =
   {"optimize-static-class-initialization", &flag_optimize_sci, 1 },
   {"indirect-dispatch", &flag_indirect_dispatch, 1},
   {"store-check", &flag_store_check, 1},
+  {"scope-check", &flag_scope_check, 1},
   {"assert", &flag_assert, 1}
 };
 
diff -Nurp ../gcc/gcc/java/lex.c ./gcc/java/lex.c
--- ../gcc/gcc/java/lex.c	Tue Jan 28 12:48:16 2003
+++ ./gcc/java/lex.c	Fri Aug  5 22:03:40 2005
@@ -1571,7 +1571,7 @@ java_lex (java_lval)
 	    case PUBLIC_TK:       case PROTECTED_TK: case STATIC_TK:
 	    case ABSTRACT_TK:     case FINAL_TK:     case NATIVE_TK:
 	    case SYNCHRONIZED_TK: case TRANSIENT_TK: case VOLATILE_TK:
-	    case PRIVATE_TK:      case STRICT_TK:
+	    case PRIVATE_TK:      case STRICT_TK:    case PHANTOM_TK: 
 	      SET_MODIFIER_CTX (kw->token);
 	      return MODIFIER_TK;
 	    case FLOAT_TK:
diff -Nurp ../gcc/gcc/java/parse-scan.y ./gcc/java/parse-scan.y
--- ../gcc/gcc/java/parse-scan.y	Mon Sep 30 09:57:43 2002
+++ ./gcc/java/parse-scan.y	Fri Aug  5 22:03:40 2005
@@ -164,8 +164,8 @@ extern int flag_assert;
 %token   PUBLIC_TK       PRIVATE_TK         PROTECTED_TK
 %token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK
 %token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK
-%token   PAD_TK          ABSTRACT_TK        MODIFIER_TK
-%token   STRICT_TK
+%token   PAD_TK          ABSTRACT_TK        STRICT_TK
+%token   PHANTOM_TK MODIFIER_TK
 
 /* Keep those two in order, too */
 %token   DECR_TK INCR_TK
diff -Nurp ../gcc/gcc/java/parse.h ./gcc/java/parse.h
--- ../gcc/gcc/java/parse.h	Sun Aug  4 17:45:31 2002
+++ ./gcc/java/parse.h	Fri Aug  5 22:03:40 2005
@@ -74,7 +74,7 @@ extern tree stabilize_reference PARAMS (
 /* Accepted modifiers */
 #define CLASS_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_FINAL|ACC_STRICT
 #define FIELD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_FINAL| \
-                        ACC_STATIC|ACC_TRANSIENT|ACC_VOLATILE
+                        ACC_STATIC|ACC_TRANSIENT|ACC_VOLATILE|ACC_PHANTOM
 #define METHOD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_ABSTRACT| \
 			 ACC_STATIC|ACC_FINAL|ACC_SYNCHRONIZED|ACC_NATIVE| \
 			 ACC_STRICT
@@ -762,7 +762,7 @@ struct parser_ctxt {
 
   /* This section is defined only if we compile jc1 */
 #ifndef JC1_LITE
-  tree modifier_ctx [12];	    /* WFL of modifiers */
+  tree modifier_ctx [13];           /* WFL of modifiers */
   tree class_type;		    /* Current class */
   tree function_decl;	            /* Current function decl, save/restore */
 
diff -Nurp ../gcc/gcc/java/parse.y ./gcc/java/parse.y
--- ../gcc/gcc/java/parse.y	Fri May  2 19:36:56 2003
+++ ./gcc/java/parse.y	Fri Aug  5 22:03:40 2005
@@ -46,6 +46,7 @@ Some rules have been modified to support
 definitions and other extensions.  */
 
 %{
+#include <stdio.h>  
 #include "config.h"
 #include "system.h"
 #include <dirent.h>
@@ -155,6 +156,8 @@ static void maybe_absorb_scoping_blocks 
 static tree build_method_invocation PARAMS ((tree, tree));
 static tree build_new_invocation PARAMS ((tree, tree));
 static tree build_assignment PARAMS ((int, int, tree, tree));
+static tree build_field_assignment PARAMS ((int, int, tree, tree));
+static tree build_other_assignment PARAMS ((int, int, tree, tree));
 static tree build_binop PARAMS ((enum tree_code, int, tree, tree));
 static tree patch_assignment PARAMS ((tree, tree));
 static tree patch_binop PARAMS ((tree, tree, tree));
@@ -188,6 +191,7 @@ static tree resolve_type_during_patch PA
 static tree build_this PARAMS ((int));
 static tree build_wfl_wrap PARAMS ((tree, int));
 static tree build_return PARAMS ((int, tree));
+static tree build_void_return PARAMS ((int));
 static tree patch_return PARAMS ((tree));
 static tree maybe_access_field PARAMS ((tree, tree, tree));
 static int complete_function_arguments PARAMS ((tree));
@@ -480,7 +484,7 @@ static GTY(()) tree src_parse_roots[1];
 %token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK
 %token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK
 %token   PAD_TK          ABSTRACT_TK        STRICT_TK
-%token   MODIFIER_TK
+%token   PHANTOM_TK      MODIFIER_TK
 
 /* Keep those two in order, too */
 %token   DECR_TK INCR_TK
@@ -561,10 +565,10 @@ static GTY(()) tree src_parse_roots[1];
 			exclusive_or_expression inclusive_or_expression
 			conditional_and_expression conditional_or_expression
 			conditional_expression assignment_expression
-			left_hand_side assignment for_header for_begin
-			constant_expression do_statement_begin empty_statement
-			switch_statement synchronized_statement throw_statement
-			try_statement assert_statement
+			left_hand_side field_assignment other_assignment
+                        for_header for_begin constant_expression do_statement_begin
+                        empty_statement switch_statement synchronized_statement
+                        throw_statement try_statement assert_statement
 			switch_expression switch_block
 			catches catch_clause catch_clause_parameter finally
 			anonymous_class_creation trap_overflow_corner_case
@@ -799,14 +803,18 @@ type_import_on_demand_declaration:
 
 type_declaration:
 	class_declaration
-		{ end_class_declaration (0); }
+		{
+                    end_class_declaration (0); }
+
 |	interface_declaration
 		{ end_class_declaration (0); }
+
 |	empty_statement
+
 |	error
 		{
 		  YYERROR_NOW;
-		  yyerror ("Class or interface declaration expected");
+		  yyerror (">> Class or interface declaration expected");
 		}
 ;
 
@@ -835,7 +843,9 @@ modifiers:
 /* 19.8.1 Production from $8.1: Class Declaration */
 class_declaration:
 	modifiers CLASS_TK identifier super interfaces
-		{ create_class ($1, $3, $4, $5); }
+		{
+                    create_class ($1, $3, $4, $5);
+                }
 	class_body
 		{;}
 |	CLASS_TK identifier super interfaces
@@ -1553,7 +1563,8 @@ expression_statement:
 ;
 
 statement_expression:
-	assignment
+        field_assignment        
+|	other_assignment
 |	pre_increment_expression
 |	pre_decrement_expression
 |	post_increment_expression
@@ -1820,9 +1831,17 @@ continue_statement:
 
 return_statement:
 	RETURN_TK SC_TK
-		{ $$ = build_return ($1.location, NULL_TREE); }
+		{ $$ = build_void_return ($1.location); }
 |	RETURN_TK expression SC_TK
-		{ $$ = build_return ($1.location, $2); }
+		{
+/*                     tree args = tree_cons(NULL_TREE, $2, NULL_TREE); */
+/*                     tree class =  BUILD_ID_WFL (GET_IDENTIFIER ("Object")); */
+/*                     tree method = BUILD_ID_WFL (GET_IDENTIFIER ("__returnValue")); */
+/*                     tree invok = build_method_invocation (method, args); */
+/*                     invok = make_qualified_primary(class, invok, $1.location); */
+/*                     $$ = build_return ($1.location, invok); */
+                    $$ = build_return ($1.location, $2);
+                }
 |	RETURN_TK error
 		{yyerror ("Missing term"); RECOVER;}
 |	RETURN_TK expression error
@@ -2609,12 +2628,25 @@ conditional_expression:		/* Error handli
 
 assignment_expression:
 	conditional_expression
-|	assignment
+|	field_assignment
+|       other_assignment
 ;
 
-assignment:
+field_assignment:
+        /* Assignemnt to local variable */
+        field_access assignment_operator assignment_expression
+                { $$ = build_field_assignment($2.token, $2.location, $1, $3);}
+|	field_access assignment_operator error
+		{
+		  YYNOT_TWICE yyerror ("Missing term");
+		  DRECOVER (assign);
+		}
+;
+
+other_assignment:
 	left_hand_side assignment_operator assignment_expression
-		{ $$ = build_assignment ($2.token, $2.location, $1, $3); }
+		{ $$ = build_other_assignment ($2.token, $2.location, $1, $3); }
+        
 |	left_hand_side assignment_operator error
 		{
 		  YYNOT_TWICE yyerror ("Missing term");
@@ -2622,9 +2654,9 @@ assignment:
 		}
 ;
 
+
 left_hand_side:
 	name
-|	field_access
 |	array_access
 ;
 
@@ -3233,6 +3265,7 @@ java_accstring_lookup (flags)
   if (flags & ACC_SYNCHRONIZED) COPY_RETURN ("synchronized");
   if (flags & ACC_VOLATILE) COPY_RETURN ("volatile");
   if (flags & ACC_TRANSIENT) COPY_RETURN ("transient");
+  if (flags & ACC_PHANTOM) COPY_RETURN ("__phantom__");
   if (flags & ACC_NATIVE) COPY_RETURN ("native");
   if (flags & ACC_INTERFACE) COPY_RETURN ("interface");
   if (flags & ACC_ABSTRACT) COPY_RETURN ("abstract");
@@ -4582,6 +4615,10 @@ method_header (flags, type, mdecl, throw
 	   IDENTIFIER_POINTER (EXPR_WFL_NODE (id)));
     }
 
+  /* Methods can't be phantom */
+  if (flags & ACC_PHANTOM)
+      parse_error_context (id, "method `%s' can't be __phantom__. This modifier only applies to references.", IDENTIFIER_POINTER (EXPR_WFL_NODE (id)));
+  
   /* A native method can't be strictfp.  */
   if ((flags & ACC_NATIVE) && (flags & ACC_STRICT))
     parse_error_context (id, "native method `%s' can't be strictfp",
@@ -4594,6 +4631,10 @@ method_header (flags, type, mdecl, throw
     parse_error_context (id, "method `%s' can't be volatile",
 			 IDENTIFIER_POINTER (EXPR_WFL_NODE (id)));
 
+    if ((flags & ACC_PHANTOM))
+        parse_error_context (id, "method `%s' can't be __phantom__",
+                             IDENTIFIER_POINTER (EXPR_WFL_NODE (id)));
+
   /* Things to be checked when declaring a constructor */
   if (!type)
     {
@@ -4612,6 +4653,7 @@ method_header (flags, type, mdecl, throw
 	  JCONSTRUCTOR_CHECK (flags, ACC_NATIVE, id, "native");
 	  JCONSTRUCTOR_CHECK (flags, ACC_SYNCHRONIZED, id, "synchronized");
 	  JCONSTRUCTOR_CHECK (flags, ACC_STRICT, id, "strictfp");
+          JCONSTRUCTOR_CHECK (flags, ACC_PHANTOM, id, "__phantom__");
 	}
       /* If we found error here, we don't consider it's OK to tread
 	 the method definition as a constructor, for the rest of this
@@ -4915,6 +4957,10 @@ check_modifiers_consistency (flags)
     parse_error_context
       (cl, "Inconsistent member declaration.  At most one of `public', `private', or `protected' may be specified");
 
+  if ((flags & ACC_STATIC) && (flags & ACC_PHANTOM))
+      parse_error_context
+      (cl, "Inconsistent member declaration.  Static member cannot be __phantom__.");
+  
   acc_count = 0;
   cl = NULL_TREE;
   THIS_MODIFIER_ONLY (flags, ACC_FINAL, FINAL_TK, acc_count, cl);
@@ -12676,6 +12722,49 @@ build_assignment (op, op_location, lhs, 
   return assignment;
 }
 
+/* Build an incomplete field assignment expression. */
+static tree
+build_field_assignment (op, op_location, lhs, rhs)
+     int op, op_location;
+     tree lhs, rhs;
+{
+  tree assignment, write_barrier;
+  int is_reference_type = JREFERENCE_TYPE_P(TREE_TYPE(rhs));
+  tree self_ref = TREE_OPERAND (lhs, 0);
+
+  /*
+   * Only emit check in case of reference store.
+   */
+  if (op == ASSIGN_TK
+      && is_reference_type)
+    {
+      self_ref = TREE_OPERAND (self_ref, 0);
+
+      rhs = save_expr (rhs);
+      if (TREE_CODE(rhs) == CONVERT_EXPR)
+        write_barrier = build_field_write_barrier(self_ref, fold(rhs));
+      else
+        write_barrier = build_field_write_barrier(self_ref, rhs);
+      
+      rhs = build (COMPOUND_EXPR, TREE_TYPE(rhs),
+                   write_barrier, rhs);
+      assignment = build (MODIFY_EXPR, NULL_TREE, lhs, rhs);
+      TREE_SIDE_EFFECTS (assignment) = 1;
+      EXPR_WFL_LINECOL (assignment) = op_location;
+      return assignment;
+    }
+  return build_assignment(op, op_location, lhs, rhs);
+}
+
+static tree
+build_other_assignment (op, op_location, lhs, rhs)
+     int op, op_location;
+     tree lhs, rhs;
+{
+    tree retVal = build_assignment(op, op_location, lhs, rhs);
+    return retVal;
+}
+
 /* Print an INTEGER_CST node as decimal in a static buffer, and return
    the buffer.  This is used only for string conversion.  */
 static char *
@@ -12796,13 +12885,25 @@ patch_assignment (node, wfl_op1)
   int error_found = 0;
   int lvalue_from_array = 0;
   int is_return = 0;
-
+  int field_access = 0;
+  int is_static_field_access = 0;
+  int is_reference_type = 0;
+  int is_raw_data = 0;
+  tree write_barrier_lhs = NULL_TREE;
+  int is_phantom = 0;
   EXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (node);
 
   /* Lhs can be a named variable */
-  if (JDECL_P (lvalue))
-    {
+  if (JDECL_P (lvalue)) { 
       lhs_type = TREE_TYPE (lvalue);
+      /* jRate Additions */
+      if (TREE_CODE(lvalue) == VAR_DECL && FIELD_STATIC(lvalue)) {
+          is_static_field_access = 1;
+          field_access = 1;
+          is_reference_type = JREFERENCE_TYPE_P(TREE_TYPE(rhs));
+          is_raw_data = 0;
+      }
+      
     }
   /* Or Lhs can be an array access. */
   else if (TREE_CODE (lvalue) == ARRAY_REF)
@@ -12811,8 +12912,20 @@ patch_assignment (node, wfl_op1)
       lvalue_from_array = 1;
     }
   /* Or a field access */
-  else if (TREE_CODE (lvalue) == COMPONENT_REF)
+  else if (TREE_CODE (lvalue) == COMPONENT_REF) {
+      tree fieldDecl = TREE_OPERAND(lvalue, 1); 
+      is_phantom = FIELD_PHANTOM(fieldDecl);
     lhs_type = TREE_TYPE (lvalue);
+    if (lvalue_from_array == 0) {
+        field_access = 1;
+      if (FIELD_STATIC(lvalue))
+          is_static_field_access = 1;
+      is_reference_type =
+        JREFERENCE_TYPE_P(TREE_TYPE(TREE_OPERAND(lvalue, 1)));
+      is_raw_data =
+          (TREE_TYPE (TREE_OPERAND(lvalue, 1)) == rawdata_ptr_type_node);
+    }
+  }
   /* Or a function return slot */
   else if (TREE_CODE (lvalue) == RESULT_DECL)
     {
@@ -12827,12 +12940,10 @@ patch_assignment (node, wfl_op1)
   /* Otherwise, we might want to try to write into an optimized static
      final, this is an of a different nature, reported further on. */
   else if (TREE_CODE (wfl_op1) == EXPR_WITH_FILE_LOCATION
-	   && resolve_expression_name (wfl_op1, &llvalue))
-    {
+	   && resolve_expression_name (wfl_op1, &llvalue)) {
       lhs_type = TREE_TYPE (lvalue);
     }
-  else
-    {
+  else {
       parse_error_context (wfl_op1, "Invalid left hand side of assignment");
       error_found = 1;
     }
@@ -12935,6 +13046,69 @@ patch_assignment (node, wfl_op1)
 	  			      store_check, index_expr);
     }
 
+  /*
+    jRate Code that takes care of inserting the proper check
+    in the assignment code.
+  */
+    if (!flag_emit_class_files
+        && is_reference_type
+        && field_access
+        && !is_raw_data
+        && TREE_CODE (lvalue) != VAR_DECL) {
+        tree write_barrier;
+        // -- Patching Field Assignment"
+        if (is_phantom) 
+            printf("[parser]>> Patching __phantom__ field\n");
+            
+        write_barrier_lhs = TREE_OPERAND(TREE_OPERAND(lvalue, 0), 0);
+
+        new_rhs = save_expr (new_rhs);
+        if (is_phantom)
+            write_barrier = build_phantom_field_write_barrier(write_barrier_lhs, new_rhs);
+        else
+            write_barrier = build_field_write_barrier(write_barrier_lhs, new_rhs);
+        new_rhs = build (COMPOUND_EXPR, TREE_TYPE(new_rhs),
+                         write_barrier, new_rhs);
+    }
+    
+    if (!flag_emit_class_files &&
+        TREE_CODE (lvalue) == VAR_DECL &&
+        FIELD_STATIC(lvalue)) {
+        if (JREFERENCE_TYPE_P(TREE_TYPE(rhs)) || rhs == null_pointer_node) {
+            tree write_barrier;
+            // -- Patching Field Assignment"
+            new_rhs = save_expr (new_rhs);
+            write_barrier = build_static_field_write_barrier(build_static_field_ref(lvalue),
+                                                             new_rhs); 
+            new_rhs = build (COMPOUND_EXPR, TREE_TYPE(new_rhs),
+                             write_barrier, new_rhs);
+        }
+              
+    }
+
+    /*
+      jRate patching code for Local Variables
+     */
+    
+    if (!flag_emit_class_files
+        && TREE_CODE (lvalue) == VAR_DECL
+        && !FIELD_STATIC(lvalue)) {
+        if (JREFERENCE_TYPE_P(TREE_TYPE(rhs))) {
+            tree write_barrier;
+            // -- Patching Local Var Assignment
+            new_rhs = save_expr (new_rhs);
+            write_barrier =
+                build_local_var_write_barrier(build_address_of(lvalue),
+                                                  new_rhs);
+            new_rhs = build (COMPOUND_EXPR,
+                             TREE_TYPE(new_rhs),
+                             write_barrier,
+                             new_rhs); 
+        }
+              
+    }
+
+    
   /* Final locals can be used as case values in switch
      statement. Prepare them for this eventuality. */
   if (TREE_CODE (lvalue) == VAR_DECL
@@ -14879,6 +15053,16 @@ build_this (location)
    to be returned. */
 
 static tree
+build_void_return (location)
+     int location;     
+{
+    tree node = build1 (RETURN_EXPR, NULL_TREE, NULL_TREE);
+    EXPR_WFL_LINECOL (node) = location;
+    node = build_debugable_stmt (location, node);
+    return node;
+}
+
+static tree
 build_return (location, op)
      int location;
      tree op;
@@ -14898,6 +15082,7 @@ patch_return (node)
   tree mtype = TREE_TYPE (TREE_TYPE (current_function_decl));
   int error_found = 0;
 
+  
   TREE_TYPE (node) = error_mark_node;
   EXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (node);
 
@@ -14947,13 +15132,27 @@ patch_return (node)
   /* If we have a return_exp, build a modify expression and expand
      it. Note: at that point, the assignment is declared valid, but we
      may want to carry some more hacks */
-  if (return_exp)
-    {
+  if (return_exp) {
       tree exp = java_complete_tree (return_exp);
-      tree modify, patched;
+      tree modify;
+      tree patched;
 
-      if ((patched = patch_string (exp)))
+      if ((patched = patch_string (exp))) {
 	exp = patched;
+      }
+
+      if (JREFERENCE_TYPE_P(mtype)) {
+/*           if (TREE_CODE(exp) == CALL_EXPR) { */
+/*               tree lhs_type = mtype;  */
+/*               tree rhs_type = TREE_TYPE(TREE_OPERAND(TREE_OPERAND(exp, 2), 0)); */
+/*               if (valid_cast_to_p(rhs_type, lhs_type)) */
+          exp = convert (mtype, exp);
+/*               else { */
+/*                   parse_error_context (wfl_operator, "jRate: Incompatible type for return"); */
+/*               } */
+/*           } */
+      }
+              
 
       modify = build (MODIFY_EXPR, NULL_TREE, DECL_RESULT (meth), exp);
       EXPR_WFL_LINECOL (modify) = EXPR_WFL_LINECOL (node);
diff -Nurp ../gcc/gcc/tree.h ./gcc/tree.h
--- ../gcc/gcc/tree.h	Fri Jan  2 23:14:23 2004
+++ ./gcc/tree.h	Fri Aug  5 22:03:40 2005
@@ -146,6 +146,7 @@ struct tree_common GTY(())
   unsigned protected_flag : 1;
   unsigned bounded_flag : 1;
   unsigned deprecated_flag : 1;
+  unsigned phantom_flag : 1;
 
   unsigned lang_flag_0 : 1;
   unsigned lang_flag_1 : 1;
@@ -525,6 +526,8 @@ extern void tree_vec_elt_check_failed PA
    In a CONSTRUCTOR, nonzero means allocate static storage.  */
 #define TREE_STATIC(NODE) ((NODE)->common.static_flag)
 
+#define TREE_PHANTOM(NODE) ((NODE)->common.phantom_flag)
+
 /* In a TARGET_EXPR, WITH_CLEANUP_EXPR, CLEANUP_STMT, or element of a
    block's cleanup list, means that the pertinent cleanup should only be
    executed if an exception is thrown, not on normal exit of its scope.  */
diff -Nurp ../gcc/libjava/Makefile.am ./libjava/Makefile.am
--- ../gcc/libjava/Makefile.am	Sat Mar  1 16:57:52 2003
+++ ./libjava/Makefile.am	Fri Aug  5 22:03:40 2005
@@ -14,14 +14,14 @@ endif
 ## What gets installed, and where.
 ##
 
-if XLIB_AWT
-cond_x_ltlibrary = lib-gnu-awt-xlib.la
-## We require libstdc++-v3 to be in the same build tree.
-xlib_includes = -I../libstdc++-v3/include -I../libstdc++-v3/include/$(target_alias) -I$(srcdir)/../libstdc++-v3/libsupc++
-else
-cond_x_ltlibrary =
-xlib_includes =
-endif
+# if XLIB_AWT
+# cond_x_ltlibrary = lib-gnu-awt-xlib.la
+# ## We require libstdc++-v3 to be in the same build tree.
+# xlib_includes = -I../libstdc++-v3/include -I../libstdc++-v3/include/$(target_alias) -I$(srcdir)/../libstdc++-v3/libsupc++
+# else
+# cond_x_ltlibrary =
+# xlib_includes =
+# endif
 
 toolexeclib_LTLIBRARIES = libgcj.la lib-org-xml-sax.la lib-org-w3c-dom.la $(cond_x_ltlibrary)
 toolexecmainlib_DATA = libgcj.spec
@@ -66,8 +66,8 @@ endif # CANADIAN
 GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8
 
 GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fclasspath= -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c
-GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@
-LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@
+GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) -L$(here)/../libstdc++-v3/src -L$(here)/../libjRateCore -L$(here)/../libjRateCore/.libs $(JC1FLAGS) $(LDFLAGS) -lstdc++ -ljRateCore -ldl -o $@
+LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) -L$(here)/../libstdc++-v3/src -L$(here)/../libjRateCore -L$(here)/../libjRateCore/.libs $(JC1FLAGS) $(LDFLAGS) -lstdc++ -ljRateCore -ldl -o $@
 
 ## We define this because otherwise libtool can be run with different
 ## values of `CXX' and will then get confused and fail to work.  So,
@@ -102,7 +102,8 @@ LIBFFIINCS = @LIBFFIINCS@
 
 INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \
 	$(GCINCS) $(THREADINCS) $(INCLTDL) $(xlib_includes) \
-	$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)
+	$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS) \
+	-I$(JRATE_SRC_DIR)/src/native/src -I$(JRATE_BUILD_DIR)
 
 ## ################################################################
 
@@ -112,19 +113,20 @@ INCLUDES = -I$(top_srcdir) -Iinclude -I$
 
 ## Objects from C++ sources in subdirs.
 nat_files = $(nat_source_files:.cc=.lo)
-x_nat_files = $(x_nat_source_files:.cc=.lo)
+# x_nat_files = $(x_nat_source_files:.cc=.lo)
 ## Objects from C sources in subdirs.
 c_files = $(c_source_files:.c=.lo)
 ## Objects from Java sources in subdirs.
 javao_files = $(java_source_files:.java=.lo) \
 	$(built_java_source_files:.java=.lo)
-x_javao_files = $(x_java_source_files:.java=.lo)
+#x_javao_files = $(x_java_source_files:.java=.lo)
 
 libgcj_la_SOURCES = prims.cc jni.cc exception.cc \
 	resolve.cc defineclass.cc interpret.cc verify.cc \
 	$(nat_source_files)
 EXTRA_libgcj_la_SOURCES = boehm.cc nogc.cc posix-threads.cc no-threads.cc \
 	win32-threads.cc posix.cc win32.cc \
+	jRate-gc.cc \
 	$(c_source_files) $(java_source_files) $(built_java_source_files)
 libgcj_la_DEPENDENCIES = libgcj-@gcc_version@.jar $(javao_files) \
 	$(c_files) $(GCOBJS) $(THREADOBJS) $(PLATFORMOBJS) $(LIBLTDL) \
@@ -135,7 +137,7 @@ libgcj_la_LIBADD = $(javao_files) $(c_fi
 # Include THREADLIBS here to ensure that the correct version of
 # certain linuxthread functions get linked:
 libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(THREADLIBS) \
-	$(LIBLTDL) $(SYS_ZLIBS) \
+	$(LIBLTDL) $(SYS_ZLIBS) $(JRATE_LIBGCJ_LDFLAGS) \
 ## The mysterious backslash is consumed by make.
 	-version-info `grep -v '^\#' $(srcdir)/libtool-version`
 libgcj_la_LINK = $(LIBLINK)
@@ -197,23 +199,23 @@ org/xml/sax/SAXParseException.java \
 org/xml/sax/XMLFilter.java \
 org/xml/sax/XMLReader.java
 
-lib_gnu_awt_xlib_la_SOURCES = $(x_nat_source_files)
-EXTRA_lib_gnu_awt_xlib_la_SOURCES = $(x_java_source_files)
-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar $(x_javao_files)
-lib_gnu_awt_xlib_la_LIBADD = $(x_javao_files)
-lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \
-	@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \
-        -rpath $(toolexeclibdir) \
-## The mysterious backslash is consumed by make.
-        -version-info `grep -v '^\#' $(srcdir)/libtool-version`
-lib_gnu_awt_xlib_la_LINK = $(LIBLINK)
+# lib_gnu_awt_xlib_la_SOURCES = $(x_nat_source_files)
+# EXTRA_lib_gnu_awt_xlib_la_SOURCES = $(x_java_source_files)
+# lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar $(x_javao_files)
+# lib_gnu_awt_xlib_la_LIBADD = $(x_javao_files)
+# lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \
+# 	@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \
+#         -rpath $(toolexeclibdir) \
+# ## The mysterious backslash is consumed by make.
+#         -version-info `grep -v '^\#' $(srcdir)/libtool-version`
+# lib_gnu_awt_xlib_la_LINK = $(LIBLINK)
 
 all_java_source_files = \
     $(java_source_files) \
-    $(built_java_source_files) \
-    $(lib_org_xml_sax_la_SOURCES) \
-    $(lib_org_w3c_dom_la_SOURCES) \
-    $(x_java_source_files)
+    $(built_java_source_files) 
+#    $(lib_org_xml_sax_la_SOURCES) \
+#    $(lib_org_w3c_dom_la_SOURCES) \
+#    $(x_java_source_files)
 
 all_java_class_files = $(all_java_source_files:.java=.class)
 
@@ -274,10 +276,10 @@ libgcj.la: $(libgcj_la_OBJECTS) $(libgcj
 	@GCLIBS@ @LIBFFI@ @ZLIBS@ \
 	-rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(LIBS)
 
-lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)
-	@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))
-	$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \
-	-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)
+# lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)
+# 	@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))
+# 	$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \
+# 	-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)
 
 ## ################################################################
 
@@ -1514,6 +1516,81 @@ javax/transaction/TransactionRolledbackE
 javax/transaction/UserTransaction.java
 
 
+javax_realtime_source_files = \
+javax/realtime/AbsoluteTime.java \
+javax/realtime/AccessViolationError.java \
+javax/realtime/AperiodicParameters.java \
+javax/realtime/Arena.java \
+javax/realtime/ArenaFactory.java \
+javax/realtime/AsyncEvent.java \
+javax/realtime/AsyncEventHandler.java \
+javax/realtime/AsynchronouslyInterruptedException.java \
+javax/realtime/BoundAsyncEventHandler.java \
+javax/realtime/CTMemory.java \
+javax/realtime/CTPrivateMemory.java \
+javax/realtime/Clock.java \
+javax/realtime/ExecutionEligibilityParameters.java \
+javax/realtime/HeapMemory.java \
+javax/realtime/HighResolutionClock.java \
+javax/realtime/HighResolutionTime.java \
+javax/realtime/HighResolutionTimer.java \
+javax/realtime/IllegalAssignmentError.java \
+javax/realtime/ImmortalMemory.java \
+javax/realtime/ImportanceParameters.java \
+javax/realtime/InaccessibleAreaException.java \
+javax/realtime/LTMemory.java \
+javax/realtime/LTPrivateMemory.java \
+javax/realtime/MemoryAccessError.java \
+javax/realtime/MemoryArea.java \
+javax/realtime/MemoryParameters.java \
+javax/realtime/MethodAreaMemory.java \
+javax/realtime/NoHeapRealtimeThread.java \
+javax/realtime/OneShotTimer.java \
+javax/realtime/OneShotTimerImpl.java \
+javax/realtime/OneShotTimerServer.java \
+javax/realtime/POSIXSignalHandler.java \
+javax/realtime/PeriodicParameters.java \
+javax/realtime/PeriodicTimer.java \
+javax/realtime/PeriodicTimerImpl.java \
+javax/realtime/PeriodicTimerServer.java \
+javax/realtime/PooledAsyncEventHandler.java \
+javax/realtime/PrimordialMemory.java \
+javax/realtime/PriorityParameters.java \
+javax/realtime/PriorityQueue.java \
+javax/realtime/PriorityScheduler.java \
+javax/realtime/PrivateScopedMemory.java \
+javax/realtime/ProcessingGroupParameters.java \
+javax/realtime/RationalTime.java \
+javax/realtime/RealtimeClock.java \
+javax/realtime/RealtimeClockPeriodicTimerImpl.java \
+javax/realtime/RealtimeThread.java \
+javax/realtime/RefCountedArena.java \
+javax/realtime/RelativeTime.java \
+javax/realtime/ReleaseParameters.java \
+javax/realtime/Schedulable.java \
+javax/realtime/Scheduler.java \
+javax/realtime/SchedulingParameters.java \
+javax/realtime/ScopedCycleException.java \
+javax/realtime/ScopedMemory.java \
+javax/realtime/SizeEstimator.java \
+javax/realtime/SporadicParameters.java \
+javax/realtime/ThreadedAsyncEventHandler.java \
+javax/realtime/ThrowBoundaryError.java \
+javax/realtime/Timer.java \
+javax/realtime/TimerImpl.java \
+javax/realtime/UnimplementedFeatureError.java \
+javax/realtime/UnknownHappeningException.java \
+javax/realtime/VTMemory.java \
+javax/realtime/jRateSystem.java \
+javax/realtime/util/CountableEventVariable.java \
+javax/realtime/util/EventVariable.java \
+javax/realtime/util/Executor.java \
+javax/realtime/util/PooledExecutor.java \
+javax/realtime/util/ShutdownExecutorException.java \
+javax/realtime/util/ThreadBoundExecutor.java \
+javax/realtime/util/ThreadedExecutor.java
+
+
 ## Java files which are created by configure and thus are in the build
 ## directory.
 built_java_source_files = java/lang/ConcreteProcess.java \
@@ -1771,6 +1848,7 @@ gnu/gcj/runtime/MethodRef.java \
 gnu/gcj/runtime/NameFinder.java \
 gnu/gcj/runtime/SharedLibLoader.java \
 gnu/gcj/runtime/StackTrace.java \
+gnu/gcj/runtime/AddressHolder.java \
 gnu/gcj/runtime/StringBuffer.java \
 gnu/gcj/runtime/VMClassLoader.java \
 gnu/java/io/ClassLoaderObjectInputStream.java \
@@ -2290,9 +2368,10 @@ java/util/zip/ZipFile.java \
 java/util/zip/ZipInputStream.java \
 java/util/zip/ZipOutputStream.java \
 $(rmi_java_source_files) \
-$(awt_java_source_files) \
 $(convert_source_files) \
-$(javax_source_files)
+$(javax_realtime_source_files)
+#$(awt_java_source_files) \
+#$(javax_source_files)
 
 
 java_source_files = $(special_java_source_files) $(ordinary_java_source_files)
@@ -2315,6 +2394,30 @@ c_source_files = \
 
 #java/awt/natToolkit.cc
 
+javax_realtime_nat_source_files = \
+javax/realtime/natArena.cc \
+javax/realtime/natArenaFactory.cc \
+javax/realtime/natAsyncEventHandler.cc \
+javax/realtime/natCTMemory.cc \
+javax/realtime/natCTPrivateMemory.cc \
+javax/realtime/natHeapMemory.cc \
+javax/realtime/natHighResolutionClock.cc \
+javax/realtime/natHighResolutionTime.cc \
+javax/realtime/natImmortalMemory.cc \
+javax/realtime/natLTMemory.cc \
+javax/realtime/natLTPrivateMemory.cc \
+javax/realtime/natMemoryArea.cc \
+javax/realtime/natMethodAreaMemory.cc \
+javax/realtime/natPOSIXSignalHandler.cc \
+javax/realtime/natPriorityScheduler.cc \
+javax/realtime/natRealtimeClock.cc \
+javax/realtime/natRealtimeThread.cc \
+javax/realtime/natRefCountedArena.cc \
+javax/realtime/natScopedMemory.cc \
+javax/realtime/natSizeEstimator.cc \
+javax/realtime/natVTMemory.cc \
+javax/realtime/natjRateSystem.cc
+
 ## This lists all the C++ source files in subdirectories.
 nat_source_files = \
 gnu/gcj/natCore.cc \
@@ -2377,8 +2480,11 @@ java/net/natPlainSocketImpl.cc \
 java/text/natCollator.cc \
 java/util/natResourceBundle.cc \
 java/util/natTimeZone.cc \
+java/util/natIdentityHashMap.cc \
+java/util/natVector.cc \
 java/util/zip/natDeflater.cc \
-java/util/zip/natInflater.cc
+java/util/zip/natInflater.cc \
+$(javax_realtime_nat_source_files)
 
 x_java_source_files = \
 gnu/gcj/xlib/Clip.java \
diff -Nurp ../gcc/libjava/Makefile.in ./libjava/Makefile.in
--- ../gcc/libjava/Makefile.in	Sat Feb 14 14:34:20 2004
+++ ./libjava/Makefile.in	Fri Aug  5 22:03:40 2005
@@ -136,10 +136,10 @@ toolexecmainlibdir = @toolexecmainlibdir
 AUTOMAKE_OPTIONS = foreign
 @TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include
 @TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include
-@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@lib-gnu-awt-xlib.la
-@XLIB_AWT_FALSE@cond_x_ltlibrary = 
-@XLIB_AWT_TRUE@xlib_includes = @XLIB_AWT_TRUE@-I../libstdc++-v3/include -I../libstdc++-v3/include/$(target_alias) -I$(srcdir)/../libstdc++-v3/libsupc++
-@XLIB_AWT_FALSE@xlib_includes = 
+#@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@lib-gnu-awt-xlib.la
+#@XLIB_AWT_FALSE@cond_x_ltlibrary = 
+#@XLIB_AWT_TRUE@xlib_includes = @XLIB_AWT_TRUE@-I../libstdc++-v3/include -I../libstdc++-v3/include/$(target_alias) -I$(srcdir)/../libstdc++-v3/libsupc++
+#@XLIB_AWT_FALSE@xlib_includes = 
 
 toolexeclib_LTLIBRARIES = libgcj.la lib-org-xml-sax.la lib-org-w3c-dom.la $(cond_x_ltlibrary)
 toolexecmainlib_DATA = libgcj.spec
@@ -161,8 +161,8 @@ bin_SCRIPTS = addr2name.awk
 GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8
 
 GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fclasspath= -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c
-GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@
-LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@
+GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) -L$(here)/../libstdc++-v3/src -L$(here)/../libjRateCore -L$(here)/../libjRateCore/.libs $(JC1FLAGS) $(LDFLAGS) -lstdc++ -ljRateCore -ldl -o $@
+LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) -L$(here)/../libstdc++-v3/src -L$(here)/../libjRateCore -L$(here)/../libjRateCore/.libs $(JC1FLAGS) $(LDFLAGS) -lstdc++ -ljRateCore -ldl -o $@
 
 LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 
@@ -187,22 +187,24 @@ LIBFFIINCS = @LIBFFIINCS@
 
 INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \
 	$(GCINCS) $(THREADINCS) $(INCLTDL) $(xlib_includes) \
-	$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)
+	$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS) \
+	-I$(JRATE_SRC_DIR)/src/native/src -I$(JRATE_BUILD_DIR)
 
 
 nat_files = $(nat_source_files:.cc=.lo)
-x_nat_files = $(x_nat_source_files:.cc=.lo)
+#x_nat_files = $(x_nat_source_files:.cc=.lo)
 c_files = $(c_source_files:.c=.lo)
 javao_files = $(java_source_files:.java=.lo) \
 	$(built_java_source_files:.java=.lo)
 
-x_javao_files = $(x_java_source_files:.java=.lo)
+# x_javao_files = $(x_java_source_files:.java=.lo)
 
 libgcj_la_SOURCES = prims.cc jni.cc exception.cc \
 	resolve.cc defineclass.cc interpret.cc verify.cc \
 	$(nat_source_files)
 
 EXTRA_libgcj_la_SOURCES = boehm.cc nogc.cc posix-threads.cc no-threads.cc \
+	jRate-gc.cc \
 	win32-threads.cc posix.cc win32.cc \
 	$(c_source_files) $(java_source_files) $(built_java_source_files)
 
@@ -217,7 +219,7 @@ libgcj_la_LIBADD = $(javao_files) $(c_fi
 # Include THREADLIBS here to ensure that the correct version of
 # certain linuxthread functions get linked:
 libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(THREADLIBS) \
-	$(LIBLTDL) $(SYS_ZLIBS) \
+	$(LIBLTDL) $(SYS_ZLIBS) $(JRATE_LIBGCJ_LDFLAGS) \
 	-version-info `grep -v '^\#' $(srcdir)/libtool-version`
 
 libgcj_la_LINK = $(LIBLINK)
@@ -281,23 +283,23 @@ org/xml/sax/XMLFilter.java \
 org/xml/sax/XMLReader.java
 
 
-lib_gnu_awt_xlib_la_SOURCES = $(x_nat_source_files)
-EXTRA_lib_gnu_awt_xlib_la_SOURCES = $(x_java_source_files)
-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar $(x_javao_files)
-lib_gnu_awt_xlib_la_LIBADD = $(x_javao_files)
-lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \
-	@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \
-        -rpath $(toolexeclibdir) \
-        -version-info `grep -v '^\#' $(srcdir)/libtool-version`
+#lib_gnu_awt_xlib_la_SOURCES = $(x_nat_source_files)
+# EXTRA_lib_gnu_awt_xlib_la_SOURCES = $(x_java_source_files)
+# lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar $(x_javao_files)
+# lib_gnu_awt_xlib_la_LIBADD = $(x_javao_files)
+# lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \
+# 	@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \
+#         -rpath $(toolexeclibdir) \
+#         -version-info `grep -v '^\#' $(srcdir)/libtool-version`
 
-lib_gnu_awt_xlib_la_LINK = $(LIBLINK)
+# lib_gnu_awt_xlib_la_LINK = $(LIBLINK)
 
 all_java_source_files = \
     $(java_source_files) \
-    $(built_java_source_files) \
-    $(lib_org_xml_sax_la_SOURCES) \
-    $(lib_org_w3c_dom_la_SOURCES) \
-    $(x_java_source_files)
+    $(built_java_source_files) 
+#    $(lib_org_xml_sax_la_SOURCES) \
+#    $(lib_org_w3c_dom_la_SOURCES) \
+#    $(x_java_source_files)
 
 
 all_java_class_files = $(all_java_source_files:.java=.class)
@@ -319,7 +321,7 @@ inner_nat_headers = java/io/ObjectOutput
 
 nat_headers = $(ordinary_nat_headers) $(inner_nat_headers)
 
-x_nat_headers = $(x_java_source_files:.java=.h)
+#x_nat_headers = $(x_java_source_files:.java=.h)
 
 extra_headers = java/lang/Object.h java/lang/Class.h
 
@@ -1294,6 +1296,81 @@ javax/transaction/TransactionRolledbackE
 javax/transaction/UserTransaction.java
 
 
+javax_realtime_source_files = \
+javax/realtime/AbsoluteTime.java \
+javax/realtime/AccessViolationError.java \
+javax/realtime/AperiodicParameters.java \
+javax/realtime/Arena.java \
+javax/realtime/ArenaFactory.java \
+javax/realtime/AsyncEvent.java \
+javax/realtime/AsyncEventHandler.java \
+javax/realtime/AsynchronouslyInterruptedException.java \
+javax/realtime/BoundAsyncEventHandler.java \
+javax/realtime/CTMemory.java \
+javax/realtime/CTPrivateMemory.java \
+javax/realtime/Clock.java \
+javax/realtime/ExecutionEligibilityParameters.java \
+javax/realtime/HeapMemory.java \
+javax/realtime/HighResolutionClock.java \
+javax/realtime/HighResolutionTime.java \
+javax/realtime/HighResolutionTimer.java \
+javax/realtime/IllegalAssignmentError.java \
+javax/realtime/ImmortalMemory.java \
+javax/realtime/ImportanceParameters.java \
+javax/realtime/InaccessibleAreaException.java \
+javax/realtime/LTMemory.java \
+javax/realtime/LTPrivateMemory.java \
+javax/realtime/MemoryAccessError.java \
+javax/realtime/MemoryArea.java \
+javax/realtime/MemoryParameters.java \
+javax/realtime/MethodAreaMemory.java \
+javax/realtime/NoHeapRealtimeThread.java \
+javax/realtime/OneShotTimer.java \
+javax/realtime/OneShotTimerImpl.java \
+javax/realtime/OneShotTimerServer.java \
+javax/realtime/POSIXSignalHandler.java \
+javax/realtime/PeriodicParameters.java \
+javax/realtime/PeriodicTimer.java \
+javax/realtime/PeriodicTimerImpl.java \
+javax/realtime/PeriodicTimerServer.java \
+javax/realtime/PooledAsyncEventHandler.java \
+javax/realtime/PrimordialMemory.java \
+javax/realtime/PriorityParameters.java \
+javax/realtime/PriorityQueue.java \
+javax/realtime/PriorityScheduler.java \
+javax/realtime/PrivateScopedMemory.java \
+javax/realtime/ProcessingGroupParameters.java \
+javax/realtime/RationalTime.java \
+javax/realtime/RealtimeClock.java \
+javax/realtime/RealtimeClockPeriodicTimerImpl.java \
+javax/realtime/RealtimeThread.java \
+javax/realtime/RefCountedArena.java \
+javax/realtime/RelativeTime.java \
+javax/realtime/ReleaseParameters.java \
+javax/realtime/Schedulable.java \
+javax/realtime/Scheduler.java \
+javax/realtime/SchedulingParameters.java \
+javax/realtime/ScopedCycleException.java \
+javax/realtime/ScopedMemory.java \
+javax/realtime/SizeEstimator.java \
+javax/realtime/SporadicParameters.java \
+javax/realtime/ThreadedAsyncEventHandler.java \
+javax/realtime/ThrowBoundaryError.java \
+javax/realtime/Timer.java \
+javax/realtime/TimerImpl.java \
+javax/realtime/UnimplementedFeatureError.java \
+javax/realtime/UnknownHappeningException.java \
+javax/realtime/VTMemory.java \
+javax/realtime/jRateSystem.java \
+javax/realtime/util/CountableEventVariable.java \
+javax/realtime/util/EventVariable.java \
+javax/realtime/util/Executor.java \
+javax/realtime/util/PooledExecutor.java \
+javax/realtime/util/ShutdownExecutorException.java \
+javax/realtime/util/ThreadBoundExecutor.java \
+javax/realtime/util/ThreadedExecutor.java
+
+
 built_java_source_files = java/lang/ConcreteProcess.java \
                           gnu/classpath/Configuration.java
 
@@ -1542,6 +1619,7 @@ gnu/gcj/runtime/MethodRef.java \
 gnu/gcj/runtime/NameFinder.java \
 gnu/gcj/runtime/SharedLibLoader.java \
 gnu/gcj/runtime/StackTrace.java \
+gnu/gcj/runtime/AddressHolder.java \
 gnu/gcj/runtime/StringBuffer.java \
 gnu/gcj/runtime/VMClassLoader.java \
 gnu/java/io/ClassLoaderObjectInputStream.java \
@@ -2061,9 +2139,10 @@ java/util/zip/ZipFile.java \
 java/util/zip/ZipInputStream.java \
 java/util/zip/ZipOutputStream.java \
 $(rmi_java_source_files) \
-$(awt_java_source_files) \
 $(convert_source_files) \
-$(javax_source_files)
+$(javax_realtime_source_files)
+#$(awt_java_source_files) \
+#$(javax_source_files)
 
 
 java_source_files = $(special_java_source_files) $(ordinary_java_source_files)
@@ -2086,6 +2165,30 @@ c_source_files = \
 
 #java/awt/natToolkit.cc
 
+javax_realtime_nat_source_files = \
+javax/realtime/natArena.cc \
+javax/realtime/natArenaFactory.cc \
+javax/realtime/natAsyncEventHandler.cc \
+javax/realtime/natCTMemory.cc \
+javax/realtime/natCTPrivateMemory.cc \
+javax/realtime/natHeapMemory.cc \
+javax/realtime/natHighResolutionClock.cc \
+javax/realtime/natHighResolutionTime.cc \
+javax/realtime/natImmortalMemory.cc \
+javax/realtime/natLTMemory.cc \
+javax/realtime/natLTPrivateMemory.cc \
+javax/realtime/natMemoryArea.cc \
+javax/realtime/natMethodAreaMemory.cc \
+javax/realtime/natPOSIXSignalHandler.cc \
+javax/realtime/natPriorityScheduler.cc \
+javax/realtime/natRealtimeClock.cc \
+javax/realtime/natRealtimeThread.cc \
+javax/realtime/natRefCountedArena.cc \
+javax/realtime/natScopedMemory.cc \
+javax/realtime/natSizeEstimator.cc \
+javax/realtime/natVTMemory.cc \
+javax/realtime/natjRateSystem.cc
+
 nat_source_files = \
 gnu/gcj/natCore.cc \
 gnu/gcj/convert/JIS0208_to_Unicode.cc \
@@ -2147,8 +2250,11 @@ java/net/natPlainSocketImpl.cc \
 java/text/natCollator.cc \
 java/util/natResourceBundle.cc \
 java/util/natTimeZone.cc \
+java/util/natIdentityHashMap.cc \
+java/util/natVector.cc \
 java/util/zip/natDeflater.cc \
-java/util/zip/natInflater.cc
+java/util/zip/natInflater.cc \
+$(javax_realtime_nat_source_files)
 
 
 x_java_source_files = \
@@ -2285,7 +2391,8 @@ gnu/gcj/convert/natOutput_SJIS.lo gnu/gc
 gnu/gcj/io/shs.lo gnu/gcj/protocol/core/natCoreInputStream.lo \
 gnu/gcj/runtime/natFinalizerThread.lo gnu/gcj/runtime/natFirstThread.lo \
 gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \
-gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \
+gnu/gcj/runtime/natStackTrace.lo\
+gnu/gcj/runtime/natStringBuffer.lo \
 gnu/gcj/runtime/natVMClassLoader.lo gnu/java/nio/natByteBufferImpl.lo \
 gnu/java/nio/natCharBufferImpl.lo gnu/java/nio/natDoubleBufferImpl.lo \
 gnu/java/nio/natFileChannelImpl.lo gnu/java/nio/natFloatBufferImpl.lo \
@@ -2306,59 +2413,83 @@ java/lang/reflect/natMethod.lo java/lang
 java/net/natNetworkInterface.lo java/net/natInetAddress.lo \
 java/net/natPlainDatagramSocketImpl.lo java/net/natPlainSocketImpl.lo \
 java/text/natCollator.lo java/util/natResourceBundle.lo \
-java/util/natTimeZone.lo java/util/zip/natDeflater.lo \
-java/util/zip/natInflater.lo
-lib_org_xml_sax_la_LDFLAGS = 
-lib_org_xml_sax_la_LIBADD = 
-lib_org_xml_sax_la_OBJECTS =  org/xml/sax/ext/DeclHandler.lo \
-org/xml/sax/ext/LexicalHandler.lo \
-org/xml/sax/helpers/AttributeListImpl.lo \
-org/xml/sax/helpers/AttributesImpl.lo \
-org/xml/sax/helpers/DefaultHandler.lo \
-org/xml/sax/helpers/LocatorImpl.lo \
-org/xml/sax/helpers/NamespaceSupport.lo \
-org/xml/sax/helpers/NewInstance.lo org/xml/sax/helpers/ParserAdapter.lo \
-org/xml/sax/helpers/ParserFactory.lo \
-org/xml/sax/helpers/XMLFilterImpl.lo \
-org/xml/sax/helpers/XMLReaderAdapter.lo \
-org/xml/sax/helpers/XMLReaderFactory.lo org/xml/sax/AttributeList.lo \
-org/xml/sax/Attributes.lo org/xml/sax/ContentHandler.lo \
-org/xml/sax/DTDHandler.lo org/xml/sax/DocumentHandler.lo \
-org/xml/sax/EntityResolver.lo org/xml/sax/ErrorHandler.lo \
-org/xml/sax/HandlerBase.lo org/xml/sax/InputSource.lo \
-org/xml/sax/Locator.lo org/xml/sax/Parser.lo \
-org/xml/sax/SAXException.lo org/xml/sax/SAXNotRecognizedException.lo \
-org/xml/sax/SAXNotSupportedException.lo \
-org/xml/sax/SAXParseException.lo org/xml/sax/XMLFilter.lo \
-org/xml/sax/XMLReader.lo
-lib_org_w3c_dom_la_LDFLAGS = 
-lib_org_w3c_dom_la_LIBADD = 
-lib_org_w3c_dom_la_OBJECTS =  org/w3c/dom/Attr.lo \
-org/w3c/dom/CDATASection.lo org/w3c/dom/CharacterData.lo \
-org/w3c/dom/Comment.lo org/w3c/dom/DOMException.lo \
-org/w3c/dom/DOMImplementation.lo org/w3c/dom/Document.lo \
-org/w3c/dom/DocumentFragment.lo org/w3c/dom/DocumentType.lo \
-org/w3c/dom/Element.lo org/w3c/dom/Entity.lo \
-org/w3c/dom/EntityReference.lo org/w3c/dom/NamedNodeMap.lo \
-org/w3c/dom/Node.lo org/w3c/dom/NodeList.lo org/w3c/dom/Notation.lo \
-org/w3c/dom/ProcessingInstruction.lo org/w3c/dom/Text.lo \
-org/w3c/dom/ranges/DocumentRange.lo org/w3c/dom/ranges/Range.lo \
-org/w3c/dom/ranges/RangeException.lo \
-org/w3c/dom/traversal/DocumentTraversal.lo \
-org/w3c/dom/traversal/NodeFilter.lo \
-org/w3c/dom/traversal/NodeIterator.lo \
-org/w3c/dom/traversal/TreeWalker.lo
-lib_gnu_awt_xlib_la_OBJECTS =  gnu/gcj/xlib/natClip.lo \
-gnu/gcj/xlib/natColormap.lo gnu/gcj/xlib/natDisplay.lo \
-gnu/gcj/xlib/natDrawable.lo gnu/gcj/xlib/natFont.lo \
-gnu/gcj/xlib/natGC.lo gnu/gcj/xlib/natPixmap.lo \
-gnu/gcj/xlib/natScreen.lo gnu/gcj/xlib/natVisual.lo \
-gnu/gcj/xlib/natWMSizeHints.lo gnu/gcj/xlib/natWindow.lo \
-gnu/gcj/xlib/natWindowAttributes.lo gnu/gcj/xlib/natXAnyEvent.lo \
-gnu/gcj/xlib/natXButtonEvent.lo gnu/gcj/xlib/natXColor.lo \
-gnu/gcj/xlib/natXConfigureEvent.lo gnu/gcj/xlib/natXException.lo \
-gnu/gcj/xlib/natXExposeEvent.lo gnu/gcj/xlib/natXImage.lo \
-gnu/gcj/xlib/natXUnmapEvent.lo
+java/util/natTimeZone.lo java/util/natIdentityHashMap.lo \
+java/util/natVector.lo \
+java/util/zip/natDeflater.lo \
+java/util/zip/natInflater.lo \
+javax/realtime/natArena.lo \
+javax/realtime/natArenaFactory.lo \
+javax/realtime/natAsyncEventHandler.lo \
+javax/realtime/natCTMemory.lo \
+javax/realtime/natCTPrivateMemory.lo \
+javax/realtime/natHeapMemory.lo \
+javax/realtime/natHighResolutionClock.lo \
+javax/realtime/natHighResolutionTime.lo \
+javax/realtime/natImmortalMemory.lo \
+javax/realtime/natLTMemory.lo \
+javax/realtime/natLTPrivateMemory.lo \
+javax/realtime/natMemoryArea.lo \
+javax/realtime/natMethodAreaMemory.lo \
+javax/realtime/natPOSIXSignalHandler.lo \
+javax/realtime/natPriorityScheduler.lo \
+javax/realtime/natRealtimeClock.lo \
+javax/realtime/natRealtimeThread.lo \
+javax/realtime/natRefCountedArena.lo \
+javax/realtime/natScopedMemory.lo \
+javax/realtime/natSizeEstimator.lo \
+javax/realtime/natVTMemory.lo \
+javax/realtime/natjRateSystem.lo
+#lib_org_xml_sax_la_LDFLAGS = 
+#lib_org_xml_sax_la_LIBADD = 
+# lib_org_xml_sax_la_OBJECTS =  org/xml/sax/ext/DeclHandler.lo \
+# org/xml/sax/ext/LexicalHandler.lo \
+# org/xml/sax/helpers/AttributeListImpl.lo \
+# org/xml/sax/helpers/AttributesImpl.lo \
+# org/xml/sax/helpers/DefaultHandler.lo \
+# org/xml/sax/helpers/LocatorImpl.lo \
+# org/xml/sax/helpers/NamespaceSupport.lo \
+# org/xml/sax/helpers/NewInstance.lo org/xml/sax/helpers/ParserAdapter.lo \
+# org/xml/sax/helpers/ParserFactory.lo \
+# org/xml/sax/helpers/XMLFilterImpl.lo \
+# org/xml/sax/helpers/XMLReaderAdapter.lo \
+# org/xml/sax/helpers/XMLReaderFactory.lo org/xml/sax/AttributeList.lo \
+# org/xml/sax/Attributes.lo org/xml/sax/ContentHandler.lo \
+# org/xml/sax/DTDHandler.lo org/xml/sax/DocumentHandler.lo \
+# org/xml/sax/EntityResolver.lo org/xml/sax/ErrorHandler.lo \
+# org/xml/sax/HandlerBase.lo org/xml/sax/InputSource.lo \
+# org/xml/sax/Locator.lo org/xml/sax/Parser.lo \
+# org/xml/sax/SAXException.lo org/xml/sax/SAXNotRecognizedException.lo \
+# org/xml/sax/SAXNotSupportedException.lo \
+# org/xml/sax/SAXParseException.lo org/xml/sax/XMLFilter.lo \
+# org/xml/sax/XMLReader.lo
+# lib_org_w3c_dom_la_LDFLAGS = 
+# lib_org_w3c_dom_la_LIBADD = 
+# lib_org_w3c_dom_la_OBJECTS =  org/w3c/dom/Attr.lo \
+# org/w3c/dom/CDATASection.lo org/w3c/dom/CharacterData.lo \
+# org/w3c/dom/Comment.lo org/w3c/dom/DOMException.lo \
+# org/w3c/dom/DOMImplementation.lo org/w3c/dom/Document.lo \
+# org/w3c/dom/DocumentFragment.lo org/w3c/dom/DocumentType.lo \
+# org/w3c/dom/Element.lo org/w3c/dom/Entity.lo \
+# org/w3c/dom/EntityReference.lo org/w3c/dom/NamedNodeMap.lo \
+# org/w3c/dom/Node.lo org/w3c/dom/NodeList.lo org/w3c/dom/Notation.lo \
+# org/w3c/dom/ProcessingInstruction.lo org/w3c/dom/Text.lo \
+# org/w3c/dom/ranges/DocumentRange.lo org/w3c/dom/ranges/Range.lo \
+# org/w3c/dom/ranges/RangeException.lo \
+# org/w3c/dom/traversal/DocumentTraversal.lo \
+# org/w3c/dom/traversal/NodeFilter.lo \
+# org/w3c/dom/traversal/NodeIterator.lo \
+# org/w3c/dom/traversal/TreeWalker.lo
+# lib_gnu_awt_xlib_la_OBJECTS =  gnu/gcj/xlib/natClip.lo \
+# gnu/gcj/xlib/natColormap.lo gnu/gcj/xlib/natDisplay.lo \
+# gnu/gcj/xlib/natDrawable.lo gnu/gcj/xlib/natFont.lo \
+# gnu/gcj/xlib/natGC.lo gnu/gcj/xlib/natPixmap.lo \
+# gnu/gcj/xlib/natScreen.lo gnu/gcj/xlib/natVisual.lo \
+# gnu/gcj/xlib/natWMSizeHints.lo gnu/gcj/xlib/natWindow.lo \
+# gnu/gcj/xlib/natWindowAttributes.lo gnu/gcj/xlib/natXAnyEvent.lo \
+# gnu/gcj/xlib/natXButtonEvent.lo gnu/gcj/xlib/natXColor.lo \
+# gnu/gcj/xlib/natXConfigureEvent.lo gnu/gcj/xlib/natXException.lo \
+# gnu/gcj/xlib/natXExposeEvent.lo gnu/gcj/xlib/natXImage.lo \
+# gnu/gcj/xlib/natXUnmapEvent.lo
 @NATIVE_TRUE@bin_PROGRAMS =  jv-convert$(EXEEXT) gij$(EXEEXT) \
 @NATIVE_TRUE@rmic$(EXEEXT) rmiregistry$(EXEEXT)
 @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS =  \
@@ -2397,17 +2528,17 @@ DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj 
 DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \
 .deps/$(srcdir)/$(CONVERT_DIR)/make-trie.P .deps/boehm.P \
 .deps/defineclass.P .deps/exception.P .deps/gij.P \
-.deps/gnu/awt/LightweightRedirector.P \
-.deps/gnu/awt/j2d/AbstractGraphicsState.P \
-.deps/gnu/awt/j2d/DirectRasterGraphics.P \
-.deps/gnu/awt/j2d/Graphics2DImpl.P \
-.deps/gnu/awt/j2d/IntegerGraphicsState.P \
-.deps/gnu/awt/j2d/MappedRaster.P .deps/gnu/awt/xlib/XCanvasPeer.P \
-.deps/gnu/awt/xlib/XEventLoop.P .deps/gnu/awt/xlib/XEventQueue.P \
-.deps/gnu/awt/xlib/XFontMetrics.P .deps/gnu/awt/xlib/XFramePeer.P \
-.deps/gnu/awt/xlib/XGraphics.P \
-.deps/gnu/awt/xlib/XGraphicsConfiguration.P \
-.deps/gnu/awt/xlib/XPanelPeer.P .deps/gnu/awt/xlib/XToolkit.P \
+# .deps/gnu/awt/LightweightRedirector.P \
+# .deps/gnu/awt/j2d/AbstractGraphicsState.P \
+# .deps/gnu/awt/j2d/DirectRasterGraphics.P \
+# .deps/gnu/awt/j2d/Graphics2DImpl.P \
+# .deps/gnu/awt/j2d/IntegerGraphicsState.P \
+# .deps/gnu/awt/j2d/MappedRaster.P .deps/gnu/awt/xlib/XCanvasPeer.P \
+# .deps/gnu/awt/xlib/XEventLoop.P .deps/gnu/awt/xlib/XEventQueue.P \
+# .deps/gnu/awt/xlib/XFontMetrics.P .deps/gnu/awt/xlib/XFramePeer.P \
+# .deps/gnu/awt/xlib/XGraphics.P \
+# .deps/gnu/awt/xlib/XGraphicsConfiguration.P \
+# .deps/gnu/awt/xlib/XPanelPeer.P .deps/gnu/awt/xlib/XToolkit.P \
 .deps/gnu/classpath/Configuration.P .deps/gnu/gcj/Core.P \
 .deps/gnu/gcj/RawData.P .deps/gnu/gcj/convert/BytesToUnicode.P \
 .deps/gnu/gcj/convert/Convert.P .deps/gnu/gcj/convert/IOConverter.P \
@@ -2449,7 +2580,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/gnu/gcj/runtime/FirstThread.P .deps/gnu/gcj/runtime/JNIWeakRef.P \
 .deps/gnu/gcj/runtime/MethodRef.P .deps/gnu/gcj/runtime/NameFinder.P \
 .deps/gnu/gcj/runtime/SharedLibLoader.P \
-.deps/gnu/gcj/runtime/StackTrace.P .deps/gnu/gcj/runtime/StringBuffer.P \
+.deps/gnu/gcj/runtime/StackTrace.P \
+.deps/gnu/gcj/runtime/AddressHolder.P \
+.deps/gnu/gcj/runtime/StringBuffer.P \
 .deps/gnu/gcj/runtime/VMClassLoader.P \
 .deps/gnu/gcj/runtime/natFinalizerThread.P \
 .deps/gnu/gcj/runtime/natFirstThread.P \
@@ -2480,27 +2613,27 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/gnu/gcj/xlib/natXColor.P .deps/gnu/gcj/xlib/natXConfigureEvent.P \
 .deps/gnu/gcj/xlib/natXException.P .deps/gnu/gcj/xlib/natXExposeEvent.P \
 .deps/gnu/gcj/xlib/natXImage.P .deps/gnu/gcj/xlib/natXUnmapEvent.P \
-.deps/gnu/java/awt/BitMaskExtent.P .deps/gnu/java/awt/Buffers.P \
-.deps/gnu/java/awt/ComponentDataBlitOp.P \
-.deps/gnu/java/awt/EventModifier.P \
-.deps/gnu/java/awt/GLightweightPeer.P \
-.deps/gnu/java/awt/image/ImageDecoder.P \
-.deps/gnu/java/awt/image/XBMDecoder.P \
-.deps/gnu/java/beans/BeanInfoEmbryo.P \
-.deps/gnu/java/beans/EmptyBeanInfo.P \
-.deps/gnu/java/beans/ExplicitBeanInfo.P \
-.deps/gnu/java/beans/IntrospectionIncubator.P \
-.deps/gnu/java/beans/editors/ColorEditor.P \
-.deps/gnu/java/beans/editors/FontEditor.P \
-.deps/gnu/java/beans/editors/NativeBooleanEditor.P \
-.deps/gnu/java/beans/editors/NativeByteEditor.P \
-.deps/gnu/java/beans/editors/NativeDoubleEditor.P \
-.deps/gnu/java/beans/editors/NativeFloatEditor.P \
-.deps/gnu/java/beans/editors/NativeIntEditor.P \
-.deps/gnu/java/beans/editors/NativeLongEditor.P \
-.deps/gnu/java/beans/editors/NativeShortEditor.P \
-.deps/gnu/java/beans/editors/StringEditor.P \
-.deps/gnu/java/beans/info/ComponentBeanInfo.P \
+# .deps/gnu/java/awt/BitMaskExtent.P .deps/gnu/java/awt/Buffers.P \
+# .deps/gnu/java/awt/ComponentDataBlitOp.P \
+# .deps/gnu/java/awt/EventModifier.P \
+# .deps/gnu/java/awt/GLightweightPeer.P \
+# .deps/gnu/java/awt/image/ImageDecoder.P \
+# .deps/gnu/java/awt/image/XBMDecoder.P \
+# .deps/gnu/java/beans/BeanInfoEmbryo.P \
+# .deps/gnu/java/beans/EmptyBeanInfo.P \
+# .deps/gnu/java/beans/ExplicitBeanInfo.P \
+# .deps/gnu/java/beans/IntrospectionIncubator.P \
+# .deps/gnu/java/beans/editors/ColorEditor.P \
+# .deps/gnu/java/beans/editors/FontEditor.P \
+# .deps/gnu/java/beans/editors/NativeBooleanEditor.P \
+# .deps/gnu/java/beans/editors/NativeByteEditor.P \
+# .deps/gnu/java/beans/editors/NativeDoubleEditor.P \
+# .deps/gnu/java/beans/editors/NativeFloatEditor.P \
+# .deps/gnu/java/beans/editors/NativeIntEditor.P \
+# .deps/gnu/java/beans/editors/NativeLongEditor.P \
+# .deps/gnu/java/beans/editors/NativeShortEditor.P \
+# .deps/gnu/java/beans/editors/StringEditor.P \
+# .deps/gnu/java/beans/info/ComponentBeanInfo.P \
 .deps/gnu/java/io/ClassLoaderObjectInputStream.P \
 .deps/gnu/java/io/NullOutputStream.P \
 .deps/gnu/java/io/ObjectIdentityWrapper.P \
@@ -3412,8 +3545,10 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/java/util/jar/JarInputStream.P \
 .deps/java/util/jar/JarOutputStream.P .deps/java/util/jar/Manifest.P \
 .deps/java/util/natResourceBundle.P .deps/java/util/natTimeZone.P \
+.deps/java/util/natIdentityHashMap.P java/util/natVector.P \
 .deps/java/util/regex/Matcher.P .deps/java/util/regex/Pattern.P \
 .deps/java/util/regex/PatternSyntaxException.P \
+.deps/javax/realtime/IllegalAssignmentError.P \
 .deps/java/util/zip/Adler32.P .deps/java/util/zip/CRC32.P \
 .deps/java/util/zip/CheckedInputStream.P \
 .deps/java/util/zip/CheckedOutputStream.P \
@@ -3429,6 +3564,100 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/java/util/zip/ZipInputStream.P \
 .deps/java/util/zip/ZipOutputStream.P .deps/java/util/zip/natDeflater.P \
 .deps/java/util/zip/natInflater.P \
+.deps/javax/realtime/natArena.P \
+.deps/javax/realtime/natArenaFactory.P \
+.deps/javax/realtime/natAsyncEventHandler.P \
+.deps/javax/realtime/natCTMemory.P \
+.deps/javax/realtime/natCTPrivateMemory.P \
+.deps/javax/realtime/natHeapMemory.P \
+.deps/javax/realtime/natHighResolutionClock.P \
+.deps/javax/realtime/natHighResolutionTime.P \
+.deps/javax/realtime/natImmortalMemory.P \
+.deps/javax/realtime/natLTMemory.P \
+.deps/javax/realtime/natLTPrivateMemory.P \
+.deps/javax/realtime/natMemoryArea.P \
+.deps/javax/realtime/natMethodAreaMemory.P \
+.deps/javax/realtime/natPOSIXSignalHandler.P \
+.deps/javax/realtime/natPriorityScheduler.P \
+.deps/javax/realtime/natRealtimeClock.P \
+.deps/javax/realtime/natRealtimeThread.P \
+.deps/javax/realtime/natRefCountedArena.P \
+.deps/javax/realtime/natScopedMemory.P \
+.deps/javax/realtime/natSizeEstimator.P \
+.deps/javax/realtime/natVTMemory.P \
+.deps/javax/realtime/natjRateSystem.P \
+.deps/javax/realtime/AbsoluteTime.P \
+.deps/javax/realtime/AccessViolationError.P \
+.deps/javax/realtime/AperiodicParameters.P \
+.deps/javax/realtime/Arena.P \
+.deps/javax/realtime/ArenaFactory.P \
+.deps/javax/realtime/AsyncEvent.P \
+.deps/javax/realtime/AsyncEventHandler.P \
+.deps/javax/realtime/AsynchronouslyInterruptedException.P \
+.deps/javax/realtime/BoundAsyncEventHandler.P \
+.deps/javax/realtime/CTMemory.P \
+.deps/javax/realtime/CTPrivateMemory.P \
+.deps/javax/realtime/Clock.P \
+.deps/javax/realtime/ExecutionEligibilityParameters.P \
+.deps/javax/realtime/HeapMemory.P \
+.deps/javax/realtime/HighResolutionClock.P \
+.deps/javax/realtime/HighResolutionTime.P \
+.deps/javax/realtime/HighResolutionTimer.P \
+.deps/javax/realtime/IllegalAssignmentError.P \
+.deps/javax/realtime/ImmortalMemory.P \
+.deps/javax/realtime/ImportanceParameters.P \
+.deps/javax/realtime/InaccessibleAreaException.P \
+.deps/javax/realtime/LTMemory.P \
+.deps/javax/realtime/LTPrivateMemory.P \
+.deps/javax/realtime/MemoryAccessError.P \
+.deps/javax/realtime/MemoryArea.P \
+.deps/javax/realtime/MemoryParameters.P \
+.deps/javax/realtime/MethodAreaMemory.P \
+.deps/javax/realtime/NoHeapRealtimeThread.P \
+.deps/javax/realtime/OneShotTimer.P \
+.deps/javax/realtime/OneShotTimerImpl.P \
+.deps/javax/realtime/OneShotTimerServer.P \
+.deps/javax/realtime/POSIXSignalHandler.P \
+.deps/javax/realtime/PeriodicParameters.P \
+.deps/javax/realtime/PeriodicTimer.P \
+.deps/javax/realtime/PeriodicTimerImpl.P \
+.deps/javax/realtime/PeriodicTimerServer.P \
+.deps/javax/realtime/PooledAsyncEventHandler.P \
+.deps/javax/realtime/PrimordialMemory.P \
+.deps/javax/realtime/PriorityParameters.P \
+.deps/javax/realtime/PriorityQueue.P \
+.deps/javax/realtime/PriorityScheduler.P \
+.deps/javax/realtime/PrivateScopedMemory.P \
+.deps/javax/realtime/ProcessingGroupParameters.P \
+.deps/javax/realtime/RationalTime.P \
+.deps/javax/realtime/RealtimeClock.P \
+.deps/javax/realtime/RealtimeClockPeriodicTimerImpl.P \
+.deps/javax/realtime/RealtimeThread.P \
+.deps/javax/realtime/RefCountedArena.P \
+.deps/javax/realtime/RelativeTime.P \
+.deps/javax/realtime/ReleaseParameters.P \
+.deps/javax/realtime/Schedulable.P \
+.deps/javax/realtime/Scheduler.P \
+.deps/javax/realtime/SchedulingParameters.P \
+.deps/javax/realtime/ScopedCycleException.P \
+.deps/javax/realtime/ScopedMemory.P \
+.deps/javax/realtime/SizeEstimator.P \
+.deps/javax/realtime/SporadicParameters.P \
+.deps/javax/realtime/ThreadedAsyncEventHandler.P \
+.deps/javax/realtime/ThrowBoundaryError.P \
+.deps/javax/realtime/Timer.P \
+.deps/javax/realtime/TimerImpl.P \
+.deps/javax/realtime/UnimplementedFeatureError.P \
+.deps/javax/realtime/UnknownHappeningException.P \
+.deps/javax/realtime/VTMemory.P \
+.deps/javax/realtime/jRateSystem.P \
+.deps/javax/realtime/util/CountableEventVariable.P \
+.deps/javax/realtime/util/EventVariable.P \
+.deps/javax/realtime/util/Executor.P \
+.deps/javax/realtime/util/PooledExecutor.P \
+.deps/javax/realtime/util/ShutdownExecutorException.P \
+.deps/javax/realtime/util/ThreadBoundExecutor.P \
+.deps/javax/realtime/util/ThreadedExecutor.P \
 .deps/javax/accessibility/Accessible.P \
 .deps/javax/accessibility/AccessibleAction.P \
 .deps/javax/accessibility/AccessibleBundle.P \
@@ -3787,7 +4016,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/javax/transaction/xa/XAException.P \
 .deps/javax/transaction/xa/XAResource.P \
 .deps/javax/transaction/xa/Xid.P .deps/jni.P .deps/no-threads.P \
-.deps/nogc.P .deps/org/w3c/dom/Attr.P .deps/org/w3c/dom/CDATASection.P \
+.deps/nogc.P \
+.deps/jRate-gc.P \
+.deps/org/w3c/dom/Attr.P .deps/org/w3c/dom/CDATASection.P \
 .deps/org/w3c/dom/CharacterData.P .deps/org/w3c/dom/Comment.P \
 .deps/org/w3c/dom/DOMException.P .deps/org/w3c/dom/DOMImplementation.P \
 .deps/org/w3c/dom/Document.P .deps/org/w3c/dom/DocumentFragment.P \
@@ -3827,8 +4058,11 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_D
 .deps/org/xml/sax/helpers/XMLReaderFactory.P .deps/posix-threads.P \
 .deps/posix.P .deps/prims.P .deps/resolve.P .deps/verify.P \
 .deps/win32-threads.P .deps/win32.P
-SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(lib_org_xml_sax_la_SOURCES) $(lib_org_w3c_dom_la_SOURCES) $(lib_gnu_awt_xlib_la_SOURCES) $(EXTRA_lib_gnu_awt_xlib_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(rmic_SOURCES) $(EXTRA_rmic_SOURCES) $(rmiregistry_SOURCES) $(EXTRA_rmiregistry_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)
-OBJECTS = $(libgcj_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS) $(lib_org_w3c_dom_la_OBJECTS) $(lib_gnu_awt_xlib_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(rmic_OBJECTS) $(rmiregistry_OBJECTS) $(gen_from_JIS_OBJECTS)
+# SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(lib_org_xml_sax_la_SOURCES) $(lib_org_w3c_dom_la_SOURCES) $(lib_gnu_awt_xlib_la_SOURCES) $(EXTRA_lib_gnu_awt_xlib_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(rmic_SOURCES) $(EXTRA_rmic_SOURCES) $(rmiregistry_SOURCES) $(EXTRA_rmiregistry_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)
+# OBJECTS = $(libgcj_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS) $(lib_org_w3c_dom_la_OBJECTS) $(lib_gnu_awt_xlib_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(rmic_OBJECTS) $(rmiregistry_OBJECTS) $(gen_from_JIS_OBJECTS)
+
+SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(rmic_SOURCES) $(EXTRA_rmic_SOURCES) $(rmiregistry_SOURCES) $(EXTRA_rmiregistry_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)
+OBJECTS = $(libgcj_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(rmic_OBJECTS) $(rmiregistry_OBJECTS) $(gen_from_JIS_OBJECTS)
 
 all: all-redirect
 .SUFFIXES:
@@ -4389,10 +4623,10 @@ libgcj.la: $(libgcj_la_OBJECTS) $(libgcj
 	@GCLIBS@ @LIBFFI@ @ZLIBS@ \
 	-rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(LIBS)
 
-lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)
-	@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))
-	$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \
-	-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)
+# lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)
+# 	@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))
+# 	$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \
+# 	-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)
 
 .class.h:
 	$(GCJH) -classpath '' -bootclasspath $(top_builddir) $(basename $<)
diff -Nurp ../gcc/libjava/acconfig.h ./libjava/acconfig.h
--- ../gcc/libjava/acconfig.h	Thu Aug 29 13:05:14 2002
+++ ./libjava/acconfig.h	Fri Aug  5 22:03:40 2005
@@ -74,6 +74,9 @@
 /* Define if Boehm GC in use.  */
 #undef HAVE_BOEHM_GC
 
+/* Define if jRate GC in use.  */
+#undef HAVE_JRATE_GC
+
 /* Define if gethostname is declared in <unistd.h>.  */
 #undef HAVE_GETHOSTNAME_DECL
 
diff -Nurp ../gcc/libjava/boehm.cc ./libjava/boehm.cc
--- ../gcc/libjava/boehm.cc	Thu Jan  2 23:19:53 2003
+++ ./libjava/boehm.cc	Fri Aug  5 22:03:40 2005
@@ -334,7 +334,7 @@ _Jv_BuildGCDescr(jclass)
 
 // Allocate some space that is known to be pointer-free.
 void *
-_Jv_AllocBytes (jsize size)
+_Jv_HeapAllocBytes (jsize size)
 {
   void *r = GC_MALLOC_ATOMIC (size);
   // We have to explicitly zero memory here, as the GC doesn't
@@ -348,7 +348,7 @@ _Jv_AllocBytes (jsize size)
 // Allocate space for a new Java array.
 // Used only for arrays of objects.
 void *
-_Jv_AllocArray (jsize size, jclass klass)
+_Jv_HeapAllocArray (jsize size, jclass klass)
 {
   void *obj;
   const jsize min_heap_addr = 16*1024;
@@ -376,11 +376,50 @@ _Jv_AllocArray (jsize size, jclass klass
 /* Allocate space for a new non-Java object, which does not have the usual 
    Java object header but may contain pointers to other GC'ed objects. */
 void *
-_Jv_AllocRawObj (jsize size)
+_Jv_HeapAllocRawObj (jsize size)
 {
   return (void *) GC_MALLOC (size);
 }
 
+void *
+_Jv_AllocBytes(jsize size)
+{
+  void *ptr;
+  javax::realtime::MemoryArea *ma = _Jv_GetCurrentMemoryArea();
+  if (ma != 0)
+    ptr = ma->allocateBytes(size);
+  else
+    ptr = _Jv_HeapAllocBytes(size);
+
+  return ptr;
+}
+
+void *
+_Jv_AllocArray(jsize size, jclass klass)
+{
+  void *ptr;
+  javax::realtime::MemoryArea *ma = _Jv_GetCurrentMemoryArea();
+  if (ma != 0)
+    ptr = ma->allocateArray(klass, size);
+  else
+    ptr = _Jv_HeapAllocArray(size, klass);
+
+  return ptr;  
+}
+
+void *
+_Jv_AllocRawObj(jsize size)
+{
+  void *ptr;
+  javax::realtime::MemoryArea *ma = _Jv_GetCurrentMemoryArea();
+  if (ma != 0)
+    ptr = ma->allocateRawObject(size);
+  else
+    ptr = _Jv_HeapAllocRawObj(size);
+
+  return ptr;
+}
+
 static void
 call_finalizer (GC_PTR obj, GC_PTR client_data)
 {
diff -Nurp ../gcc/libjava/configure ./libjava/configure
--- ../gcc/libjava/configure	Sat Feb 14 14:34:20 2004
+++ ./libjava/configure	Fri Aug  5 22:03:40 2005
@@ -1644,7 +1644,7 @@ else
   if { (eval echo configure:1645: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; }; then
     for file in conftest.*; do
       case $file in
-      *.c | *.o | *.obj) ;;
+      *.$ac_ext | *.c | *.o | *.obj) ;;
       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;
       esac
     done
@@ -2781,14 +2781,16 @@ if test -z "$enable_hash_synchronization
    enable_hash_synchronization=$enable_hash_synchronization_default
 fi
 
-if test "${slow_pthread_self}" = "yes"; then
+if test -z "$enable_pthread_self_cache"; then
+  enable_pthread_self_cache=${show_pthread_self:-no}
+fi
+if test "${enable_pthread_self_cache}" = yes; then
   cat >> confdefs.h <<\EOF
 #define SLOW_PTHREAD_SELF 1
 EOF
 
 fi
 
-
 LIBGCJDEBUG="false"
 
 # Check whether --enable-libgcj-debug or --disable-libgcj-debug was given.
@@ -2826,7 +2828,7 @@ INTERPRETER="$libgcj_interpreter"
 
 
 echo $ac_n "checking for exception model to use""... $ac_c" 1>&6
-echo "configure:2830: checking for exception model to use" >&5
+echo "configure:2832: checking for exception model to use" >&5
 
 ac_ext=C
 # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
@@ -2841,7 +2843,7 @@ if test "${enable_sjlj_exceptions+set}" 
   :
 else
   cat > conftest.$ac_ext << EOF
-#line 2845 "configure"
+#line 2847 "configure"
 struct S { ~S(); };
 void bar();
 void foo()
@@ -2852,7 +2854,7 @@ void foo()
 EOF
 old_CXXFLAGS="$CXXFLAGS"  
 CXXFLAGS=-S
-if { (eval echo configure:2856: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:2858: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   if grep _Unwind_SjLj_Resume conftest.s >/dev/null 2>&1 ; then
     enable_sjlj_exceptions=yes
   elif grep _Unwind_Resume conftest.s >/dev/null 2>&1 ; then
@@ -2962,7 +2964,7 @@ case "$TARGET_ECOS" in
 	    PLATFORMH=win32.h
         
 echo $ac_n "checking whether 'ld' is at least 2.13""... $ac_c" 1>&6
-echo "configure:2966: checking whether 'ld' is at least 2.13" >&5
+echo "configure:2968: checking whether 'ld' is at least 2.13" >&5
 LD_PROG=`$CC --print-prog-name=ld`
 LD_VERSION=`$LD_PROG --version`
 LD_VERSION_MAJOR=`echo "$LD_VERSION" | head -1 | cut -d '.' -f 1 | cut -d ' ' -f 4`
@@ -3006,7 +3008,7 @@ esac
 
 
 echo $ac_n "checking how to run the C preprocessor""... $ac_c" 1>&6
-echo "configure:3010: checking how to run the C preprocessor" >&5
+echo "configure:3012: checking how to run the C preprocessor" >&5
 # On Suns, sometimes $CPP names a directory.
 if test -n "$CPP" && test -d "$CPP"; then
   CPP=
@@ -3021,13 +3023,13 @@ else
   # On the NeXT, cc -E runs the code through the compiler's parser,
   # not just through cpp.
   cat > conftest.$ac_ext <<EOF
-#line 3025 "configure"
+#line 3027 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3031: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3033: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -3038,13 +3040,13 @@ else
   rm -rf conftest*
   CPP="${CC-cc} -E -traditional-cpp"
   cat > conftest.$ac_ext <<EOF
-#line 3042 "configure"
+#line 3044 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3048: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3050: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -3055,13 +3057,13 @@ else
   rm -rf conftest*
   CPP="${CC-cc} -nologo -E"
   cat > conftest.$ac_ext <<EOF
-#line 3059 "configure"
+#line 3061 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3065: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3067: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -3086,7 +3088,7 @@ fi
 echo "$ac_t""$CPP" 1>&6
 
 cat > conftest.$ac_ext <<EOF
-#line 3090 "configure"
+#line 3092 "configure"
 #include "confdefs.h"
 #include <stdint.h>
 EOF
@@ -3101,7 +3103,7 @@ fi
 rm -f conftest*
 
 cat > conftest.$ac_ext <<EOF
-#line 3105 "configure"
+#line 3107 "configure"
 #include "confdefs.h"
 #include <inttypes.h>
 EOF
@@ -3116,7 +3118,7 @@ fi
 rm -f conftest*
 
 cat > conftest.$ac_ext <<EOF
-#line 3120 "configure"
+#line 3122 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 EOF
@@ -3131,7 +3133,7 @@ fi
 rm -f conftest*
 
 cat > conftest.$ac_ext <<EOF
-#line 3135 "configure"
+#line 3137 "configure"
 #include "confdefs.h"
 #include <sys/config.h>
 EOF
@@ -3148,7 +3150,7 @@ rm -f conftest*
 
 
 cat > conftest.$ac_ext <<EOF
-#line 3152 "configure"
+#line 3154 "configure"
 #include "confdefs.h"
 #include <time.h>
 EOF
@@ -3163,7 +3165,7 @@ fi
 rm -f conftest*
 
 cat > conftest.$ac_ext <<EOF
-#line 3167 "configure"
+#line 3169 "configure"
 #include "confdefs.h"
 #include <time.h>
 EOF
@@ -3215,7 +3217,7 @@ ZLIBTESTSPEC=
 libsubdir=.libs
 
 echo $ac_n "checking for garbage collector to use""... $ac_c" 1>&6
-echo "configure:3219: checking for garbage collector to use" >&5
+echo "configure:3221: checking for garbage collector to use" >&5
 # Check whether --enable-java-gc or --disable-java-gc was given.
 if test "${enable_java_gc+set}" = set; then
   enableval="$enable_java_gc"
@@ -3253,6 +3255,16 @@ EOF
     GCOBJS=nogc.lo
     GCHDR=no-gc.h
     ;;
+ jRate)
+    echo "$ac_t""jRate" 1>&6
+    GCOBJS=jRate-gc.lo
+    GCHDR=jRate-gc.h
+    cat >> confdefs.h <<\EOF
+#define HAVE_JRATE_GC 1
+EOF
+
+    ;;
+
  *)
     { echo "configure: error: unrecognized collector \"$GC\"" 1>&2; exit 1; }
     ;;
@@ -3268,7 +3280,7 @@ esac
 
 
 echo $ac_n "checking for thread model used by GCC""... $ac_c" 1>&6
-echo "configure:3272: checking for thread model used by GCC" >&5
+echo "configure:3284: checking for thread model used by GCC" >&5
 THREADS=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`
 echo "$ac_t""$THREADS" 1>&6
 
@@ -3476,12 +3488,12 @@ else
    for ac_func in strerror ioctl select fstat open fsync sleep opendir
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3480: checking for $ac_func" >&5
+echo "configure:3492: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3485 "configure"
+#line 3497 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3504,7 +3516,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3508: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3520: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3531,12 +3543,12 @@ done
    for ac_func in gmtime_r localtime_r readdir_r getpwuid_r getcwd
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3535: checking for $ac_func" >&5
+echo "configure:3547: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3540 "configure"
+#line 3552 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3559,7 +3571,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3563: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3575: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3586,12 +3598,12 @@ done
    for ac_func in access stat mkdir rename rmdir unlink realpath utime chmod
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3590: checking for $ac_func" >&5
+echo "configure:3602: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3595 "configure"
+#line 3607 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3614,7 +3626,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3618: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3630: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3641,12 +3653,12 @@ done
    for ac_func in nl_langinfo setlocale
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3645: checking for $ac_func" >&5
+echo "configure:3657: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3650 "configure"
+#line 3662 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3669,7 +3681,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3673: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3685: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3696,12 +3708,12 @@ done
    for ac_func in inet_aton inet_addr
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3700: checking for $ac_func" >&5
+echo "configure:3712: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3705 "configure"
+#line 3717 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3724,7 +3736,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3728: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3740: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3751,12 +3763,12 @@ done
    for ac_func in inet_pton uname inet_ntoa
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3755: checking for $ac_func" >&5
+echo "configure:3767: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3760 "configure"
+#line 3772 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3779,7 +3791,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3783: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3795: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3806,12 +3818,12 @@ done
    for ac_func in fork execvp pipe sigaction ftruncate
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3810: checking for $ac_func" >&5
+echo "configure:3822: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3815 "configure"
+#line 3827 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3834,7 +3846,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3838: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3850: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3862,17 +3874,17 @@ done
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:3866: checking for $ac_hdr" >&5
+echo "configure:3878: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3871 "configure"
+#line 3883 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3876: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3888: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -3899,12 +3911,12 @@ fi
 done
  
    echo $ac_n "checking for backtrace""... $ac_c" 1>&6
-echo "configure:3903: checking for backtrace" >&5
+echo "configure:3915: checking for backtrace" >&5
 if eval "test \"`echo '$''{'ac_cv_func_backtrace'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3908 "configure"
+#line 3920 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char backtrace(); below.  */
@@ -3927,7 +3939,7 @@ backtrace();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3931: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3943: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_backtrace=yes"
 else
@@ -3971,7 +3983,7 @@ fi
 
 
    echo $ac_n "checking for dladdr in -ldl""... $ac_c" 1>&6
-echo "configure:3975: checking for dladdr in -ldl" >&5
+echo "configure:3987: checking for dladdr in -ldl" >&5
 ac_lib_var=`echo dl'_'dladdr | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -3979,7 +3991,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 3983 "configure"
+#line 3995 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -3990,7 +4002,7 @@ int main() {
 dladdr()
 ; return 0; }
 EOF
-if { (eval echo configure:3994: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4006: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4020,7 +4032,7 @@ do
 
 ac_safe=`echo "$ac_file" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_file""... $ac_c" 1>&6
-echo "configure:4024: checking for $ac_file" >&5
+echo "configure:4036: checking for $ac_file" >&5
 if eval "test \"`echo '$''{'ac_cv_file_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4078,7 +4090,7 @@ fi
 
 
   echo $ac_n "checking for iconv""... $ac_c" 1>&6
-echo "configure:4082: checking for iconv" >&5
+echo "configure:4094: checking for iconv" >&5
 if eval "test \"`echo '$''{'am_cv_func_iconv'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4086,7 +4098,7 @@ else
     am_cv_func_iconv="no, consider installing GNU libiconv"
     am_cv_lib_iconv=no
     cat > conftest.$ac_ext <<EOF
-#line 4090 "configure"
+#line 4102 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <iconv.h>
@@ -4096,7 +4108,7 @@ iconv_t cd = iconv_open("","");
        iconv_close(cd);
 ; return 0; }
 EOF
-if { (eval echo configure:4100: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4112: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_func_iconv=yes
 else
@@ -4108,7 +4120,7 @@ rm -f conftest*
       am_save_LIBS="$LIBS"
       LIBS="$LIBS $am_cv_libiconv_ldpath -liconv"
       cat > conftest.$ac_ext <<EOF
-#line 4112 "configure"
+#line 4124 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <iconv.h>
@@ -4118,7 +4130,7 @@ iconv_t cd = iconv_open("","");
          iconv_close(cd);
 ; return 0; }
 EOF
-if { (eval echo configure:4122: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4134: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_lib_iconv=yes
         am_cv_func_iconv=yes
@@ -4139,13 +4151,13 @@ echo "$ac_t""$am_cv_func_iconv" 1>&6
 EOF
 
     echo $ac_n "checking for iconv declaration""... $ac_c" 1>&6
-echo "configure:4143: checking for iconv declaration" >&5
+echo "configure:4155: checking for iconv declaration" >&5
     if eval "test \"`echo '$''{'am_cv_proto_iconv'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   
       cat > conftest.$ac_ext <<EOF
-#line 4149 "configure"
+#line 4161 "configure"
 #include "confdefs.h"
 
 #include <stdlib.h>
@@ -4164,7 +4176,7 @@ int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:4168: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4180: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   am_cv_proto_iconv_arg1=""
 else
@@ -4193,19 +4205,19 @@ EOF
 
    if test $ac_cv_header_locale_h = yes; then
     echo $ac_n "checking for LC_MESSAGES""... $ac_c" 1>&6
-echo "configure:4197: checking for LC_MESSAGES" >&5
+echo "configure:4209: checking for LC_MESSAGES" >&5
 if eval "test \"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4202 "configure"
+#line 4214 "configure"
 #include "confdefs.h"
 #include <locale.h>
 int main() {
 return LC_MESSAGES
 ; return 0; }
 EOF
-if { (eval echo configure:4209: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4221: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_val_LC_MESSAGES=yes
 else
@@ -4226,12 +4238,12 @@ EOF
     fi
   fi
    echo $ac_n "checking whether struct tm is in sys/time.h or time.h""... $ac_c" 1>&6
-echo "configure:4230: checking whether struct tm is in sys/time.h or time.h" >&5
+echo "configure:4242: checking whether struct tm is in sys/time.h or time.h" >&5
 if eval "test \"`echo '$''{'ac_cv_struct_tm'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4235 "configure"
+#line 4247 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <time.h>
@@ -4239,7 +4251,7 @@ int main() {
 struct tm *tp; tp->tm_sec;
 ; return 0; }
 EOF
-if { (eval echo configure:4243: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4255: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_struct_tm=time.h
 else
@@ -4260,12 +4272,12 @@ EOF
 fi
 
 echo $ac_n "checking for tm_zone in struct tm""... $ac_c" 1>&6
-echo "configure:4264: checking for tm_zone in struct tm" >&5
+echo "configure:4276: checking for tm_zone in struct tm" >&5
 if eval "test \"`echo '$''{'ac_cv_struct_tm_zone'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4269 "configure"
+#line 4281 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <$ac_cv_struct_tm>
@@ -4273,7 +4285,7 @@ int main() {
 struct tm tm; tm.tm_zone;
 ; return 0; }
 EOF
-if { (eval echo configure:4277: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4289: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_struct_tm_zone=yes
 else
@@ -4293,12 +4305,12 @@ EOF
 
 else
   echo $ac_n "checking for tzname""... $ac_c" 1>&6
-echo "configure:4297: checking for tzname" >&5
+echo "configure:4309: checking for tzname" >&5
 if eval "test \"`echo '$''{'ac_cv_var_tzname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4302 "configure"
+#line 4314 "configure"
 #include "confdefs.h"
 #include <time.h>
 #ifndef tzname /* For SGI.  */
@@ -4308,7 +4320,7 @@ int main() {
 atoi(*tzname);
 ; return 0; }
 EOF
-if { (eval echo configure:4312: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4324: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_var_tzname=yes
 else
@@ -4333,12 +4345,12 @@ fi
    for ac_func in gethostbyname_r
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4337: checking for $ac_func" >&5
+echo "configure:4349: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4342 "configure"
+#line 4354 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4361,7 +4373,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4365: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4377: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4388,7 +4400,7 @@ EOF
      # We look for the one that returns `int'.
      # Hopefully this check is robust enough.
      cat > conftest.$ac_ext <<EOF
-#line 4392 "configure"
+#line 4404 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4408,7 +4420,7 @@ rm -f conftest*
      *" -D_REENTRANT "*) ;;
      *)
 		echo $ac_n "checking whether gethostbyname_r declaration requires -D_REENTRANT""... $ac_c" 1>&6
-echo "configure:4412: checking whether gethostbyname_r declaration requires -D_REENTRANT" >&5
+echo "configure:4424: checking whether gethostbyname_r declaration requires -D_REENTRANT" >&5
 if eval "test \"`echo '$''{'libjava_cv_gethostbyname_r_needs_reentrant'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4421,14 +4433,14 @@ ac_link='${CXX-g++} -o conftest${ac_exee
 cross_compiling=$ac_cv_prog_cxx_cross
 
 	  cat > conftest.$ac_ext <<EOF
-#line 4425 "configure"
+#line 4437 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 int main() {
 gethostbyname_r("", 0, 0);
 ; return 0; }
 EOF
-if { (eval echo configure:4432: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4444: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_gethostbyname_r_needs_reentrant=no
 else
@@ -4438,14 +4450,14 @@ else
   		CPPFLAGS_SAVE="$CPPFLAGS"
 		CPPFLAGS="$CPPFLAGS -D_REENTRANT"
 		cat > conftest.$ac_ext <<EOF
-#line 4442 "configure"
+#line 4454 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 int main() {
 gethostbyname_r("", 0, 0);
 ; return 0; }
 EOF
-if { (eval echo configure:4449: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4461: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_gethostbyname_r_needs_reentrant=yes
 else
@@ -4480,12 +4492,12 @@ EOF
      esac
 
      echo $ac_n "checking for struct hostent_data""... $ac_c" 1>&6
-echo "configure:4484: checking for struct hostent_data" >&5
+echo "configure:4496: checking for struct hostent_data" >&5
 if eval "test \"`echo '$''{'libjava_cv_struct_hostent_data'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   	cat > conftest.$ac_ext <<EOF
-#line 4489 "configure"
+#line 4501 "configure"
 #include "confdefs.h"
 
 #if GETHOSTBYNAME_R_NEEDS_REENTRANT && !defined(_REENTRANT)
@@ -4496,7 +4508,7 @@ int main() {
 struct hostent_data data;
 ; return 0; }
 EOF
-if { (eval echo configure:4500: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4512: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_struct_hostent_data=yes
 else
@@ -4528,7 +4540,7 @@ done
    # to exist where expected.  (The root issue: AC_CHECK_FUNCS assumes C
    # linkage check is enough, yet C++ code requires proper prototypes.)
    cat > conftest.$ac_ext <<EOF
-#line 4532 "configure"
+#line 4544 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4539,12 +4551,12 @@ if (eval "$ac_cpp conftest.$ac_ext") 2>&
    for ac_func in gethostbyaddr_r
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4543: checking for $ac_func" >&5
+echo "configure:4555: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4548 "configure"
+#line 4560 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4567,7 +4579,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4571: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4583: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4594,7 +4606,7 @@ EOF
      # We look for the one that returns `int'.
      # Hopefully this check is robust enough.
      cat > conftest.$ac_ext <<EOF
-#line 4598 "configure"
+#line 4610 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4621,12 +4633,12 @@ rm -f conftest*
    for ac_func in gethostname
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4625: checking for $ac_func" >&5
+echo "configure:4637: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4630 "configure"
+#line 4642 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4649,7 +4661,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4653: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4665: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4673,7 +4685,7 @@ EOF
 EOF
 
      cat > conftest.$ac_ext <<EOF
-#line 4677 "configure"
+#line 4689 "configure"
 #include "confdefs.h"
 #include <unistd.h>
 EOF
@@ -4704,12 +4716,12 @@ done
       for ac_func in pthread_mutexattr_settype pthread_mutexattr_setkind_np
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4708: checking for $ac_func" >&5
+echo "configure:4720: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4713 "configure"
+#line 4725 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4732,7 +4744,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4736: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4748: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4762,12 +4774,12 @@ done
       for ac_func in sched_yield
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4766: checking for $ac_func" >&5
+echo "configure:4778: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4771 "configure"
+#line 4783 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4790,7 +4802,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4794: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4806: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4812,7 +4824,7 @@ EOF
 else
   echo "$ac_t""no" 1>&6
 echo $ac_n "checking for sched_yield in -lrt""... $ac_c" 1>&6
-echo "configure:4816: checking for sched_yield in -lrt" >&5
+echo "configure:4828: checking for sched_yield in -lrt" >&5
 ac_lib_var=`echo rt'_'sched_yield | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -4820,7 +4832,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lrt  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 4824 "configure"
+#line 4836 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -4831,7 +4843,7 @@ int main() {
 sched_yield()
 ; return 0; }
 EOF
-if { (eval echo configure:4835: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4847: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4857,7 +4869,7 @@ else
   echo "$ac_t""no" 1>&6
 
 	  echo $ac_n "checking for sched_yield in -lposix4""... $ac_c" 1>&6
-echo "configure:4861: checking for sched_yield in -lposix4" >&5
+echo "configure:4873: checking for sched_yield in -lposix4" >&5
 ac_lib_var=`echo posix4'_'sched_yield | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -4865,7 +4877,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lposix4  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 4869 "configure"
+#line 4881 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -4876,7 +4888,7 @@ int main() {
 sched_yield()
 ; return 0; }
 EOF
-if { (eval echo configure:4880: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4892: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4912,7 +4924,7 @@ done
       # We can save a little space at runtime if the mutex has m_count
       # or __m_count.  This is a nice hack for Linux.
       cat > conftest.$ac_ext <<EOF
-#line 4916 "configure"
+#line 4928 "configure"
 #include "confdefs.h"
 #include <pthread.h>
 int main() {
@@ -4921,7 +4933,7 @@ int main() {
         
 ; return 0; }
 EOF
-if { (eval echo configure:4925: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4937: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define PTHREAD_MUTEX_HAVE_M_COUNT 1
@@ -4933,7 +4945,7 @@ else
   rm -rf conftest*
   
 	cat > conftest.$ac_ext <<EOF
-#line 4937 "configure"
+#line 4949 "configure"
 #include "confdefs.h"
 #include <pthread.h>
 int main() {
@@ -4942,7 +4954,7 @@ int main() {
 	  
 ; return 0; }
 EOF
-if { (eval echo configure:4946: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4958: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define PTHREAD_MUTEX_HAVE___M_COUNT 1
@@ -4962,12 +4974,12 @@ rm -f conftest*
    for ac_func in gettimeofday time ftime
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4966: checking for $ac_func" >&5
+echo "configure:4978: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4971 "configure"
+#line 4983 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4990,7 +5002,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4994: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5006: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5021,12 +5033,12 @@ done
    for ac_func in memmove
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:5025: checking for $ac_func" >&5
+echo "configure:5037: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5030 "configure"
+#line 5042 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -5049,7 +5061,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5053: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5065: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5079,12 +5091,12 @@ done
    for ac_func in memcpy
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:5083: checking for $ac_func" >&5
+echo "configure:5095: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5088 "configure"
+#line 5100 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -5107,7 +5119,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5111: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5123: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5136,7 +5148,7 @@ done
    fi
 
    echo $ac_n "checking for dlopen in -ldl""... $ac_c" 1>&6
-echo "configure:5140: checking for dlopen in -ldl" >&5
+echo "configure:5152: checking for dlopen in -ldl" >&5
 ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5144,7 +5156,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5148 "configure"
+#line 5160 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -5155,7 +5167,7 @@ int main() {
 dlopen()
 ; return 0; }
 EOF
-if { (eval echo configure:5159: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5171: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5200,7 +5212,7 @@ fi
    #--------------------------------------------------------------------
 
    echo $ac_n "checking for socket libraries""... $ac_c" 1>&6
-echo "configure:5204: checking for socket libraries" >&5
+echo "configure:5216: checking for socket libraries" >&5
 if eval "test \"`echo '$''{'gcj_cv_lib_sockets'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5208,12 +5220,12 @@ else
      gcj_checkBoth=0
      unset ac_cv_func_connect
      echo $ac_n "checking for connect""... $ac_c" 1>&6
-echo "configure:5212: checking for connect" >&5
+echo "configure:5224: checking for connect" >&5
 if eval "test \"`echo '$''{'ac_cv_func_connect'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5217 "configure"
+#line 5229 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char connect(); below.  */
@@ -5236,7 +5248,7 @@ connect();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5240: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5252: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_connect=yes"
 else
@@ -5259,7 +5271,7 @@ fi
      if test "$gcj_checkSocket" = 1; then
 	 unset ac_cv_func_connect
 	 echo $ac_n "checking for main in -lsocket""... $ac_c" 1>&6
-echo "configure:5263: checking for main in -lsocket" >&5
+echo "configure:5275: checking for main in -lsocket" >&5
 ac_lib_var=`echo socket'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5267,14 +5279,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lsocket  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5271 "configure"
+#line 5283 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5278: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5290: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5301,12 +5313,12 @@ fi
 	 LIBS="$LIBS -lsocket -lnsl"
 	 unset ac_cv_func_accept
 	 echo $ac_n "checking for accept""... $ac_c" 1>&6
-echo "configure:5305: checking for accept" >&5
+echo "configure:5317: checking for accept" >&5
 if eval "test \"`echo '$''{'ac_cv_func_accept'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5310 "configure"
+#line 5322 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char accept(); below.  */
@@ -5329,7 +5341,7 @@ accept();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5333: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5345: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_accept=yes"
 else
@@ -5356,12 +5368,12 @@ fi
      gcj_oldLibs=$LIBS
      LIBS="$LIBS $gcj_cv_lib_sockets"
      echo $ac_n "checking for gethostbyname""... $ac_c" 1>&6
-echo "configure:5360: checking for gethostbyname" >&5
+echo "configure:5372: checking for gethostbyname" >&5
 if eval "test \"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5365 "configure"
+#line 5377 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char gethostbyname(); below.  */
@@ -5384,7 +5396,7 @@ gethostbyname();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5388: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5400: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_gethostbyname=yes"
 else
@@ -5402,7 +5414,7 @@ if eval "test \"`echo '$ac_cv_func_'geth
 else
   echo "$ac_t""no" 1>&6
 echo $ac_n "checking for main in -lnsl""... $ac_c" 1>&6
-echo "configure:5406: checking for main in -lnsl" >&5
+echo "configure:5418: checking for main in -lnsl" >&5
 ac_lib_var=`echo nsl'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5410,14 +5422,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lnsl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5414 "configure"
+#line 5426 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5421: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5433: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5449,7 +5461,7 @@ echo "$ac_t""$gcj_cv_lib_sockets" 1>&6
 
    if test "$with_system_zlib" = yes; then
       echo $ac_n "checking for deflate in -lz""... $ac_c" 1>&6
-echo "configure:5453: checking for deflate in -lz" >&5
+echo "configure:5465: checking for deflate in -lz" >&5
 ac_lib_var=`echo z'_'deflate | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5457,7 +5469,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lz  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5461 "configure"
+#line 5473 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -5468,7 +5480,7 @@ int main() {
 deflate()
 ; return 0; }
 EOF
-if { (eval echo configure:5472: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5484: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5495,7 +5507,7 @@ fi
    # requires -ldl.
    if test "$GC" = boehm; then
       echo $ac_n "checking for main in -ldl""... $ac_c" 1>&6
-echo "configure:5499: checking for main in -ldl" >&5
+echo "configure:5511: checking for main in -ldl" >&5
 ac_lib_var=`echo dl'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5503,14 +5515,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5507 "configure"
+#line 5519 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5514: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5526: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5576,7 +5588,7 @@ fi
 # Extract the first word of "${ac_tool_prefix}gcj", so it can be a program name with args.
 set dummy ${ac_tool_prefix}gcj; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:5580: checking for $ac_word" >&5
+echo "configure:5592: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_GCJ'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5608,7 +5620,7 @@ if test -n "$ac_tool_prefix"; then
   # Extract the first word of "gcj", so it can be a program name with args.
 set dummy gcj; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:5612: checking for $ac_word" >&5
+echo "configure:5624: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_GCJ'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5670,13 +5682,13 @@ exec 5>>./config.log
 CPPFLAGS=$GCJ_SAVE_CPPFLAGS
 
 echo $ac_n "checking size of void *""... $ac_c" 1>&6
-echo "configure:5674: checking size of void *" >&5
+echo "configure:5686: checking size of void *" >&5
 if eval "test \"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.
   cat > conftest.$ac_ext <<EOF
-#line 5680 "configure"
+#line 5692 "configure"
 #include "confdefs.h"
 #include "confdefs.h"
 #include <sys/types.h>
@@ -5686,7 +5698,7 @@ int main() {
 switch (0) case 0: case (sizeof (void *) == $ac_size):;
 ; return 0; }
 EOF
-if { (eval echo configure:5690: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:5702: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_sizeof_void_p=$ac_size
 else
@@ -5792,18 +5804,18 @@ EOF
 
 
 echo $ac_n "checking for g++ -ffloat-store bug""... $ac_c" 1>&6
-echo "configure:5796: checking for g++ -ffloat-store bug" >&5
+echo "configure:5808: checking for g++ -ffloat-store bug" >&5
 save_CFLAGS="$CFLAGS"
 CFLAGS="-x c++ -O2 -ffloat-store"
 cat > conftest.$ac_ext <<EOF
-#line 5800 "configure"
+#line 5812 "configure"
 #include "confdefs.h"
 #include <math.h>
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:5807: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:5819: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
 else
@@ -5823,17 +5835,17 @@ for ac_hdr in unistd.h bstring.h sys/tim
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5827: checking for $ac_hdr" >&5
+echo "configure:5839: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5832 "configure"
+#line 5844 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5837: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5849: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5863,17 +5875,17 @@ for ac_hdr in dirent.h
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5867: checking for $ac_hdr" >&5
+echo "configure:5879: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5872 "configure"
+#line 5884 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5877: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5889: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5903,17 +5915,17 @@ for ac_hdr in inttypes.h
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5907: checking for $ac_hdr" >&5
+echo "configure:5919: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5912 "configure"
+#line 5924 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5917: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5929: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5949,12 +5961,12 @@ fi
 done
 
 echo $ac_n "checking for sys/wait.h that is POSIX.1 compatible""... $ac_c" 1>&6
-echo "configure:5953: checking for sys/wait.h that is POSIX.1 compatible" >&5
+echo "configure:5965: checking for sys/wait.h that is POSIX.1 compatible" >&5
 if eval "test \"`echo '$''{'ac_cv_header_sys_wait_h'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5958 "configure"
+#line 5970 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <sys/wait.h>
@@ -5970,7 +5982,7 @@ wait (&s);
 s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;
 ; return 0; }
 EOF
-if { (eval echo configure:5974: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:5986: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_header_sys_wait_h=yes
 else
@@ -5992,12 +6004,12 @@ fi
 
 
 echo $ac_n "checking for ANSI C header files""... $ac_c" 1>&6
-echo "configure:5996: checking for ANSI C header files" >&5
+echo "configure:6008: checking for ANSI C header files" >&5
 if eval "test \"`echo '$''{'ac_cv_header_stdc'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6001 "configure"
+#line 6013 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <stdarg.h>
@@ -6005,7 +6017,7 @@ else
 #include <float.h>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:6009: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:6021: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -6022,7 +6034,7 @@ rm -f conftest*
 if test $ac_cv_header_stdc = yes; then
   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
 cat > conftest.$ac_ext <<EOF
-#line 6026 "configure"
+#line 6038 "configure"
 #include "confdefs.h"
 #include <string.h>
 EOF
@@ -6040,7 +6052,7 @@ fi
 if test $ac_cv_header_stdc = yes; then
   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
 cat > conftest.$ac_ext <<EOF
-#line 6044 "configure"
+#line 6056 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 EOF
@@ -6061,7 +6073,7 @@ if test "$cross_compiling" = yes; then
   :
 else
   cat > conftest.$ac_ext <<EOF
-#line 6065 "configure"
+#line 6077 "configure"
 #include "confdefs.h"
 #include <ctype.h>
 #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
@@ -6072,7 +6084,7 @@ if (XOR (islower (i), ISLOWER (i)) || to
 exit (0); }
 
 EOF
-if { (eval echo configure:6076: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:6088: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
 then
   :
 else
@@ -6096,12 +6108,12 @@ EOF
 fi
 
 echo $ac_n "checking for ssize_t""... $ac_c" 1>&6
-echo "configure:6100: checking for ssize_t" >&5
+echo "configure:6112: checking for ssize_t" >&5
 if eval "test \"`echo '$''{'ac_cv_type_ssize_t'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6105 "configure"
+#line 6117 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #if STDC_HEADERS
@@ -6130,9 +6142,9 @@ fi
 
 
 echo $ac_n "checking for in_addr_t""... $ac_c" 1>&6
-echo "configure:6134: checking for in_addr_t" >&5
+echo "configure:6146: checking for in_addr_t" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6136 "configure"
+#line 6148 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #if STDC_HEADERS
@@ -6146,7 +6158,7 @@ int main() {
 in_addr_t foo;
 ; return 0; }
 EOF
-if { (eval echo configure:6150: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6162: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_IN_ADDR_T 1
@@ -6162,16 +6174,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct ip_mreq is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6166: checking whether struct ip_mreq is in netinet/in.h" >&5
+echo "configure:6178: checking whether struct ip_mreq is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6168 "configure"
+#line 6180 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct ip_mreq mreq;
 ; return 0; }
 EOF
-if { (eval echo configure:6175: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6187: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_STRUCT_IP_MREQ 1
@@ -6187,16 +6199,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct ipv6_mreq is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6191: checking whether struct ipv6_mreq is in netinet/in.h" >&5
+echo "configure:6203: checking whether struct ipv6_mreq is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6193 "configure"
+#line 6205 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct ipv6_mreq mreq6;
 ; return 0; }
 EOF
-if { (eval echo configure:6200: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6212: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_STRUCT_IPV6_MREQ 1
@@ -6212,16 +6224,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct sockaddr_in6 is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6216: checking whether struct sockaddr_in6 is in netinet/in.h" >&5
+echo "configure:6228: checking whether struct sockaddr_in6 is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6218 "configure"
+#line 6230 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct sockaddr_in6 addr6;
 ; return 0; }
 EOF
-if { (eval echo configure:6225: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6237: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_INET6 1
@@ -6237,9 +6249,9 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking for socklen_t in sys/socket.h""... $ac_c" 1>&6
-echo "configure:6241: checking for socklen_t in sys/socket.h" >&5
+echo "configure:6253: checking for socklen_t in sys/socket.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6243 "configure"
+#line 6255 "configure"
 #include "confdefs.h"
 #define _POSIX_PII_SOCKET
 #include <sys/types.h>
@@ -6248,7 +6260,7 @@ int main() {
 socklen_t x = 5;
 ; return 0; }
 EOF
-if { (eval echo configure:6252: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6264: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_SOCKLEN_T 1
@@ -6264,16 +6276,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking for tm_gmtoff in struct tm""... $ac_c" 1>&6
-echo "configure:6268: checking for tm_gmtoff in struct tm" >&5
+echo "configure:6280: checking for tm_gmtoff in struct tm" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6270 "configure"
+#line 6282 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 struct tm tim; tim.tm_gmtoff = 0;
 ; return 0; }
 EOF
-if { (eval echo configure:6277: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6289: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define STRUCT_TM_HAS_GMTOFF 1
@@ -6286,16 +6298,16 @@ else
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
    echo $ac_n "checking for global timezone variable""... $ac_c" 1>&6
-echo "configure:6290: checking for global timezone variable" >&5
+echo "configure:6302: checking for global timezone variable" >&5
                cat > conftest.$ac_ext <<EOF
-#line 6292 "configure"
+#line 6304 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 void i(){long z2 = 2*timezone;}
 ; return 0; }
 EOF
-if { (eval echo configure:6299: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6311: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_TIMEZONE 1
@@ -6308,16 +6320,16 @@ else
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
        echo $ac_n "checking for global _timezone variable""... $ac_c" 1>&6
-echo "configure:6312: checking for global _timezone variable" >&5
+echo "configure:6324: checking for global _timezone variable" >&5
               cat > conftest.$ac_ext <<EOF
-#line 6314 "configure"
+#line 6326 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 long z2 = _timezone;
 ; return 0; }
 EOF
-if { (eval echo configure:6321: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6333: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_UNDERSCORE_TIMEZONE 1
@@ -6339,19 +6351,19 @@ rm -f conftest*
 # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works
 # for constant arguments.  Useless!
 echo $ac_n "checking for working alloca.h""... $ac_c" 1>&6
-echo "configure:6343: checking for working alloca.h" >&5
+echo "configure:6355: checking for working alloca.h" >&5
 if eval "test \"`echo '$''{'ac_cv_header_alloca_h'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6348 "configure"
+#line 6360 "configure"
 #include "confdefs.h"
 #include <alloca.h>
 int main() {
 char *p = alloca(2 * sizeof(int));
 ; return 0; }
 EOF
-if { (eval echo configure:6355: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6367: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_header_alloca_h=yes
 else
@@ -6372,12 +6384,12 @@ EOF
 fi
 
 echo $ac_n "checking for alloca""... $ac_c" 1>&6
-echo "configure:6376: checking for alloca" >&5
+echo "configure:6388: checking for alloca" >&5
 if eval "test \"`echo '$''{'ac_cv_func_alloca_works'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6381 "configure"
+#line 6393 "configure"
 #include "confdefs.h"
 
 #ifdef __GNUC__
@@ -6405,7 +6417,7 @@ int main() {
 char *p = (char *) alloca(1);
 ; return 0; }
 EOF
-if { (eval echo configure:6409: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6421: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_func_alloca_works=yes
 else
@@ -6437,12 +6449,12 @@ EOF
 
 
 echo $ac_n "checking whether alloca needs Cray hooks""... $ac_c" 1>&6
-echo "configure:6441: checking whether alloca needs Cray hooks" >&5
+echo "configure:6453: checking whether alloca needs Cray hooks" >&5
 if eval "test \"`echo '$''{'ac_cv_os_cray'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6446 "configure"
+#line 6458 "configure"
 #include "confdefs.h"
 #if defined(CRAY) && ! defined(CRAY2)
 webecray
@@ -6467,12 +6479,12 @@ echo "$ac_t""$ac_cv_os_cray" 1>&6
 if test $ac_cv_os_cray = yes; then
 for ac_func in _getb67 GETB67 getb67; do
   echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:6471: checking for $ac_func" >&5
+echo "configure:6483: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6476 "configure"
+#line 6488 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -6495,7 +6507,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:6499: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6511: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -6522,7 +6534,7 @@ done
 fi
 
 echo $ac_n "checking stack direction for C alloca""... $ac_c" 1>&6
-echo "configure:6526: checking stack direction for C alloca" >&5
+echo "configure:6538: checking stack direction for C alloca" >&5
 if eval "test \"`echo '$''{'ac_cv_c_stack_direction'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -6530,7 +6542,7 @@ else
   ac_cv_c_stack_direction=0
 else
   cat > conftest.$ac_ext <<EOF
-#line 6534 "configure"
+#line 6546 "configure"
 #include "confdefs.h"
 find_stack_direction ()
 {
@@ -6549,7 +6561,7 @@ main ()
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:6553: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:6565: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -6576,7 +6588,7 @@ do
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:6580: checking for $ac_word" >&5
+echo "configure:6592: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_PERL'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -6675,7 +6687,7 @@ fi
 # Uses ac_ vars as temps to allow command line to override cache and checks.
 # --without-x overrides everything else, but does not touch the cache.
 echo $ac_n "checking for X""... $ac_c" 1>&6
-echo "configure:6679: checking for X" >&5
+echo "configure:6691: checking for X" >&5
 
 # Check whether --with-x or --without-x was given.
 if test "${with_x+set}" = set; then
@@ -6737,12 +6749,12 @@ if test "$ac_x_includes" = NO; then
 
   # First, try using that file with no special directory specified.
 cat > conftest.$ac_ext <<EOF
-#line 6741 "configure"
+#line 6753 "configure"
 #include "confdefs.h"
 #include <$x_direct_test_include>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:6746: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:6758: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -6811,14 +6823,14 @@ if test "$ac_x_libraries" = NO; then
   ac_save_LIBS="$LIBS"
   LIBS="-l$x_direct_test_library $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 6815 "configure"
+#line 6827 "configure"
 #include "confdefs.h"
 
 int main() {
 ${x_direct_test_function}()
 ; return 0; }
 EOF
-if { (eval echo configure:6822: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6834: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   LIBS="$ac_save_LIBS"
 # We can link X programs with no special library path.
@@ -6924,17 +6936,17 @@ else
     case "`(uname -sr) 2>/dev/null`" in
     "SunOS 5"*)
       echo $ac_n "checking whether -R must be followed by a space""... $ac_c" 1>&6
-echo "configure:6928: checking whether -R must be followed by a space" >&5
+echo "configure:6940: checking whether -R must be followed by a space" >&5
       ac_xsave_LIBS="$LIBS"; LIBS="$LIBS -R$x_libraries"
       cat > conftest.$ac_ext <<EOF
-#line 6931 "configure"
+#line 6943 "configure"
 #include "confdefs.h"
 
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:6938: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6950: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_R_nospace=yes
 else
@@ -6950,14 +6962,14 @@ rm -f conftest*
       else
 	LIBS="$ac_xsave_LIBS -R $x_libraries"
 	cat > conftest.$ac_ext <<EOF
-#line 6954 "configure"
+#line 6966 "configure"
 #include "confdefs.h"
 
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:6961: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6973: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_R_space=yes
 else
@@ -6989,7 +7001,7 @@ rm -f conftest*
     # libraries were built with DECnet support.  And karl@cs.umb.edu says
     # the Alpha needs dnet_stub (dnet does not exist).
     echo $ac_n "checking for dnet_ntoa in -ldnet""... $ac_c" 1>&6
-echo "configure:6993: checking for dnet_ntoa in -ldnet" >&5
+echo "configure:7005: checking for dnet_ntoa in -ldnet" >&5
 ac_lib_var=`echo dnet'_'dnet_ntoa | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -6997,7 +7009,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldnet  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7001 "configure"
+#line 7013 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7008,7 +7020,7 @@ int main() {
 dnet_ntoa()
 ; return 0; }
 EOF
-if { (eval echo configure:7012: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7024: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7030,7 +7042,7 @@ fi
 
     if test $ac_cv_lib_dnet_dnet_ntoa = no; then
       echo $ac_n "checking for dnet_ntoa in -ldnet_stub""... $ac_c" 1>&6
-echo "configure:7034: checking for dnet_ntoa in -ldnet_stub" >&5
+echo "configure:7046: checking for dnet_ntoa in -ldnet_stub" >&5
 ac_lib_var=`echo dnet_stub'_'dnet_ntoa | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7038,7 +7050,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldnet_stub  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7042 "configure"
+#line 7054 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7049,7 +7061,7 @@ int main() {
 dnet_ntoa()
 ; return 0; }
 EOF
-if { (eval echo configure:7053: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7065: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7078,12 +7090,12 @@ fi
     # The nsl library prevents programs from opening the X display
     # on Irix 5.2, according to dickey@clark.net.
     echo $ac_n "checking for gethostbyname""... $ac_c" 1>&6
-echo "configure:7082: checking for gethostbyname" >&5
+echo "configure:7094: checking for gethostbyname" >&5
 if eval "test \"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7087 "configure"
+#line 7099 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char gethostbyname(); below.  */
@@ -7106,7 +7118,7 @@ gethostbyname();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7110: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7122: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_gethostbyname=yes"
 else
@@ -7127,7 +7139,7 @@ fi
 
     if test $ac_cv_func_gethostbyname = no; then
       echo $ac_n "checking for gethostbyname in -lnsl""... $ac_c" 1>&6
-echo "configure:7131: checking for gethostbyname in -lnsl" >&5
+echo "configure:7143: checking for gethostbyname in -lnsl" >&5
 ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7135,7 +7147,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lnsl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7139 "configure"
+#line 7151 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7146,7 +7158,7 @@ int main() {
 gethostbyname()
 ; return 0; }
 EOF
-if { (eval echo configure:7150: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7162: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7176,12 +7188,12 @@ fi
     # -lsocket must be given before -lnsl if both are needed.
     # We assume that if connect needs -lnsl, so does gethostbyname.
     echo $ac_n "checking for connect""... $ac_c" 1>&6
-echo "configure:7180: checking for connect" >&5
+echo "configure:7192: checking for connect" >&5
 if eval "test \"`echo '$''{'ac_cv_func_connect'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7185 "configure"
+#line 7197 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char connect(); below.  */
@@ -7204,7 +7216,7 @@ connect();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7208: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7220: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_connect=yes"
 else
@@ -7225,7 +7237,7 @@ fi
 
     if test $ac_cv_func_connect = no; then
       echo $ac_n "checking for connect in -lsocket""... $ac_c" 1>&6
-echo "configure:7229: checking for connect in -lsocket" >&5
+echo "configure:7241: checking for connect in -lsocket" >&5
 ac_lib_var=`echo socket'_'connect | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7233,7 +7245,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lsocket $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7237 "configure"
+#line 7249 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7244,7 +7256,7 @@ int main() {
 connect()
 ; return 0; }
 EOF
-if { (eval echo configure:7248: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7260: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7268,12 +7280,12 @@ fi
 
     # gomez@mi.uni-erlangen.de says -lposix is necessary on A/UX.
     echo $ac_n "checking for remove""... $ac_c" 1>&6
-echo "configure:7272: checking for remove" >&5
+echo "configure:7284: checking for remove" >&5
 if eval "test \"`echo '$''{'ac_cv_func_remove'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7277 "configure"
+#line 7289 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char remove(); below.  */
@@ -7296,7 +7308,7 @@ remove();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7300: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7312: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_remove=yes"
 else
@@ -7317,7 +7329,7 @@ fi
 
     if test $ac_cv_func_remove = no; then
       echo $ac_n "checking for remove in -lposix""... $ac_c" 1>&6
-echo "configure:7321: checking for remove in -lposix" >&5
+echo "configure:7333: checking for remove in -lposix" >&5
 ac_lib_var=`echo posix'_'remove | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7325,7 +7337,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lposix  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7329 "configure"
+#line 7341 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7336,7 +7348,7 @@ int main() {
 remove()
 ; return 0; }
 EOF
-if { (eval echo configure:7340: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7352: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7360,12 +7372,12 @@ fi
 
     # BSDI BSD/OS 2.1 needs -lipc for XOpenDisplay.
     echo $ac_n "checking for shmat""... $ac_c" 1>&6
-echo "configure:7364: checking for shmat" >&5
+echo "configure:7376: checking for shmat" >&5
 if eval "test \"`echo '$''{'ac_cv_func_shmat'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7369 "configure"
+#line 7381 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char shmat(); below.  */
@@ -7388,7 +7400,7 @@ shmat();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7392: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7404: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_shmat=yes"
 else
@@ -7409,7 +7421,7 @@ fi
 
     if test $ac_cv_func_shmat = no; then
       echo $ac_n "checking for shmat in -lipc""... $ac_c" 1>&6
-echo "configure:7413: checking for shmat in -lipc" >&5
+echo "configure:7425: checking for shmat in -lipc" >&5
 ac_lib_var=`echo ipc'_'shmat | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7417,7 +7429,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lipc  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7421 "configure"
+#line 7433 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7428,7 +7440,7 @@ int main() {
 shmat()
 ; return 0; }
 EOF
-if { (eval echo configure:7432: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7444: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7461,7 +7473,7 @@ fi
   # libraries we check for below, so use a different variable.
   #  --interran@uluru.Stanford.EDU, kb@cs.umb.edu.
   echo $ac_n "checking for IceConnectionNumber in -lICE""... $ac_c" 1>&6
-echo "configure:7465: checking for IceConnectionNumber in -lICE" >&5
+echo "configure:7477: checking for IceConnectionNumber in -lICE" >&5
 ac_lib_var=`echo ICE'_'IceConnectionNumber | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7469,7 +7481,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lICE $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7473 "configure"
+#line 7485 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7480,7 +7492,7 @@ int main() {
 IceConnectionNumber()
 ; return 0; }
 EOF
-if { (eval echo configure:7484: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7496: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -8221,7 +8233,7 @@ if test "$no_recursion" != yes; then
       fi
     fi
 
-    cd $ac_popdir
+    cd "$ac_popdir"
   done
 fi
 
diff -Nurp ../gcc/libjava/configure.in ./libjava/configure.in
--- ../gcc/libjava/configure.in	Tue Jun 17 11:04:20 2003
+++ ./libjava/configure.in	Fri Aug  5 22:03:40 2005
@@ -87,11 +87,13 @@ fi
 
 dnl configure.host sets slow_pthread_self if the synchronization code should 
 dnl try to avoid pthread_self calls by caching thread IDs in a hashtable.
-if test "${slow_pthread_self}" = "yes"; then
+if test -z "$enable_pthread_self_cache"; then
+  enable_pthread_self_cache=${show_pthread_self:-no}
+fi
+if test "${enable_pthread_self_cache}" = yes; then
   AC_DEFINE(SLOW_PTHREAD_SELF)
 fi
 
-
 dnl See if the user has requested runtime debugging.
 LIBGCJDEBUG="false"
 AC_SUBST(LIBGCJDEBUG)
@@ -328,6 +330,13 @@ case "$GC" in
     GCOBJS=nogc.lo
     GCHDR=no-gc.h
     ;;
+ jRate)
+    AC_MSG_RESULT(jRate)
+    GCOBJS=jRate-gc.lo
+    GCHDR=jRate-gc.h
+    AC_DEFINE(HAVE_JRATE_GC)
+    ;;
+
  *)
     AC_MSG_ERROR(unrecognized collector \"$GC\")
     ;;
diff -Nurp ../gcc/libjava/gcj/javaprims.h ./libjava/gcj/javaprims.h
--- ../gcc/libjava/gcj/javaprims.h	Mon Jan 20 00:49:28 2003
+++ ./libjava/gcj/javaprims.h	Fri Aug  5 22:03:41 2005
@@ -407,6 +407,8 @@ extern "Java"
   };
 };
   
+#include "rtjavaprims.h"
+
 typedef struct java::lang::Object* jobject;
 typedef class java::lang::Class* jclass;
 typedef class java::lang::Throwable* jthrowable;
diff -Nurp ../gcc/libjava/gnu/gcj/convert/BytesToUnicode.java ./libjava/gnu/gcj/convert/BytesToUnicode.java
--- ../gcc/libjava/gnu/gcj/convert/BytesToUnicode.java	Mon Jul 30 15:24:17 2001
+++ ./libjava/gnu/gcj/convert/BytesToUnicode.java	Fri Aug  5 22:03:41 2005
@@ -28,10 +28,11 @@ public abstract class BytesToUnicode ext
      we don't need then the cache would be worthless.  We instead
      circulate through the cache the implement kind of an LRU
      algorithm. */
-  private static final int CACHE_SIZE = 4;  // A power of 2 for speed
-  private static BytesToUnicode[] decoderCache
-    = new BytesToUnicode[CACHE_SIZE];
-  private static int currCachePos = 0;
+  // MGD 2004/10/20 disable cache for RTSJ scope-friendliness
+  // private static final int CACHE_SIZE = 4;  // A power of 2 for speed
+  // private static BytesToUnicode[] decoderCache
+  //   = new BytesToUnicode[CACHE_SIZE];
+  // private static int currCachePos = 0;
 
   public abstract String getName();
 
@@ -75,6 +76,8 @@ public abstract class BytesToUnicode ext
   {
     /* First hunt in our cache to see if we have a decoder that is
        already allocated. */
+    // MGD 2004/10/20 disable cache for RTSJ scope-friendliness
+    /*
     synchronized (BytesToUnicode.class)
       {
 	int i;
@@ -89,6 +92,7 @@ public abstract class BytesToUnicode ext
 	    }
 	  }
       }
+    */
 
     // It's not in the cache, so now we have to do real work.
     String className = "gnu.gcj.convert.Input_" + canonicalize (encoding);
@@ -158,8 +162,9 @@ public abstract class BytesToUnicode ext
 	this.inpos = 0;
 	this.inlength = 0;
 
-	decoderCache[currCachePos] = this;
-	currCachePos = (currCachePos + 1) % CACHE_SIZE;
+        // MGD 2004/10/20 disable cache for RTSJ scope-friendliness
+	// decoderCache[currCachePos] = this;
+	// currCachePos = (currCachePos + 1) % CACHE_SIZE;
       }
   }
 }
diff -Nurp ../gcc/libjava/gnu/gcj/convert/UnicodeToBytes.java ./libjava/gnu/gcj/convert/UnicodeToBytes.java
--- ../gcc/libjava/gnu/gcj/convert/UnicodeToBytes.java	Sat Jun  7 13:42:28 2003
+++ ./libjava/gnu/gcj/convert/UnicodeToBytes.java	Fri Aug  5 22:03:41 2005
@@ -25,10 +25,10 @@ public abstract class UnicodeToBytes ext
      don't need then the cache would be worthless.  We instead
      circulate through the cache the implement kind of an LRU
      algorithm. */
-  private static final int CACHE_SIZE = 4;  // A power of 2 for speed
-  private static UnicodeToBytes[] encoderCache
-    = new UnicodeToBytes[CACHE_SIZE];
-  private static int currCachePos = 0;
+  // private static final int CACHE_SIZE = 4;  // A power of 2 for speed
+  // private static UnicodeToBytes[] encoderCache
+  //   = new UnicodeToBytes[CACHE_SIZE];
+  // private static int currCachePos = 0;
 
   public abstract String getName();
 
@@ -73,6 +73,7 @@ public abstract class UnicodeToBytes ext
   {
     /* First hunt in our cache to see if we have a encoder that is
        already allocated. */
+    /*
     synchronized (UnicodeToBytes.class)
       {
 	int i;
@@ -87,6 +88,7 @@ public abstract class UnicodeToBytes ext
 	    }
 	  }
       }
+    */
 
     String className = "gnu.gcj.convert.Output_" + canonicalize (encoding);
     Class encodingClass;
@@ -168,9 +170,11 @@ public abstract class UnicodeToBytes ext
       {
 	this.buf = null;
 	this.count = 0;
-
-	encoderCache[currCachePos] = this;
-	currCachePos = (currCachePos + 1) % CACHE_SIZE;
+      //
+      // Caches don't work well with scopes!
+      //
+      // encoderCache[currCachePos] = this;
+      // currCachePos = (currCachePos + 1) % CACHE_SIZE;
       }
   }
 }
diff -Nurp ../gcc/libjava/gnu/gcj/runtime/FileDeleter.java ./libjava/gnu/gcj/runtime/FileDeleter.java
--- ../gcc/libjava/gnu/gcj/runtime/FileDeleter.java	Tue Sep  5 06:05:58 2000
+++ ./libjava/gnu/gcj/runtime/FileDeleter.java	Fri Aug  5 22:03:41 2005
@@ -8,28 +8,24 @@ details.  */
 
 package gnu.gcj.runtime;
 
-import java.io.*;
-import java.util.*;
+import java.io.File;
+import java.util.Vector;
 
 public final class FileDeleter
 {
-  public synchronized static void add (File f)
+    public static void add (File f)
   {
-    if (deleteOnExitStack == null)
-      deleteOnExitStack = new Stack ();
-
-    deleteOnExitStack.push (f);
+        deleteOnExitStack.add (f);
   }
 
   // Helper method called by java.lang.Runtime.exit() to perform
   // pending deletions.
-  public synchronized static void deleteOnExitNow ()
+    public static void deleteOnExitNow ()
   {
-    if (deleteOnExitStack != null)
-      while (!deleteOnExitStack.empty ())
-	((File)(deleteOnExitStack.pop ())).delete ();
+        for (int i = 0; i < deleteOnExitStack.size(); ++i) 
+            ((File)(deleteOnExitStack.remove(i))).delete ();
   }
 
   // A stack of files to delete upon normal termination.
-  private static Stack deleteOnExitStack;
+    private static Vector deleteOnExitStack = new Vector();
 }
diff -Nurp ../gcc/libjava/gnu/gcj/runtime/NameFinder.java ./libjava/gnu/gcj/runtime/NameFinder.java
--- ../gcc/libjava/gnu/gcj/runtime/NameFinder.java	Mon Mar 10 13:34:30 2003
+++ ./libjava/gnu/gcj/runtime/NameFinder.java	Fri Aug  5 22:03:41 2005
@@ -179,7 +179,7 @@ public class NameFinder
    * Tries to use dladdr to create the nth StackTraceElement from the given
    * addresses. Returns null on failure.
    */
-  native private StackTraceElement dladdrLookup(RawData addrs, int n);
+  native private StackTraceElement dladdrLookup(Throwable t, RawData addrs, int n);
 
   /**
    * Returns the nth element from the stack as a hex encoded String.
@@ -195,18 +195,18 @@ public class NameFinder
    * If nth element of stack is an interpreted frame, return the
    * element representing the method being interpreted.
    */
-  native private StackTraceElement lookupInterp(RawData addrs, int n);
+  native private StackTraceElement lookupInterp(Throwable t, RawData addrs, int n);
 
   /**
    * Creates the nth StackTraceElement from the given native stacktrace.
    */
-  private StackTraceElement lookup(RawData addrs, int n)
+  private StackTraceElement lookup0(Throwable t, RawData addrs, int n)
   {
     StackTraceElement result;
 
-    result = lookupInterp(addrs, n);
+    result = lookupInterp(t, addrs, n);
     if (result == null)
-      result = dladdrLookup(addrs, n);
+      result = dladdrLookup(t, addrs, n);
     if (result == null)
       {
 	String name = null;
@@ -239,7 +239,7 @@ public class NameFinder
 	if (name == null || "??".equals(name))
 	  name = hex;
 
-	result = createStackTraceElement(name, file);
+	result = createStackTraceElement(t, name, file);
       }
 
     return result;
@@ -251,9 +251,9 @@ public class NameFinder
    */
   public StackTraceElement[] lookup(Throwable t, RawData addrs, int length)
   {
-    StackTraceElement[] elements = new StackTraceElement[length];
+    StackTraceElement[] elements = (StackTraceElement[]) __jRateAllocArray(t, StackTraceElement.class, length);
     for (int i=0; i < length; i++)
-      elements[i] = lookup(addrs, i);
+      elements[i] = lookup0(t, addrs, i);
 
     if (demangle && sanitize)
       return sanitizeStack(elements, t);
@@ -333,7 +333,7 @@ public class NameFinder
     if ((begin > 0 || end < length-1 || unknown > 0 || interpreter > 0)
 	&& nr_elements > 0)
       {
-	stack = new StackTraceElement[nr_elements];
+	stack = (StackTraceElement[]) __jRateAllocArray(t, StackTraceElement.class, nr_elements);
 	int pos =0;
 	for (int i=begin; i<=end; i++)
 	  {
@@ -368,10 +368,15 @@ public class NameFinder
    * a line number. The name should never be null, but the file may be if it
    * is unknown.
    */
-  private StackTraceElement createStackTraceElement(String name, String file)
+  private StackTraceElement createStackTraceElement(Throwable t, String name, String file)
   {
+    final Class[] ctorTypes = new Class[] { String.class, Integer.TYPE, String.class,
+                                            String.class, Boolean.TYPE };
+
     if (!demangle)
-      return new StackTraceElement(file, -1, null, name, false);
+      return (StackTraceElement)
+                 __jRateAlloc(t, StackTraceElement.class, ctorTypes,
+                              new Object[] { file, new Integer(-1), null, name, Boolean.FALSE });
 
     String s = demangleName(name);
     String methodName = s;
@@ -417,7 +422,9 @@ public class NameFinder
 	  }
       }
 
-    return new StackTraceElement(fileName, line, className, methodName, false);
+    return (StackTraceElement)
+               __jRateAlloc(t, StackTraceElement.class, ctorTypes,
+                            new Object[] { fileName, new Integer(line), className, methodName, Boolean.FALSE });
   }
 
   /**
diff -Nurp ../gcc/libjava/gnu/gcj/runtime/StringBuffer.java ./libjava/gnu/gcj/runtime/StringBuffer.java
--- ../gcc/libjava/gnu/gcj/runtime/StringBuffer.java	Tue Jan 22 16:39:48 2002
+++ ./libjava/gnu/gcj/runtime/StringBuffer.java	Fri Aug  5 22:03:41 2005
@@ -142,7 +142,7 @@ public final class StringBuffer
     if (minimumCapacity > value.length)
       {
 	minimumCapacity = Math.max (minimumCapacity, value.length * 2 + 2);
-	char[] nb = new char[minimumCapacity];
+	char[] nb = (char[]) __jRateAllocArray(this, Character.TYPE, minimumCapacity);
 	System.arraycopy(value, 0, nb, 0, count);
 	value = nb;
       }
diff -Nurp ../gcc/libjava/gnu/gcj/runtime/natNameFinder.cc ./libjava/gnu/gcj/runtime/natNameFinder.cc
--- ../gcc/libjava/gnu/gcj/runtime/natNameFinder.cc	Mon Mar 10 13:34:30 2003
+++ ./libjava/gnu/gcj/runtime/natNameFinder.cc	Fri Aug  5 22:03:41 2005
@@ -90,7 +90,7 @@ gnu::gcj::runtime::NameFinder::getAddrAs
 }
 
 java::lang::StackTraceElement*
-gnu::gcj::runtime::NameFinder::dladdrLookup(RawData* addrs, jint n)
+gnu::gcj::runtime::NameFinder::dladdrLookup(java::lang::Throwable* t, RawData* addrs, jint n)
 {
 #if defined (HAVE_DLFCN_H) && defined (HAVE_DLADDR)
   extern char **_Jv_argv;
@@ -111,7 +111,8 @@ gnu::gcj::runtime::NameFinder::dladdrLoo
      if (dl_info.dli_fname != NULL
          && dl_info.dli_sname != NULL
          && (_Jv_argv == NULL || strcmp (file_name, _Jv_argv[0]) != 0))
-       return createStackTraceElement (JvNewStringLatin1 (name),
+       return createStackTraceElement (t,
+				       JvNewStringLatin1 (name),
 				       JvNewStringLatin1 (file_name));
     }
 #endif
@@ -119,28 +120,7 @@ gnu::gcj::runtime::NameFinder::dladdrLoo
 }
 
 java::lang::StackTraceElement *
-gnu::gcj::runtime::NameFinder::lookupInterp(RawData* addrs, jint n)
+gnu::gcj::runtime::NameFinder::lookupInterp(java::lang::Throwable*, RawData*, jint)
 {
-#ifdef INTERPRETER
-  _Jv_frame_info *stack = (_Jv_frame_info *) addrs;
-  if (stack[n].interp == NULL)
-    return NULL;
-
-  _Jv_InterpMethod *meth
-    = reinterpret_cast<_Jv_InterpMethod *> (stack[n].interp);
-  java::lang::StringBuffer *sb = new java::lang::StringBuffer();
-  sb->append(_Jv_NewStringUtf8Const(meth->self->name));
-  sb->append(_Jv_NewStringUtf8Const(meth->self->signature));
-  // FIXME: source file name and line number can be found from
-  // bytecode debug information.  But currently we don't keep that
-  // around.
-  // FIXME: is using the defining class correct here?
-  java::lang::String *className = meth->defining_class->getName();
-  java::lang::String *methodName
-	  = demangleInterpreterMethod(sb->toString(), className);
-  return new java::lang::StackTraceElement(NULL, -1,
-					   className, methodName, false);
-#else // INTERPRETER
   return NULL;
-#endif // INTERPRETER
 }
diff -Nurp ../gcc/libjava/gnu/gcj/runtime/natStackTrace.cc ./libjava/gnu/gcj/runtime/natStackTrace.cc
--- ../gcc/libjava/gnu/gcj/runtime/natStackTrace.cc	Wed Feb 19 10:27:22 2003
+++ ./libjava/gnu/gcj/runtime/natStackTrace.cc	Fri Aug  5 22:03:41 2005
@@ -189,7 +189,7 @@ gnu::gcj::runtime::StackTrace::update(vo
 	      gnu::gcj::runtime::MethodRef *ref
 		= new gnu::gcj::runtime::MethodRef 
 		((gnu::gcj::RawData *)meth, klass);
-	      map->put ((java::lang::Object*)(meth->ncode), ref);
+              map->put_ ((java::lang::Object*)(meth->ncode), ref);
 	    }
 	}
     }
diff -Nurp ../gcc/libjava/gnu/java/nio/natFileChannelImpl.cc ./libjava/gnu/java/nio/natFileChannelImpl.cc
--- ../gcc/libjava/gnu/java/nio/natFileChannelImpl.cc	Thu Feb 13 10:50:39 2003
+++ ./libjava/gnu/java/nio/natFileChannelImpl.cc	Fri Aug  5 22:03:52 2005
@@ -29,7 +29,7 @@ details.  */
 #include <java/nio/channels/FileChannel.h>
 
 jlong
-gnu::java::nio::FileChannelImpl::lengthInternal (jint fd)
+gnu::java::nio::FileChannelImpl::lengthInternal (jint)
 {
   throw new ::java::io::IOException (JvNewStringUTF ("lengthInternal not implemented"));
 }
diff -Nurp ../gcc/libjava/gnu/java/nio/natSocketChannelImpl.cc ./libjava/gnu/java/nio/natSocketChannelImpl.cc
--- ../gcc/libjava/gnu/java/nio/natSocketChannelImpl.cc	Tue Apr 29 08:58:52 2003
+++ ./libjava/gnu/java/nio/natSocketChannelImpl.cc	Fri Aug  5 22:03:52 2005
@@ -90,7 +90,7 @@ gnu::java::nio::SocketChannelImpl::Socke
 }
 
 jint
-gnu::java::nio::SocketChannelImpl::SocketConnect (jint fd,
+gnu::java::nio::SocketChannelImpl::SocketConnect (jint,
                                                   ::java::net::InetAddress *addr,
                                                   jint port)
 {
@@ -98,7 +98,7 @@ gnu::java::nio::SocketChannelImpl::Socke
 }
 
 jint
-gnu::java::nio::SocketChannelImpl::SocketBind (jint fd,
+gnu::java::nio::SocketChannelImpl::SocketBind (jint,
                                                ::java::net::InetAddress *addr,
                                                jint port)
 {
diff -Nurp ../gcc/libjava/include/boehm-gc.h ./libjava/include/boehm-gc.h
--- ../gcc/libjava/include/boehm-gc.h	Thu Oct 25 12:29:41 2001
+++ ./libjava/include/boehm-gc.h	Fri Aug  5 22:03:52 2005
@@ -26,6 +26,9 @@ extern "C"
 #include <java/lang/Class.h>
 #include <string.h>
 
+// -- jRate Includes --
+#include <memory-areas.h>
+
 extern "C" void * GC_gcj_malloc(size_t, void *);
 extern "C" void * GC_malloc_atomic(size_t);
 #ifdef THREAD_LOCAL_ALLOC
@@ -46,7 +49,7 @@ _Jv_AllocObj (jsize size, jclass klass)
 }
 
 inline void *
-_Jv_AllocPtrFreeObj (jsize size, jclass klass)
+_Jv_HeapAllocPtrFreeObj (jsize size, jclass klass)
 {
 #ifdef JV_HASH_SYNCHRONIZATION
 # ifdef THREAD_LOCAL_ALLOC
@@ -65,6 +68,52 @@ _Jv_AllocPtrFreeObj (jsize size, jclass 
   return obj;
 }
 
+inline void *
+_Jv_HeapAllocPtrFreeZeroedObj (jsize size, jclass klass)
+{
+#ifdef JV_HASH_SYNCHRONIZATION
+# ifdef THREAD_LOCAL_ALLOC
+    void * obj = GC_local_malloc_atomic(size);
+# else
+    void * obj = GC_malloc_atomic(size);
+# endif
+  memset((char *)obj, 0, size);
+  *((_Jv_VTable **) obj) = klass->vtable;
+#else
+# ifdef THREAD_LOCAL_ALLOC
+    void * obj = GC_local_gcj_malloc(size, klass->vtable);
+# else
+    void * obj = GC_gcj_malloc(size, klass->vtable);
+# endif
+#endif
+  return obj;
+}
+
+inline void *
+_Jv_AllocPtrFreeObj (jsize size, jclass klass)
+{
+  void *ptr;
+  javax::realtime::MemoryArea *ma = _Jv_GetCurrentMemoryArea();
+  if (__builtin_expect(ma != 0, true))
+    ptr = ma->allocatePtrFreeObject(klass, size);
+  else
+    ptr = _Jv_HeapAllocPtrFreeObj(size, klass);
+  
+  return ptr;
+}
+
+inline void *
+_Jv_AllocPtrFreeZeroedObj (jsize size, jclass klass)
+{
+  void *ptr;
+  javax::realtime::MemoryArea *ma = _Jv_GetCurrentMemoryArea();
+  if (__builtin_expect(ma != 0, true))
+    ptr = ma->allocatePtrFreeZeroedObject(klass, size);
+  else
+    ptr = _Jv_HeapAllocPtrFreeZeroedObj(size, klass);
+  
+  return ptr;
+}
 // _Jv_AllocBytes (jsize size) should go here, too.  But clients don't
 // usually include this header.
 
diff -Nurp ../gcc/libjava/include/config.h.in ./libjava/include/config.h.in
--- ../gcc/libjava/include/config.h.in	Fri Jan 31 12:01:17 2003
+++ ./libjava/include/config.h.in	Fri Aug  5 22:03:52 2005
@@ -1,4 +1,4 @@
-/* include/config.h.in.  Generated automatically from configure.in by autoheader.  */
+/* include/config.h.in.  Generated automatically from configure.in by autoheader 2.13.  */
 
 /* Define if using alloca.c.  */
 #undef C_ALLOCA
@@ -102,6 +102,9 @@
 /* Define if Boehm GC in use.  */
 #undef HAVE_BOEHM_GC
 
+/* Define if jRate GC in use.  */
+#undef HAVE_JRATE_GC
+
 /* Define if gethostname is declared in <unistd.h>.  */
 #undef HAVE_GETHOSTNAME_DECL
 
diff -Nurp ../gcc/libjava/include/jvm.h ./libjava/include/jvm.h
--- ../gcc/libjava/include/jvm.h	Fri Apr 25 11:02:22 2003
+++ ./libjava/include/jvm.h	Fri Aug  5 22:03:52 2005
@@ -306,6 +306,18 @@ extern "C" jobject _Jv_NewArray (jint ty
 extern "C" jobject _Jv_NewMultiArray (jclass klass, jint dims, ...)
   __attribute__((__malloc__));
 extern "C" void *_Jv_CheckCast (jclass klass, jobject obj);
+
+/* jRate Additions */
+extern "C" void _Jv_PhantomFieldWriteBarrier (jobject from, jobject to);
+extern "C" void _Jv_FieldWriteBarrier       (jobject from, jobject to);
+extern "C" void _Jv_StaticFieldWriteBarrier (jobject from, jobject to);
+extern "C" void _Jv_LocalVarWriteBarrier    (jobject from, jobject to);
+extern "C" void _Jv_OnMethodEnter ();
+extern "C" void _Jv_OnMethodExit ();
+extern "C" void _Jv_OnSynchronizedMethodEnter (jobject obj);
+extern "C" void _Jv_OnSynchronizedMethodExit (jobject obj);
+extern "C" jobject _Jv_IncrementReferenceCount (jobject obj);
+    
 extern "C" void *_Jv_LookupInterfaceMethod (jclass klass, Utf8Const *name,
                                            Utf8Const *signature);
 extern "C" void *_Jv_LookupInterfaceMethodIdx (jclass klass, jclass iface, 
@@ -398,4 +410,22 @@ extern void (*_Jv_JVMPI_Notify_THREAD_ST
 extern void (*_Jv_JVMPI_Notify_THREAD_END) (JVMPI_Event *event);
 #endif
 
+ 
+// -- jRate Allocators --
+
+/* Allocate space for a new Java object.  */
+void *_Jv_HeapAllocObj (jsize size, jclass cl);
+/* Allocate space for a potentially uninitialized pointer-free object.
+   Interesting only with JV_HASH_SYNCHRONIZATION.  */
+void *_Jv_HeapAllocPtrFreeObj (jsize size, jclass cl);
+/* Allocate space for an array of Java objects.  */
+void *_Jv_HeapAllocArray (jsize size, jclass cl);
+/* Allocate space that is known to be pointer-free.  */
+void *_Jv_HeapAllocBytes (jsize size);
+/* Allocate space for a new non-Java object, which does not have the usual 
+   Java object header but may contain pointers to other GC'ed objects.  */
+void *_Jv_HeapAllocRawObj (jsize size);
+
+//*---------------------------------------------------------------------------*
+
 #endif /* __JAVA_JVM_H__ */
diff -Nurp ../gcc/libjava/include/posix-threads.h ./libjava/include/posix-threads.h
--- ../gcc/libjava/include/posix-threads.h	Wed Mar 27 13:25:04 2002
+++ ./libjava/include/posix-threads.h	Fri Aug  5 22:03:52 2005
@@ -20,6 +20,8 @@ details.  */
 #include <pthread.h>
 #include <sched.h>
 
+extern int JRATE_SCHED_TYPE;
+
 //
 // Typedefs.
 //
@@ -110,78 +112,11 @@ _Jv_CondInit (_Jv_ConditionVariable_t *c
 # include <stdio.h>
 #endif
 
-inline void
-_Jv_MutexInit (_Jv_Mutex_t *mu)
-{
-# ifdef LOCK_DEBUG /* Assumes Linuxthreads */
-  pthread_mutexattr_t attr;
-  pthread_mutexattr_init(&attr);
-  pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_ERRORCHECK);
-  pthread_mutex_init (&mu->mutex, &attr);
-# else
-  pthread_mutex_init (&mu->mutex, 0);
-# endif
-
-  mu->count = 0;
-  mu->owner = 0;
-}
-
-inline int
-_Jv_MutexLock (_Jv_Mutex_t *mu)
-{
-  pthread_t self = pthread_self ();
-  if (mu->owner == self)
-    {
-      mu->count++;
-    }
-  else
-    {
-#     ifdef LOCK_DEBUG
-	int result = pthread_mutex_lock (&mu->mutex);
-	if (0 != result)
-	  {
-	    fprintf(stderr, "Pthread_mutex_lock returned %d\n", result);
-	    for (;;) {}
-	  }
-#     else
-        pthread_mutex_lock (&mu->mutex);
-#     endif
-      mu->count = 1;
-      mu->owner = self;
-    }
-  return 0;
-}
-
-inline int
-_Jv_MutexUnlock (_Jv_Mutex_t *mu)
-{
-  if (_Jv_PthreadCheckMonitor (mu))
-    {
-#     ifdef LOCK_DEBUG
-	fprintf(stderr, "_Jv_MutexUnlock: Not owner\n");
-	for (;;) {}
-#     endif
-      return 1;
-    }
+void _Jv_MutexInit (_Jv_Mutex_t *mu);
     
-  mu->count--;
+int _Jv_MutexLock (_Jv_Mutex_t *mu);
 
-  if (mu->count == 0)
-    {
-      mu->owner = 0;
-#     ifdef LOCK_DEBUG
-	int result = pthread_mutex_unlock (&mu->mutex);
-	if (0 != result)
-	  {
-	    fprintf(stderr, "Pthread_mutex_unlock returned %d\n", result);
-	    for (;;) {}
-	  }
-#     else
-        pthread_mutex_unlock (&mu->mutex);
-#     endif
-    }
-  return 0;
-}
+int _Jv_MutexUnlock (_Jv_Mutex_t *mu);
 
 #ifndef LINUX_THREADS
 
@@ -374,8 +309,30 @@ void _Jv_ThreadSetPriority (_Jv_Thread_t
 void _Jv_ThreadStart (java::lang::Thread *thread, _Jv_Thread_t *data,
 		      _Jv_ThreadStartFunc *meth);
 
+void _Jv_RealtimeThreadStart (javax::realtime::RealtimeThread *thread,
+                              _Jv_Thread_t *data,
+                              _Jv_ThreadStartFunc *meth);
+
 void _Jv_ThreadWait (void);
 
 void _Jv_ThreadInterrupt (_Jv_Thread_t *data);
 
+
+/**
+ * Guarded synchronization. This is the suggested way of synchornizing
+ * in methods that even if are performace critical might raise an
+ * exception.
+ */
+class _Jv_SynchGuard {
+public:
+    _Jv_SynchGuard(_Jv_Mutex_t* mutex) : mutex_(mutex)
+        { _Jv_MutexLock(mutex_); }
+    
+    ~_Jv_SynchGuard() { _Jv_MutexUnlock(mutex_); }
+
+private:
+    _Jv_Mutex_t* mutex_;
+};
+
+
 #endif /* __JV_POSIX_THREADS__ */
diff -Nurp ../gcc/libjava/java/lang/Class.h ./libjava/java/lang/Class.h
--- ../gcc/libjava/java/lang/Class.h	Mon Jan 20 00:49:28 2003
+++ ./libjava/java/lang/Class.h	Fri Aug  5 22:03:52 2005
@@ -257,13 +257,7 @@ private:   
   friend void *_Jv_LookupInterfaceMethodIdx (jclass klass, jclass iface, 
 					     int method_idx);
 
-  inline friend void 
-  _Jv_InitClass (jclass klass)
-  {
-    if (__builtin_expect (klass->state == JV_STATE_DONE, true))
-      return;
-    klass->initializeClass ();  
-  }
+    friend void _Jv_InitClass (jclass klass);
 
   friend _Jv_Method* _Jv_LookupDeclaredMethod (jclass, _Jv_Utf8Const *, 
 					       _Jv_Utf8Const*);
@@ -275,8 +269,25 @@ private:   
   friend jobject _Jv_AllocObject (jclass, jint);
   friend void *_Jv_AllocObj (jint, jclass);
   friend void *_Jv_AllocPtrFreeObj (jint, jclass);
+  friend void *_Jv_AllocPtrFreeZeroedObj (jint, jclass);
   friend void *_Jv_AllocArray (jint, jclass);
 
+  // -- jRate Friends --
+  template <typename MemoryArea> friend class ::jrate::binding::java::ObjectInitializer;
+   
+  friend class javax::realtime::CTMemory;      
+  friend class javax::realtime::LTMemory;      
+  friend class javax::realtime::VTMemory;      
+  friend class javax::realtime::HeapMemory;    
+  friend class javax::realtime::ImmortalMemory;
+  friend class javax::realtime::MemoryArea;
+
+  friend jobject _Jv_HeapAllocObject (jclass klass, jint size);
+  friend void *_Jv_HeapAllocObj (jint, jclass);
+  friend void *_Jv_HeapAllocPtrFreeObj (jint, jclass);
+  friend void *_Jv_HeapAllocPtrFreeZeroedObj (jint, jclass);
+  friend void *_Jv_HeapAllocArray (jint, jclass);
+
   friend jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv *, jclass, jfieldID,
 					   jboolean);
   friend jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID,
diff -Nurp ../gcc/libjava/java/lang/InheritableThreadLocal.java ./libjava/java/lang/InheritableThreadLocal.java
--- ../gcc/libjava/java/lang/InheritableThreadLocal.java	Sat Jun 15 14:45:31 2002
+++ ./libjava/java/lang/InheritableThreadLocal.java	Fri Aug  5 22:03:52 2005
@@ -53,8 +53,11 @@ import java.util.WeakHashMap;
  * is in transferring items like User ID or Transaction ID across threads
  * automatically.
  *
+ * <p>This implementation has been tweaked for jRate.
+ *
  * @author Mark Wielaard <mark@klomp.org>
  * @author Eric Blake <ebb9@email.byu.edu>
+ * @author Morgan Deters <mdeters@cs.wustl.edu>
  * @see ThreadLocal
  * @since 1.2
  * @status updated to 1.4
@@ -67,7 +70,7 @@ public class InheritableThreadLocal exte
    * List can be collected, too. Maps to a list in case the user overrides
    * equals.
    */
-  private static final WeakHashMap threadMap = new WeakHashMap();
+  private static final LocalMap threadMap = new LocalMap();
 
   /**
    * Creates a new InheritableThreadLocal that has no values associated
@@ -104,7 +107,7 @@ public class InheritableThreadLocal exte
   /**
    * Generates the childValues of all <code>InheritableThreadLocal</code>s
    * that are in the heritage of the current Thread for the newly created
-   * childThread. Should be called from the contructor Thread.
+   * childThread. Should be called from the constructor Thread.
    *
    * @param childThread the newly created thread, to inherit from this thread
    * @see Thread#Thread(ThreadGroup, Runnable, String)
diff -Nurp ../gcc/libjava/java/lang/Object.h ./libjava/java/lang/Object.h
--- ../gcc/libjava/java/lang/Object.h	Fri Dec 14 12:43:53 2001
+++ ./libjava/java/lang/Object.h	Fri Aug  5 22:03:52 2005
@@ -15,6 +15,16 @@ details.  */
 
 #include <gcj/javaprims.h>
 
+extern "C" void _Jv_PhantomFieldWriteBarrier (jobject from, jobject to);
+extern "C" void _Jv_FieldWriteBarrier       (jobject from, jobject to);
+extern "C" void _Jv_StaticFieldWriteBarrier (jobject from, jobject to);
+extern "C" void _Jv_LocalVarWriteBarrier    (jobject from, jobject to);
+extern "C" void _Jv_OnMethodEnter ();
+extern "C" void _Jv_OnMethodExit  ();
+extern "C" void _Jv_OnSynchronizedMethodEnter (jobject obj);
+extern "C" void _Jv_OnSynchronizedMethodExit (jobject obj);
+extern "C" jobject _Jv_IncrementReferenceCount (jobject obj);
+
 // This class is mainly here as a kludge to get G++ to allocate two
 // extra entries in each vtable.
 struct _JvObjectPrefix
@@ -28,6 +38,10 @@ protected:
 # endif
 };
 
+extern "Java" {
+  template <class T> class JArray;
+}
+
 class java::lang::Object : public _JvObjectPrefix
 {
 protected:
@@ -50,6 +64,24 @@ public:
   friend void _Jv_InitializeSyncMutex (void);
   friend void _Jv_FinalizeObject (jobject obj);
 
+  friend void _Jv_PhantomFieldWriteBarrier (jobject from, jobject to);
+  friend void _Jv_FieldWriteBarrier       (jobject from, jobject to);
+  friend void _Jv_StaticFieldWriteBarrier (jobject from, jobject to);
+  friend void _Jv_LocalVarWriteBarrier    (jobject from, jobject to);
+  friend void _Jv_OnMethodEnter ();
+  friend void _Jv_OnMethodExit  ();
+  friend void _Jv_OnSynchronizedMethodEnter (jobject obj);
+  friend void _Jv_OnSynchronizedMethodExit (jobject obj);
+  friend jobject _Jv_IncrementReferenceCount (jobject obj);
+    
+ template <typename MemoryArea> friend class ::jrate::binding::java::ObjectInitializer;
+  friend class javax::realtime::MemoryArea;
+  friend class javax::realtime::CTMemory;
+  friend class javax::realtime::LTMemory;
+  friend class javax::realtime::VTMemory;
+  friend class javax::realtime::HeapMemory;
+  friend class javax::realtime::ImmortalMemory;
+
 #ifdef JV_MARKOBJ_DECL
   friend JV_MARKOBJ_DECL;
 #endif
@@ -58,19 +90,48 @@ public:
 #endif
 
   static java::lang::Class class$;
+public:
+    static ::java::lang::Object* __jRateAlloc(::java::lang::Object* o, ::java::lang::Class* c);
+    static ::java::lang::Object* __jRateAlloc(::java::lang::Object* o, ::java::lang::Class* c, JArray< ::java::lang::Class*>* types, JArray< ::java::lang::Object*>* args);
+    static ::java::lang::Object* __jRateAllocArray(::java::lang::Object* o, ::java::lang::Class* c, jint n);
+    static ::java::lang::Object* __jRateRealloc(::java::lang::Object* from, ::java::lang::Object* to);
+
+    ::java::lang::Object* __incRefCount();
+    static ::java::lang::Object* __incRefCount(::java::lang::Object* obj);
+    static void __decRefCount(::java::lang::Object* obj);
+
+    static jboolean __returnValue(jboolean v);
+    static jchar __returnValue(jchar ch);
+    static jbyte __returnValue(jbyte ch);
+    static jshort __returnValue(jshort i);
+    static jint __returnValue(jint i);
+    static jlong __returnValue(jlong l);
+    static jfloat __returnValue(jfloat f);
+    static jdouble __returnValue(jdouble d); 
+    static ::java::lang::Object* __returnValue(::java::lang::Object* o);
+
+    static jboolean __passValue(jboolean v);
+    static jbyte __passValue(jbyte b);
+    static jshort __passValue(jshort i);
+    static jchar __passValue(jchar ch);
+    static jint __passValue(jint i);
+    static jlong __passValue(jlong l);
+    static jfloat __passValue(jfloat f);
+    static jdouble __passValue(jdouble d);
+    static ::java::lang::Object* __passValue(::java::lang::Object* o);
 
 protected:
   virtual jobject clone (void);
 
 private:
+  jobject memory_area;
+    
   // This does not actually refer to a Java object.  Instead it is a
   // placeholder for a piece of internal data (the synchronization
   // information).
-# ifndef JV_HASH_SYNCHRONIZATION
     jobject sync_info;
-# endif
 
-    // Initialize the sync_info field.  Not called with JV_HASH_SYNCHRONIZATION.
+public: // Actually package
     void sync_init (void);
 };
 
diff -Nurp ../gcc/libjava/java/lang/Object.java ./libjava/java/lang/Object.java
--- ../gcc/libjava/java/lang/Object.java	Tue Mar  7 13:55:26 2000
+++ ./libjava/java/lang/Object.java	Fri Aug  5 22:03:52 2005
@@ -47,7 +47,8 @@ public class Object
 
   public String toString ()
   {
-    return getClass().getName() + '@' + Integer.toHexString(hashCode());
+      String str = getClass().getName() + '@' + Integer.toHexString(hashCode());
+      return str;
   }
 
   public final void wait () throws InterruptedException
@@ -60,11 +61,41 @@ public class Object
     wait (timeout, 0);
   }
 
+    final native Object __incRefCount();
+
+    final native static Object __incRefCount(Object obj);
+    final native static void __decRefCount(Object obj);
+
+    final native static boolean __returnValue(boolean b);
+    final native static char __returnValue(char ch);
+    final native static byte __returnValue(byte ch);
+    final native static int __returnValue(int i);
+    final native static short __returnValue(short i);
+    final native static long __returnValue(long l);
+    final native static float __returnValue(float f);
+    final native static double __returnValue(double d); 
+    final native static Object __returnValue(Object o);
+
+    final native static boolean __passValue(boolean b);
+    final native static byte __passValue(byte b);
+    final native static char __passValue(char ch);
+    final native static short __passValue(short i);
+    final native static int __passValue(int i);
+    final native static long __passValue(long l);
+    final native static float __passValue(float f);
+    final native static double __passValue(float d);
+    final native static Object __passValue(Object o);
+    
+    public final native static Object __jRateAlloc(Object o, Class c);
+    public final native static Object __jRateAlloc(Object o, Class c, Class[] types, Object[] args);
+    public final native static Object __jRateAllocArray(Object o, Class c, int n);
+    public final native static Object __jRateRealloc(Object from, Object to);
+
   protected native Object clone () throws CloneNotSupportedException;
 
   // This initializes the sync_info member.  It is here for
   // completeness (some day we'll be able to auto-generate Object.h).
-  private final native void sync_init ();
+  final native void sync_init ();
 
   // Note that we don't mention the sync_info field here.  If we do,
   // jc1 will not work correctly.
diff -Nurp ../gcc/libjava/java/lang/Runtime.java ./libjava/java/lang/Runtime.java
--- ../gcc/libjava/java/lang/Runtime.java	Tue Aug 13 20:07:59 2002
+++ ./libjava/java/lang/Runtime.java	Fri Aug  5 22:03:52 2005
@@ -196,7 +196,7 @@ public class Runtime
         if (exitSequence == null)
           {
             first = true;
-            exitSequence = Thread.currentThread();
+            natSetExit(); // get around scope check
             if (shutdownHooks != null)
               {
                 Iterator i = shutdownHooks.iterator();
@@ -279,6 +279,8 @@ public class Runtime
         }
   }
 
+  private native final void natSetExit();
+
   /**
    * Register a new shutdown hook. This is invoked when the program exits
    * normally (because all non-daemon threads ended, or because
diff -Nurp ../gcc/libjava/java/lang/SecurityManager.java ./libjava/java/lang/SecurityManager.java
--- ../gcc/libjava/java/lang/SecurityManager.java	Sun Dec  1 10:16:19 2002
+++ ./libjava/java/lang/SecurityManager.java	Fri Aug  5 22:03:52 2005
@@ -38,7 +38,7 @@ exception statement from your version. *
 
 package java.lang;
 
-import java.awt.AWTPermission;
+// import java.awt.AWTPermission;
 import java.io.File;
 import java.io.FileDescriptor;
 import java.io.FilePermission;
@@ -798,18 +798,8 @@ public class SecurityManager
    */
   public boolean checkTopLevelWindow(Object window)
   {
-    if (window == null)
-      throw new NullPointerException();
-    try
-      {
-        checkPermission(new AWTPermission("showWindowWithoutWarningBanner"));
-        return true;
-      }
-    catch (SecurityException e)
-      {
         return false;
       }
-  }
 
   /**
    * Check if the current thread is allowed to create a print job. This
@@ -840,7 +830,7 @@ public class SecurityManager
    */
   public void checkSystemClipboardAccess()
   {
-    checkPermission(new AWTPermission("accessClipboard"));
+        return;
   }
 
   /**
diff -Nurp ../gcc/libjava/java/lang/StackTraceElement.java ./libjava/java/lang/StackTraceElement.java
--- ../gcc/libjava/java/lang/StackTraceElement.java	Fri Jul 12 07:52:44 2002
+++ ./libjava/java/lang/StackTraceElement.java	Fri Aug  5 22:03:52 2005
@@ -104,10 +104,10 @@ public class StackTraceElement implement
   StackTraceElement(String fileName, int lineNumber, String className,
                     String methodName, boolean isNative)
   {
-    this.fileName = fileName;
+    this.fileName = (String) __jRateRealloc(this, fileName);
     this.lineNumber = lineNumber;
-    this.className = className;
-    this.methodName = methodName;
+    this.className = (String) __jRateRealloc(this, className);
+    this.methodName = (String) __jRateRealloc(this, methodName);
     this.isNative = isNative;
   }
 
diff -Nurp ../gcc/libjava/java/lang/String.java ./libjava/java/lang/String.java
--- ../gcc/libjava/java/lang/String.java	Thu Jun 13 13:16:26 2002
+++ ./libjava/java/lang/String.java	Fri Aug  5 22:03:52 2005
@@ -78,7 +78,17 @@ public final class String implements Ser
 
   public String (String value)
   {
-    data = value.data;
+    if (value == value.data)
+      {
+        // TODO: optimize so that not copied if in compatible memory area
+        char[] data = value.toCharArray();
+        init(data, 0, data.length, false);
+        return;
+      }
+    else
+      {
+        data = __jRateRealloc(this, value.data);
+      }
     boffset = value.boffset;
     count = value.count;
   }
diff -Nurp ../gcc/libjava/java/lang/StringBuffer.java ./libjava/java/lang/StringBuffer.java
--- ../gcc/libjava/java/lang/StringBuffer.java	Mon Dec 30 01:17:20 2002
+++ ./libjava/java/lang/StringBuffer.java	Fri Aug  5 22:03:52 2005
@@ -176,6 +176,15 @@ public final class StringBuffer implemen
     return this;
   }
 
+  /** Append the <code>StringBuffer</code> to this <code>StringBuffer</code>.
+   *  @param sb the <code>StringBuffer</code> to append.
+   *  @return this <code>StringBuffer</code>.
+   */
+  public StringBuffer append (StringBuffer sb)
+  {
+    return append(sb == null ? "null" : sb.toString());
+  }
+
   /** Append the <code>char</code> array to this <code>StringBuffer</code>.
    *  @param data the <code>char[]</code> to append.
    *  @return this <code>StringBuffer</code>.
@@ -281,7 +290,7 @@ public final class StringBuffer implemen
 		   ? value.length*2+2
 		   : value.length);
 	minimumCapacity = (minimumCapacity < max ? max : minimumCapacity);
-	char[] nb = new char[minimumCapacity];
+	char[] nb = (char[]) __jRateAllocArray(this, Character.TYPE, minimumCapacity);
 	System.arraycopy(value, 0, nb, 0, count);
 	value = nb;
 	shared = false;
@@ -301,7 +310,7 @@ public final class StringBuffer implemen
 		   ? value.length*2+2
 		   : value.length);
 	minimumCapacity = (minimumCapacity < max ? max : minimumCapacity);
-	char[] nb = new char[minimumCapacity];
+	char[] nb = (char[]) __jRateAllocArray(this, Character.TYPE, minimumCapacity);
 	System.arraycopy(value, 0, nb, 0, count);
 	value = nb;
 	shared = false;
diff -Nurp ../gcc/libjava/java/lang/Thread.java ./libjava/java/lang/Thread.java
--- ../gcc/libjava/java/lang/Thread.java	Mon Oct  7 16:02:38 2002
+++ ./libjava/java/lang/Thread.java	Fri Aug  5 22:03:52 2005
@@ -113,6 +113,8 @@ public class Thread implements Runnable
 
   private final native void finish_ ();
 
+  protected void rtfini_() {}    
+
   // Check the thread's interrupted status. If clear_flag is true, the 
   // thread's interrupted status is also cleared.
   private boolean isInterrupted (boolean clear_flag)
@@ -302,20 +304,20 @@ public class Thread implements Runnable
 
   public static native void yield ();
 
-  // Private data.
+  // Protected data.
   ThreadGroup group;
   String name;
-  private Runnable runnable;
-  private int priority;
-  private boolean daemon_flag;
+  protected Runnable runnable;
+  protected int priority;
+  protected boolean daemon_flag;
   boolean interrupt_flag;
-  private boolean alive_flag;
-  private boolean startable_flag;
-  private ClassLoader context_class_loader;
+  protected boolean alive_flag;
+  protected boolean startable_flag;
+  protected ClassLoader context_class_loader;
 
   // This describes the top-most interpreter frame for this thread.
   RawData interp_frame;
 
   // Our native data - points to an instance of struct natThread.
-  private Object data;
+  protected Object data;
 }
diff -Nurp ../gcc/libjava/java/lang/ThreadGroup.java ./libjava/java/lang/ThreadGroup.java
--- ../gcc/libjava/java/lang/ThreadGroup.java	Tue Jun 18 10:39:39 2002
+++ ./libjava/java/lang/ThreadGroup.java	Fri Aug  5 22:03:52 2005
@@ -704,7 +704,7 @@ public class ThreadGroup
   {
     if (groups == null)
       throw new IllegalThreadStateException("ThreadGroup is destroyed");
-    threads.add(t);
+    threads.add_(t);
   }
 
   /**
diff -Nurp ../gcc/libjava/java/lang/ThreadLocal.java ./libjava/java/lang/ThreadLocal.java
--- ../gcc/libjava/java/lang/ThreadLocal.java	Sat Jun 15 14:45:31 2002
+++ ./libjava/java/lang/ThreadLocal.java	Fri Aug  5 22:03:52 2005
@@ -37,9 +37,6 @@ exception statement from your version. *
 
 package java.lang;
 
-import java.util.Map;
-import java.util.WeakHashMap;
-
 /**
  * ThreadLocal objects have a different state associated with every
  * Thread that accesses them. Every access to the ThreadLocal object
@@ -76,8 +73,11 @@ import java.util.WeakHashMap;
  * <p>When a Thread is garbage collected all references to values of
  * the ThreadLocal objects associated with that Thread are removed.
  *
+ * <p>This implementation has been tweaked for jRate.
+ *
  * @author Mark Wielaard <mark@klomp.org>
  * @author Eric Blake <ebb9@email.byu.edu>
+ * @author Morgan Deters <mdeters@cs.wustl.edu>
  * @since 1.2
  * @status updated to 1.4
  */
@@ -101,7 +101,7 @@ public class ThreadLocal
    * <code>set(Thread, Object)</code> and <code>get(Thread)</code> methods
    * access it. Package visible for use by InheritableThreadLocal.
    */
-  final Map valueMap = new WeakHashMap();
+  final LocalMap valueMap = new LocalMap();
 	
   /**
    * Creates a ThreadLocal object without associating any value to it yet.
@@ -140,7 +140,7 @@ public class ThreadLocal
     if (value == null)
       {
         value = initialValue();
-        valueMap.put(currentThread, value == null ? NULL : value);
+        valueMap.put(Thread.currentThread(), value == null ? NULL : value);
       }
     return value == NULL ? null : value;
   }
@@ -159,4 +159,54 @@ public class ThreadLocal
     // ever modify the returned value.
     valueMap.put(Thread.currentThread(), value == null ? NULL : value);
   }
+
+  /**
+   * Map-like class to map Threads to (arbitrary) Objects without
+   * actually referencing the threads directly (for RTSJ
+   * scope-friendliness).
+   */
+  static class LocalMap {
+    final int HASH_SIZE = 128;
+
+    private int[] keys = new int[HASH_SIZE];
+    private Object[] values = new Object[HASH_SIZE];
+
+    public Object get(Thread thr) {
+      // we assume identityHashCode() doesn't return 0 for any Thread
+      int k = System.identityHashCode(thr);
+
+      int s = k % HASH_SIZE;
+      int n = s;
+
+      do {
+        if(keys[s] == k)
+          return values[s];
+        if(keys[s] == 0)
+          return null;
+      } while((s = (s+1) % HASH_SIZE) != n);
+
+      return null;
+    }
+
+    public void put(Thread thr, Object value) {
+      // we assume identityHashCode() doesn't return 0 for any Thread
+      int k = System.identityHashCode(thr);
+
+      int s = k % HASH_SIZE;
+      int n = s;
+
+      do {
+        if(keys[s] == 0) {
+          keys[s] = k;
+          values[s] = value;
+          return;
+        } else if(keys[s] == k) {
+          values[s] = value;
+          return;
+        }
+      } while((s = (s+1) % HASH_SIZE) != n);
+
+      throw new RuntimeException("ThreadLocal.LocalMap full!");
+    }
+  }
 }
diff -Nurp ../gcc/libjava/java/lang/Throwable.java ./libjava/java/lang/Throwable.java
--- ../gcc/libjava/java/lang/Throwable.java	Fri Oct  4 11:47:36 2002
+++ ./libjava/java/lang/Throwable.java	Fri Aug  5 22:03:52 2005
@@ -510,7 +510,7 @@ public class Throwable implements Serial
   {
     if (stackTrace == null)
       if (vmState == null)
-	stackTrace = new StackTraceElement[0];
+	stackTrace = (StackTraceElement[]) __jRateAllocArray(this, StackTraceElement.class, 0);
       else 
 	{
 	  stackTrace = vmState.getStackTrace(this);
diff -Nurp ../gcc/libjava/java/lang/VMThrowable.java ./libjava/java/lang/VMThrowable.java
--- ../gcc/libjava/java/lang/VMThrowable.java	Tue Dec  3 07:50:04 2002
+++ ./libjava/java/lang/VMThrowable.java	Fri Aug  5 22:03:52 2005
@@ -76,8 +76,11 @@ final class VMThrowable
        rather arbitrary.  It may be better to configure this.  */
     if (trace_enabled)
       {
-	state = new VMThrowable ();
-	state.trace = new gnu.gcj.runtime.StackTrace(128);
+	state = (VMThrowable) __jRateAlloc(t, VMThrowable.class);
+	state.trace = (gnu.gcj.runtime.StackTrace)
+                         __jRateAlloc(t, gnu.gcj.runtime.StackTrace.class,
+                                      new Class[] { Integer.TYPE },
+                                      new Object[] { new Integer(128) });
       }
     return state;
   }
@@ -101,7 +104,7 @@ final class VMThrowable
 	nameFinder.close();
       }
     else
-      result = new StackTraceElement[0];
+      result = (StackTraceElement[]) __jRateAllocArray(t, StackTraceElement.class, 0);
 
     return result;
   }
diff -Nurp ../gcc/libjava/java/lang/natClass.cc ./libjava/java/lang/natClass.cc
--- ../gcc/libjava/java/lang/natClass.cc	Thu May  1 16:52:35 2003
+++ ./libjava/java/lang/natClass.cc	Fri Aug  5 22:03:52 2005
@@ -53,6 +53,15 @@ details.  */
 #include <gnu/gcj/runtime/MethodRef.h>
 #include <gnu/gcj/RawData.h>
 
+// -- jRate Include --
+#include <javax/realtime/MemoryArea.h>
+#include <javax/realtime/IllegalAssignmentError.h>
+#include <jrate/binding/java/Types.h>
+#include <jrate/binding/java/MemoryAreaScope.h>
+#include <jrate/binding/java/IMemoryArea.h>
+#include <jrate/jRate.h>
+#include <jRate-gc.h>
+
 #include <java-cpool.h>
 
 
@@ -66,6 +75,8 @@ java::lang::Class::forName (jstring clas
   if (! className)
     throw new java::lang::NullPointerException;
 
+  jrate::binding::java::MemoryAreaScope_t newScope(jRateGetMethodArea());
+  
   jsize length = _Jv_GetStringUTFLength (className);
   char buffer[length];
   _Jv_GetStringUTFRegion (className, 0, length, buffer);
@@ -75,6 +86,7 @@ java::lang::Class::forName (jstring clas
   if (! _Jv_VerifyClassName (name))
     throw new java::lang::ClassNotFoundException (className);
 
+
   jclass klass = (buffer[0] == '[' 
 		  ? _Jv_FindClassFromSignature (name->data, loader)
 		  : _Jv_FindClass (name, loader));
@@ -82,6 +94,7 @@ java::lang::Class::forName (jstring clas
   if (klass == NULL)
     throw new java::lang::ClassNotFoundException (className);
 
+
   if (initialize)
     _Jv_InitClass (klass);
 
@@ -91,6 +104,8 @@ java::lang::Class::forName (jstring clas
 jclass
 java::lang::Class::forName (jstring className)
 {
+  ::jrate::binding::java::MemoryAreaScope_t newScope(jRateGetMethodArea());
+    
   java::lang::ClassLoader *loader = NULL;
   gnu::gcj::runtime::StackTrace *t 
     = new gnu::gcj::runtime::StackTrace(4);
@@ -106,7 +121,6 @@ java::lang::Class::forName (jstring clas
   catch (::java::lang::ArrayIndexOutOfBoundsException *e)
     {
     }
-
   return forName (className, true, loader);
 }
 
@@ -1069,12 +1083,154 @@ _Jv_CheckCast (jclass c, jobject obj)
   return obj;
 }
 
+/**
+ * Checks that the reference from the "from" object to the "to" object
+ * is legal as the defined in the RTSJ specification.
+ */
+void  
+_Jv_PhantomFieldWriteBarrier (jobject from, jobject to)
+{
+    JRATE_UNUSED_ARG(from);
+    JRATE_UNUSED_ARG(to);
+#if 0
+    printf("[jRate]>> _Jv_PhantomFieldWriteBarrier (%p, %p)\n", from, to);
+#endif
+    return;
+}
+
+
+/**
+ * Checks that the reference from the "from" object to the "to" object
+ * is legal as the defined in the RTSJ specification.
+ */
+void  
+_Jv_FieldWriteBarrier (jobject from, jobject to)
+{    
+    javax::realtime::MemoryArea *fromMA =
+        (from == 0) ? 0 : (javax::realtime::MemoryArea *)from->memory_area;
+
+    javax::realtime::MemoryArea *toMA =
+        (to == 0) ? 0 : (javax::realtime::MemoryArea *)to->memory_area;
+
+    if (fromMA == toMA)
+        return;
+
+    ::jrate::binding::java::IMemoryArea_t* nativeFromMA
+          = SAFE_MEM_AREA(fromMA);
+    ::jrate::binding::java::IMemoryArea_t* nativeToMA
+          = SAFE_MEM_AREA(toMA); 
+    
+    if (to != 0 && toMA != 0) {
+        bool validRef = true;
+        // -- Invoke the method that checks the legality of a reference --
+        validRef =  nativeToMA->checkReferenceFrom(nativeFromMA);
+        
+        if (__builtin_expect(validRef == false, false)) {
+            /* No good options here - if we use a singleton, we don't get a good stack
+             * trace.  If we ->fillInStackTrace(), we leak immortal.  Consider creating
+             * new IllegalAssignmentErrors here if in a scope... */
+            javax::realtime::IllegalAssignmentError *e = jRateIllegalAssignmentError();
+            e->fillInStackTrace();
+            throw e;
+        }
+    }
+    
+    if (nativeFromMA != 0
+        && (nativeFromMA->typeID() & ::jrate::mem::ARENA_MEMORY)) 
+        nativeFromMA->decRefCount();
+    
+    if (nativeToMA != 0
+        && (nativeToMA->typeID() & ::jrate::mem::ARENA_MEMORY))
+        nativeToMA->incRefCount();
+}
+
+void 
+_Jv_StaticFieldWriteBarrier (jobject from, jobject to)
+{
+    JRATE_UNUSED_ARG(from);
+    
+    if (__builtin_expect(to != 0, true)) {
+    
+        javax::realtime::MemoryArea *toMA =
+            (javax::realtime::MemoryArea *)to->memory_area;
+
+        ::jrate::binding::java::IMemoryArea_t* nativeToMA
+          = SAFE_MEM_AREA(toMA);
+                
+        if (toMA == 0) 
+            return;
+        
+        // -- Invoke the method that checks the legality of a reference --
+        bool validRef = nativeToMA->checkReferenceFrom(0);
+        
+        if (__builtin_expect(validRef == false, false)) {
+            /* No good options here - if we use a singleton, we don't get a good stack
+             * trace.  If we ->fillInStackTrace(), we leak immortal.  Consider creating
+             * new IllegalAssignmentErrors here if in a scope... */
+            javax::realtime::IllegalAssignmentError *e = jRateIllegalAssignmentError();
+            e->fillInStackTrace();
+            throw e;
+        }
+
+        if (nativeToMA != 0 && (nativeToMA->typeID() & ::jrate::mem::ARENA_MEMORY))
+            nativeToMA->incRefCount();
+        
+    }
+    return;
+}
+    
+void  
+_Jv_LocalVarWriteBarrier (jobject from, jobject to) {
+    JRATE_UNUSED_ARG(from);
+    JRATE_UNUSED_ARG(to);
+#if 0    
+    printf("%p -> %p", from, to);
+    if (from) {
+        void** ptr = (void**)from;
+        printf("\t[%p]\n", (*ptr));
+    }
+    else {
+        printf("\n");
+    }
+#endif
+    return;
+}
+
+void _Jv_OnMethodEnter () {
+//    printf("\tENTER\n");
+}
+
+void _Jv_OnMethodExit () {
+//    printf("\tEXIT\n");
+}
+
+
+jobject _Jv_IncrementReferenceCount (jobject obj) {
+    printf("\tINCREMENT-REFERENCECOUNT\n");
+    fflush(stdout);
+    jobject* retVal = (jobject*)obj;
+    return *retVal;
+}
+
+
+void _Jv_OnSynchronizedMethodEnter (jobject obj) {
+    _Jv_OnMethodEnter();
+    _Jv_MonitorEnter(obj);
+}
+
+void _Jv_OnSynchronizedMethodExit (jobject obj) {
+    _Jv_MonitorExit(obj);
+    _Jv_OnMethodExit();
+}
+
 void
 _Jv_CheckArrayStore (jobject arr, jobject obj)
 {
   if (obj)
     {
       JvAssert (arr != NULL);
+      // -- Check the legality of the assignment --
+      _Jv_FieldWriteBarrier (arr, obj);
       jclass elt_class = (JV_CLASS (arr))->getComponentType();
       if (elt_class == &java::lang::Object::class$)
 	return;
@@ -1727,3 +1883,18 @@ _Jv_MakeVTable (jclass klass)
 	  throw new java::lang::AbstractMethodError ();
     }
 }
+
+void _Jv_InitClass (jclass klass) {
+    if (__builtin_expect (klass->state == JV_STATE_DONE, true))
+        return;
+    
+    //
+    // Class Initialization have to happen into the method area, so we
+    // set the current allocation context to be the mehtod area, and
+    // ripristinate it to whatever it was once we are done
+    //
+    {
+        ::jrate::binding::java::MemoryAreaScope_t newScope(jRateGetMethodArea());
+        klass->initializeClass ();
+    }
+}
diff -Nurp ../gcc/libjava/java/lang/natClassLoader.cc ./libjava/java/lang/natClassLoader.cc
--- ../gcc/libjava/java/lang/natClassLoader.cc	Thu Dec 19 13:32:17 2002
+++ ./libjava/java/lang/natClassLoader.cc	Fri Aug  5 22:03:52 2005
@@ -44,65 +44,13 @@ details.  */
 /////////// java.lang.ClassLoader native methods ////////////
 
 java::lang::Class *
-java::lang::ClassLoader::defineClass0 (jstring name,
-				       jbyteArray data, 
-				       jint offset,
-				       jint length,
-				       java::security::ProtectionDomain *pd)
-{
-#ifdef INTERPRETER
-  jclass klass;
-  klass = (jclass) JvAllocObject (&java::lang::Class::class$,
-				  sizeof (_Jv_InterpClass));
-  _Jv_InitNewClassFields (klass);
-
-  // Synchronize on the class, so that it is not attempted initialized
-  // until we're done loading.
-  JvSynchronize sync (klass);
-
-  // Record the defining loader.  For the system class loader, we
-  // record NULL.
-  if (this != java::lang::ClassLoader::getSystemClassLoader())
-    klass->loader = this;
-
-  if (name != 0)
-    {
-      _Jv_Utf8Const *name2 = _Jv_makeUtf8Const (name);
-
-      if (! _Jv_VerifyClassName (name2))
-	throw new java::lang::ClassFormatError
-	  (JvNewStringLatin1 ("erroneous class name"));
-
-      klass->name = name2;
-    }
-
-  try
+java::lang::ClassLoader::defineClass0 (jstring,
+                                       jbyteArray, 
+                                       jint,
+                                       jint,
+                                       java::security::ProtectionDomain *)
     {
-      _Jv_DefineClass (klass, data, offset, length);
-    }
-  catch (java::lang::Throwable *ex)
-    {
-      klass->state = JV_STATE_ERROR;
-      klass->notifyAll ();
-
-      _Jv_UnregisterClass (klass);
-
-      // If EX is not a ClassNotFoundException, that's ok, because we
-      // account for the possibility in defineClass().
-      throw ex;
-    }
-    
-  klass->protectionDomain = pd;
-
-  // if everything proceeded sucessfully, we're loaded.
-  JvAssert (klass->state == JV_STATE_LOADED);
-
-  return klass;
-
-#else // INTERPRETER
-
   return 0;
-#endif
 }
 
 void
diff -Nurp ../gcc/libjava/java/lang/natObject.cc ./libjava/java/lang/natObject.cc
--- ../gcc/libjava/java/lang/natObject.cc	Wed Feb 19 10:27:22 2003
+++ ./libjava/java/lang/natObject.cc	Fri Aug  5 22:03:52 2005
@@ -29,6 +29,15 @@ details.  */
 #include <java/lang/Cloneable.h>
 #include <java/lang/Thread.h>
 
+#include <jrate/jRate.h>
+#include <jrate/binding/java/Types.h>
+#include <jrate/binding/java/MemoryAreaScope.h>
+#include <javax/realtime/MemoryArea.h>
+
+#ifdef HAVE_JRATE_GC
+#  include <jRate-gc.h>
+#endif
+
 #ifdef LOCK_DEBUG
 #  include <stdio.h>
 #endif
@@ -62,6 +71,70 @@ java::lang::Object::hashCode (void)
   return _Jv_HashCode (this);
 }
 
+java::lang::Object*
+java::lang::Object::__incRefCount(::java::lang::Object* obj) {
+    return obj;
+}
+
+java::lang::Object*
+java::lang::Object::__incRefCount() {
+    return this;
+}
+
+void
+java::lang::Object::__decRefCount(::java::lang::Object*) {
+    return;
+}
+
+java::lang::Object*
+java::lang::Object::__returnValue(::java::lang::Object* obj) { return obj; }
+
+java::lang::Object*
+java::lang::Object::__passValue(::java::lang::Object* obj) { return obj; }
+
+jboolean
+java::lang::Object::__returnValue(jboolean v) { return v;}
+
+jchar
+java::lang::Object::__returnValue(jchar ch) { return ch; }
+
+jbyte
+java::lang::Object::__returnValue(jbyte b) { return b; }
+
+jshort
+java::lang::Object::__returnValue(jshort i) { return i; }
+
+jint
+java::lang::Object::__returnValue(jint i) { return i; }
+
+jlong
+java::lang::Object::__returnValue(jlong l) { return l; }
+
+jfloat
+java::lang::Object::__returnValue(jfloat f) { return f; }
+
+jdouble
+java::lang::Object::__returnValue(jdouble d) { return d; }
+
+jboolean
+java::lang::Object::__passValue(jboolean v) { return v; }
+jbyte
+java::lang::Object::__passValue(jbyte b) { return b; }
+jchar
+java::lang::Object::__passValue(jchar ch) { return ch; }
+
+jshort
+java::lang::Object::__passValue(jshort i) { return i; }
+
+jint
+java::lang::Object::__passValue(jint i) { return i; }
+jlong
+java::lang::Object::__passValue(jlong l) { return l; }
+jfloat
+java::lang::Object::__passValue(jfloat f) { return f; }
+jdouble
+java::lang::Object::__passValue(jdouble d) { return d; }
+
 jobject
 java::lang::Object::clone (void)
 {
@@ -119,6 +192,41 @@ _Jv_FinalizeObject (jobject obj)
     }
 }
 
+//
+// Global function pointers, filled in by jRate on startup.
+// Used to allow libgcj to make RTSJ-conforming inter-object references
+// when reallocation, etc., is necessary.
+//
+
+extern "C" {
+  jobject _Jv_ScopeAwareNew(jobject, jclass, JArray<jclass>*, JArray<jobject>*);
+  JArray<jobject>* _Jv_ScopeAwareNewArray(jobject, jclass, jint);
+  jobject _Jv_ScopeAwareRealloc(jobject from, jobject to);
+}
+
+jobject
+java::lang::Object::__jRateAlloc(jobject o, jclass c)
+{
+    return _Jv_ScopeAwareNew(o, c, 0, 0);
+}
+
+jobject
+java::lang::Object::__jRateAlloc(jobject o, jclass c, JArray<jclass>* types, JArray<jobject>* args)
+{
+    return _Jv_ScopeAwareNew(o, c, types, args);
+}
+
+jobject
+java::lang::Object::__jRateAllocArray(jobject o, jclass c, jint n)
+{
+    return _Jv_ScopeAwareNewArray(o, c, n);
+}
+
+jobject
+java::lang::Object::__jRateRealloc(jobject from, jobject to)
+{
+    return _Jv_ScopeAwareRealloc(from, to);
+}
 
 //
 // Synchronization code.
@@ -127,7 +235,7 @@ _Jv_FinalizeObject (jobject obj)
 #ifndef JV_HASH_SYNCHRONIZATION
 // This global is used to make sure that only one thread sets an
 // object's `sync_info' field.
-static _Jv_Mutex_t sync_mutex;
+static _Jv_Mutex_t* sync_mutex;
 
 // This macro is used to see if synchronization initialization is
 // needed.
@@ -159,7 +267,7 @@ finalize_sync_info (jobject obj)
 void
 java::lang::Object::sync_init (void)
 {
-  _Jv_MutexLock (&sync_mutex);
+  _Jv_SynchGuard guard(sync_mutex);
   // Check again to see if initialization is needed now that we have
   // the lock.
   if (INIT_NEEDED (this))
@@ -173,6 +281,20 @@ java::lang::Object::sync_init (void)
       // been finalized.  So if we just reinitialize the old one,
       // we'll never be able to (re-)destroy the mutex and/or
       // condition variable.
+
+      // Setup the correct allocation context
+      ::jrate::binding::java::IMemoryArea_t* targetMA;
+
+      ::javax::realtime::MemoryArea* ma =
+          (javax::realtime::MemoryArea *)this->memory_area;
+
+      if (ma == 0)
+          targetMA = jRateGetMethodArea();
+      else
+          targetMA = MEM_AREA(ma);
+
+      ::jrate::binding::java::MemoryAreaScope_t newScope(targetMA);
+
       si = (_Jv_SyncInfo *) _Jv_AllocBytes (sizeof (_Jv_SyncInfo));
       _Jv_MutexInit (&si->mutex);
       _Jv_CondInit (&si->condition);
@@ -183,7 +305,6 @@ java::lang::Object::sync_init (void)
 #endif
       sync_info = (jobject) si;
     }
-  _Jv_MutexUnlock (&sync_mutex);
 }
 
 void
@@ -236,7 +357,8 @@ java::lang::Object::wait (jlong timeout,
 void
 _Jv_InitializeSyncMutex (void)
 {
-  _Jv_MutexInit (&sync_mutex);
+  sync_mutex = (_Jv_Mutex_t*)malloc(sizeof(_Jv_Mutex_t));
+  _Jv_MutexInit (sync_mutex);
 }
 
 void
@@ -267,8 +389,8 @@ _Jv_MonitorExit (jobject obj)
 #else /* JV_HASH_SYNCHRONIZATION */
 
 // FIXME: We shouldn't be calling GC_register_finalizer directly.
-#ifndef HAVE_BOEHM_GC
-# error Hash synchronization currently requires boehm-gc
+#if !defined(HAVE_BOEHM_GC) && !defined(HAVE_JRATE_GC)
+# error Hash synchronization currently requires boehm-gc or jrate-gc
 // That's actually a bit of a lie: It should also work with the null GC,
 // probably even better than the alternative.
 // To really support alternate GCs here, we would need to widen the
@@ -279,7 +401,9 @@ _Jv_MonitorExit (jobject obj)
 // operations is already ridiculous, and would become worse if we
 // went through the proper intermediaries.
 #else
-# include "gc.h"
+# ifdef HAVE_BOEHM_GC
+#  include "gc.h"
+# endif
 #endif
 
 // What follows currenly assumes a Linux-like platform.
diff -Nurp ../gcc/libjava/java/lang/natRuntime.cc ./libjava/java/lang/natRuntime.cc
--- ../gcc/libjava/java/lang/natRuntime.cc	Fri Apr 25 11:02:23 2003
+++ ./libjava/java/lang/natRuntime.cc	Fri Aug  5 22:03:52 2005
@@ -34,6 +34,8 @@ details.  */
 
 #include <jni.h>
 
+#include <java-threads.h>
+
 #ifdef HAVE_PWD_H
 #include <pwd.h>
 #endif
@@ -311,7 +313,10 @@ java::lang::Runtime::init (void)
 void
 java::lang::Runtime::runFinalization (void)
 {
-  gnu::gcj::runtime::FinalizerThread::finalizerReady ();
+    //
+    // In jRate we don't need the finalizer thread.
+    // 
+//  gnu::gcj::runtime::FinalizerThread::finalizerReady ();
 }
 
 jlong
@@ -632,6 +637,13 @@ java::lang::Runtime::insertSystemPropert
     }
 }
 
+void
+java::lang::Runtime::natSetExit ()
+{
+  // get around scope check
+  exitSequence = _Jv_ThreadCurrent ();
+}
+
 java::lang::Process *
 java::lang::Runtime::execInternal (jstringArray cmd,
 				   jstringArray env,
diff -Nurp ../gcc/libjava/java/lang/natThread.cc ./libjava/java/lang/natThread.cc
--- ../gcc/libjava/java/lang/natThread.cc	Wed Apr 10 15:36:04 2002
+++ ./libjava/java/lang/natThread.cc	Fri Aug  5 22:03:52 2005
@@ -24,31 +24,15 @@ details.  */
 #include <java/lang/InterruptedException.h>
 #include <java/lang/NullPointerException.h>
 
+#include <javax/realtime/RealtimeThread.h>
+
 #include <jni.h>
 
 #ifdef ENABLE_JVMPI
 #include <jvmpi.h>
 #endif
 
-
-
-// This structure is used to represent all the data the native side
-// needs.  An object of this type is assigned to the `data' member of
-// the Thread class.
-struct natThread
-{
-  // These are used to interrupt sleep and join calls.  We can share a
-  // condition variable here since it only ever gets notified when the thread
-  // exits.
-  _Jv_Mutex_t join_mutex;
-  _Jv_ConditionVariable_t join_cond;
-
-  // This is private data for the thread system layer.
-  _Jv_Thread_t *thread;
-
-  // Each thread has its own JNI object.
-  JNIEnv *jni_env;
-};
+#include <java/lang/natThread.h>
 
 static void finalize_native (jobject ptr);
 
@@ -152,12 +136,26 @@ void
 java::lang::Thread::setPriority (jint newPriority)
 {
   checkAccess ();
-  if (newPriority < MIN_PRIORITY || newPriority > MAX_PRIORITY)
-    throw new IllegalArgumentException;
 
-  jint gmax = group->getMaxPriority();
-  if (newPriority > gmax)
-    newPriority = gmax;
+  // FIXME: ugly hackery to avoid requiring javax::realtime::RealtimeThread
+  // link from libgcj -- should be fixable now with new build system
+  static jclass rttclass = java::lang::Class::forName (JvNewStringLatin1 ("javax.realtime.RealtimeThread"));
+  if (! _Jv_IsInstanceOf(this, rttclass)) {
+    // non-realtime thread
+    if (newPriority < MIN_PRIORITY || newPriority > MAX_PRIORITY)
+      throw new IllegalArgumentException;
+
+    jint gmax = group->getMaxPriority();
+    if (newPriority > gmax)
+      newPriority = gmax;
+  } else {
+    // realtime thread: rules are different
+    // see http://www.rtsj.org/specjavadoc/AlteredStdJava.html
+    if (newPriority < sched_get_priority_min(JRATE_SCHED_TYPE) ||
+        newPriority > sched_get_priority_max(JRATE_SCHED_TYPE))
+      throw new IllegalArgumentException (JvNewStringLatin1 ("setPriority() on RealtimeThread out of legal range"));
+    // FIXME for jRate: should we do a group priority check too?
+  }
 
   priority = newPriority;
   natThread *nt = (natThread *) data;
diff -Nurp ../gcc/libjava/java/text/ChoiceFormat.java ./libjava/java/text/ChoiceFormat.java
--- ../gcc/libjava/java/text/ChoiceFormat.java	Tue Jul  2 14:43:02 2002
+++ ./libjava/java/text/ChoiceFormat.java	Fri Aug  5 22:03:52 2005
@@ -437,7 +437,8 @@ public class ChoiceFormat extends Number
     if (choiceLimits.length != choiceFormats.length)
       throw new IllegalArgumentException ();
     this.choiceFormats = (String[]) choiceFormats.clone();
-    this.choiceLimits = (double[]) choiceLimits.clone();
+    double[] temp = (double[]) choiceLimits.clone();
+    this.choiceLimits = temp;
   }
 
   private final void quoteString (StringBuffer dest, String text)
diff -Nurp ../gcc/libjava/java/util/IdentityHashMap.java ./libjava/java/util/IdentityHashMap.java
--- ../gcc/libjava/java/util/IdentityHashMap.java	Sun Jun 16 16:15:42 2002
+++ ./libjava/java/util/IdentityHashMap.java	Fri Aug  5 22:03:52 2005
@@ -519,6 +519,63 @@ public class IdentityHashMap extends Abs
     return null;
   }
 
+
+  /**
+   * Puts the supplied value into the Map, mapped by the supplied key.
+   * The value may be retrieved by any object which <code>equals()</code>
+   * this key. NOTE: Since the prior value could also be null, you must
+   * first use containsKey if you want to see if you are replacing the
+   * key's mapping.  Unlike normal maps, this tests for the key
+   * with <code>entry == key</code> instead of
+   * <code>entry == null ? key == null : entry.equals(key)</code>.
+   *
+   * @param key the key used to locate the value
+   * @param value the value to be stored in the HashMap
+   * @return the prior mapping of the key, or null if there was none
+   * @see #get(Object)
+   */
+  Object put_(Object key, Object value)
+  {
+    // Rehash if the load factor is too high.
+    if (size > threshold)
+      {
+        Object[] old = table;
+        // This isn't necessarily prime, but it is an odd number of key/value
+        // slots, which has a higher probability of fewer collisions.
+        table = new Object[old.length << 1 + 2];
+        Arrays.fill(table, emptyslot);
+        size = 0;
+        threshold = (table.length >>> 3) * 3;
+
+        for (int i = old.length - 2; i >= 0; i -= 2)
+          {
+            Object oldkey = old[i];
+            if (oldkey != tombstone && oldkey != emptyslot)
+              // Just use put.  This isn't very efficient, but it is ok.
+              put_(oldkey, old[i + 1]);
+          }
+      }
+
+    int h = hash(key);
+    if (table[h] == key)
+      {
+        Object r = table[h + 1];
+        table[h + 1] = value;
+        return r;
+      }
+
+    // At this point, we add a new mapping.
+    modCount++;
+    size++;
+    this.setKey(h, key);
+    table[h + 1] = value;
+    return null;
+  }
+
+    
+  private native void setKey(int index, Object key);
+        
+    
   /**
    * Copies all of the mappings from the specified map to this. If a key
    * is already in this map, its value is replaced.
diff -Nurp ../gcc/libjava/java/util/Vector.java ./libjava/java/util/Vector.java
--- ../gcc/libjava/java/util/Vector.java	Sun Apr  7 01:40:49 2002
+++ ./libjava/java/util/Vector.java	Fri Aug  5 22:03:52 2005
@@ -188,7 +188,7 @@ public class Vector extends AbstractList
     // vector since that is a much less likely case; it's more efficient to
     // not do the check and lose a bit of performance in that infrequent case
 
-    Object[] newArray = new Object[elementCount];
+    Object[] newArray = (Object[]) __jRateAllocArray(this, Object.class, elementCount);
     System.arraycopy(elementData, 0, newArray, 0, elementCount);
     elementData = newArray;
   }
@@ -214,7 +214,7 @@ public class Vector extends AbstractList
     else
       newCapacity = elementData.length + capacityIncrement;
 
-    Object[] newArray = new Object[Math.max(newCapacity, minCapacity)];
+    Object[] newArray = (Object[]) __jRateAllocArray(this, Object.class, Math.max(newCapacity, minCapacity));
 
     System.arraycopy(elementData, 0, newArray, 0, elementCount);
     elementData = newArray;
@@ -476,6 +476,17 @@ public class Vector extends AbstractList
     elementData[elementCount++] = obj;
   }
 
+  public synchronized void addElement_(Object obj)
+  {
+    if (elementCount == elementData.length)
+      ensureCapacity(elementCount + 1);
+    modCount++;
+    this.natSetElement(elementCount, obj);
+    elementCount++;
+  }
+
+  private native void natSetElement(int index, Object obj);
+    
   /**
    * Removes the first (the lowestindex) occurance of the given object from
    * the Vector. If such a remove was performed (the object was found), true
@@ -622,6 +633,19 @@ public class Vector extends AbstractList
   }
 
   /**
+   * Adds an object to the Vector without performing any store check.
+   *
+   * @param o the element to add to the Vector
+   * @return true, as specified by List
+   * @since 1.2
+   */
+  public boolean add_(Object o)
+  {
+    addElement_(o);
+    return true;
+  }
+    
+  /**
    * Removes the given Object from the Vector.  If it exists, true
    * is returned, if not, false is returned.
    *
diff -Nurp ../gcc/libjava/java/util/WeakHashMap.java ./libjava/java/util/WeakHashMap.java
--- ../gcc/libjava/java/util/WeakHashMap.java	Tue Jun 18 10:40:05 2002
+++ ./libjava/java/util/WeakHashMap.java	Fri Aug  5 22:03:52 2005
@@ -606,7 +606,7 @@ public class WeakHashMap extends Abstrac
     WeakBucket[] oldBuckets = buckets;
     int newsize = buckets.length * 2 + 1; // XXX should be prime.
     threshold = (int) (newsize * loadFactor);
-    buckets = new WeakBucket[newsize];
+    buckets = (WeakBucket[]) __jRateAllocArray(this, WeakBucket.class, newsize);
 
     // Now we have to insert the buckets again.
     for (int i = 0; i < oldBuckets.length; i++)
@@ -672,7 +672,11 @@ public class WeakHashMap extends Abstrac
     if (key == null)
       key = NULL_KEY;
     int slot = hash(key);
-    WeakBucket bucket = new WeakBucket(key, queue, value, slot);
+    WeakBucket bucket = (WeakBucket)
+      __jRateAlloc(buckets, WeakBucket.class,
+                   new Class[] { Object.class, ReferenceQueue.class,
+                                 Object.class, Integer.TYPE },
+                   new Object[] { key, queue, value, new Integer(slot) });
     bucket.next = buckets[slot];
     buckets[slot] = bucket;
     size++;
diff -Nurp ../gcc/libjava/libltdl/Makefile.in ./libjava/libltdl/Makefile.in
--- ../gcc/libjava/libltdl/Makefile.in	Sat Feb 14 14:34:20 2004
+++ ./libjava/libltdl/Makefile.in	Fri Aug  5 22:03:52 2005
@@ -121,6 +121,7 @@ CFLAGS = @CFLAGS@
 COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
 CCLD = $(CC)
+LDFLAGS+=-lstdc++
 LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
 HEADERS =  $(include_HEADERS) $(noinst_HEADERS)
 
diff -Nurp ../gcc/libjava/posix-threads.cc ./libjava/posix-threads.cc
--- ../gcc/libjava/posix-threads.cc	Sat Mar  1 19:26:20 2003
+++ ./libjava/posix-threads.cc	Fri Aug  5 22:32:53 2005
@@ -34,6 +34,14 @@ details.  */
 #include <java/lang/System.h>
 #include <java/lang/Long.h>
 #include <java/lang/OutOfMemoryError.h>
+#include <java-threads.h>
+
+#include <javax/realtime/RealtimeThread.h>
+#include <javax/realtime/ExecutionEligibilityParameters.h>
+#include <stdio.h>
+#include <errno.h>
+
+int JRATE_SCHED_TYPE = SCHED_FIFO;
 
 // This is used to implement thread startup.
 struct starter
@@ -51,9 +59,14 @@ pthread_key_t _Jv_ThreadKey;
 // _Jv_Thread_t* representing the thread.
 pthread_key_t _Jv_ThreadDataKey;
 
+// This TSS key is used to store a reference of the currently active
+// Memory Area.
+pthread_key_t _Jv_MemoryAreaKey;
+
 // We keep a count of all non-daemon threads which are running.  When
 // this reaches zero, _Jv_ThreadWait returns.
 static pthread_mutex_t daemon_mutex;
+static pthread_mutex_t thread_start_mutex;
 static pthread_cond_t daemon_cond;
 static int non_daemon_count;
 
@@ -285,7 +298,9 @@ _Jv_InitThreads (void)
 {
   pthread_key_create (&_Jv_ThreadKey, NULL);
   pthread_key_create (&_Jv_ThreadDataKey, NULL);
+  pthread_key_create (&_Jv_MemoryAreaKey, NULL);
   pthread_mutex_init (&daemon_mutex, NULL);
+  pthread_mutex_init (&thread_start_mutex, NULL);
   pthread_cond_init (&daemon_cond, 0);
   non_daemon_count = 0;
 
@@ -327,7 +342,7 @@ _Jv_ThreadSetPriority (_Jv_Thread_t *dat
       struct sched_param param;
 
       param.sched_priority = prio;
-      pthread_setschedparam (data->thread, SCHED_RR, &param);
+      pthread_setschedparam (data->thread, JRATE_SCHED_TYPE, &param);
     }
 #endif
 }
@@ -373,10 +388,55 @@ _Jv_ThreadUnRegister ()
 static void *
 really_start (void *x)
 {
+  jRateSetupDefaultAllocationContext();  
   struct starter *info = (struct starter *) x;
 
   _Jv_ThreadRegister (info->data);
 
+  // don't allow user logic to execute until we have correct priority
+  // as set by _Jv_ThreadStart()
+  pthread_mutex_lock (&thread_start_mutex);
+  pthread_mutex_unlock (&thread_start_mutex);
+
+  info->method (info->data->thread_obj);
+
+  if (! (info->data->flags & FLAG_DAEMON))
+    {
+      pthread_mutex_lock (&daemon_mutex);
+      --non_daemon_count;
+      if (! non_daemon_count)
+        pthread_cond_signal (&daemon_cond);
+      pthread_mutex_unlock (&daemon_mutex);
+    }
+
+  return NULL;
+}
+
+// Real-Time threads need some more book keeping, because of this we
+// define a new starter
+
+static void *
+rt_really_start (void *x)
+{
+  struct starter *info = (struct starter *) x;
+
+  jRateSetupDefaultAllocationContext();
+  // -- Action before starting the thread --
+  javax::realtime::RealtimeThread *rtt =
+    (javax::realtime::RealtimeThread *)(info->data->thread_obj);
+  rtt->setupTSS();
+  if (rtt->isPeriodic)
+      rtt->setupTimeoutHandler();
+
+  // -- start the thread --
+
+  _Jv_ThreadRegister (info->data);
+
+  // don't allow user logic to execute until we have correct priority
+  // as set by _Jv_RealtimeThreadStart()
+  pthread_mutex_lock (&thread_start_mutex);
+  pthread_mutex_unlock (&thread_start_mutex);
+
   info->method (info->data->thread_obj);
 
   if (! (info->data->flags & FLAG_DAEMON))
@@ -388,6 +448,12 @@ really_start (void *x)
       pthread_mutex_unlock (&daemon_mutex);
     }
 
+  ////////////////////////////////////////////////
+  // -- Action after starting the thread --
+  
+  // Cleanup the scope stack. 
+  info->data->thread_obj->rtfini_(); 
+
   return NULL;
 }
 
@@ -396,7 +462,7 @@ _Jv_ThreadStart (java::lang::Thread *thr
 		 _Jv_ThreadStartFunc *meth)
 {
   struct sched_param param;
-  pthread_attr_t attr;
+  // pthread_attr_t attr;
   struct starter *info;
 
   if (data->flags & FLAG_START)
@@ -404,10 +470,13 @@ _Jv_ThreadStart (java::lang::Thread *thr
   data->flags |= FLAG_START;
 
   param.sched_priority = thread->getPriority();
+  /* -- support for broken NPTL which doesn't look at attr
+  pthread_attr_setschedpolicy(&attr, JRATE_SCHED_TYPE);
 
   pthread_attr_init (&attr);
   pthread_attr_setschedparam (&attr, &param);
   pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED);
+  */
 
   info = (struct starter *) _Jv_AllocBytes (sizeof (struct starter));
   info->method = meth;
@@ -421,17 +490,107 @@ _Jv_ThreadStart (java::lang::Thread *thr
     }
   else
     data->flags |= FLAG_DAEMON;
-  int r = pthread_create (&data->thread, &attr, really_start, (void *) info);
-  
-  pthread_attr_destroy (&attr);
+
+  pthread_mutex_lock (&thread_start_mutex);
+  int r = pthread_create (&data->thread, 0, really_start, (void *) info);
+  // pthread_attr_destroy (&attr);
 
   if (r)
     {
+      pthread_mutex_unlock (&thread_start_mutex);
       const char* msg = "Cannot create additional threads";
       throw new java::lang::OutOfMemoryError (JvNewStringUTF (msg));
     }
+
+  // -- support for broken NPTL which doesn't look at attr
+  // should probably look at return values here, but we'll get errors
+  // if not running as root: think about what to do here...
+  pthread_setschedparam (data->thread, JRATE_SCHED_TYPE, &param);
+  pthread_detach (data->thread);
+  pthread_mutex_unlock (&thread_start_mutex);
 }
 
+
+//
+// -- jRate Specific Functions -- 
+//
+
+// This creates a RealtimeThread. NoHeapRealtimeThread should not be
+// created using this function call. NoHeapRealtimeThread have to
+// escape the control of the GC, so they have to be created using the
+// REAL_FUNC(pthread). This way the GC will never know about them and
+// will never be able to stop them.
+
+void
+_Jv_RealtimeThreadStart(javax::realtime::RealtimeThread *thread,
+                        _Jv_Thread_t *data,
+                        _Jv_ThreadStartFunc *meth)
+{
+  struct starter *info;
+  // pthread_attr_t attr;
+  struct sched_param sched_param;
+
+  if (data->flags & FLAG_START)
+    return;
+  data->flags |= FLAG_START;
+
+  javax::realtime::ExecutionEligibilityParameters *eligibility =
+    thread->getExecutionEligibilityParameters();
+  
+  sched_param.sched_priority = eligibility->getExecutionEligibility();
+
+  /* -- support for broken NPTL which doesn't look at attr
+  pthread_attr_init(&attr);
+  pthread_attr_setschedpolicy(&attr, JRATE_SCHED_TYPE);
+  pthread_attr_setschedparam(&attr, &sched_param);
+  pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED);
+  */
+
+  info = (struct starter *) _Jv_AllocBytes (sizeof (struct starter));
+  info->method = meth;
+  info->data = data;
+
+  if (! thread->isDaemon())
+    {
+      pthread_mutex_lock (&daemon_mutex);
+      ++non_daemon_count;
+      pthread_mutex_unlock (&daemon_mutex);
+    }
+  else
+    data->flags |= FLAG_DAEMON;
+
+  pthread_mutex_lock (&thread_start_mutex);
+  int r = pthread_create (&data->thread, 0, rt_really_start, (void *) info);
+  // pthread_attr_destroy (&attr);
+
+  if (r)
+    {
+      pthread_mutex_unlock (&thread_start_mutex);
+      const char* msg = "Cannot create additional Real-Time Threads";
+      throw new java::lang::OutOfMemoryError (JvNewStringUTF (msg));
+    }
+
+  // -- support for broken NPTL which doesn't look at attr
+  // should probably look at return values here, but we'll get errors
+  // if not running as root: think about what to do here...
+  pthread_setschedparam (data->thread, JRATE_SCHED_TYPE, &sched_param);
+  pthread_detach (data->thread);
+  pthread_mutex_unlock (&thread_start_mutex);
+}
+
+// javax::realtime::MemoryArea *
+// _Jv_GetCurrentMemoryArea() {
+//   return (::javax::realtime::MemoryArea *)pthread_getspecific(_Jv_MemoryAreaKey);
+// }
+
+// void
+// _Jv_SetCurrentMemoryArea(::javax::realtime::MemoryArea * memArea) {
+//   pthread_setspecific(_Jv_MemoryAreaKey, memArea);
+// }
+
+//*---------------------------------------------------------------------------*
+
+
 void
 _Jv_ThreadWait (void)
 {
@@ -459,3 +618,80 @@ _Jv_ThreadSelf_out_of_line(volatile self
 }
 
 #endif /* SLOW_PTHREAD_SELF */
+
+#define LOCK_DEBUG 1
+///////////////////////////////////////////////////////////////////////////
+
+
+void
+_Jv_MutexInit (_Jv_Mutex_t *mu)
+{
+# ifdef LOCK_DEBUG /* Assumes Linuxthreads */
+  pthread_mutexattr_t attr;
+  pthread_mutexattr_init(&attr);
+  pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_ERRORCHECK);
+  pthread_mutex_init (&mu->mutex, &attr);
+# else
+  pthread_mutex_init (&mu->mutex, 0);
+# endif
+
+  mu->count = 0;
+  mu->owner = 0;
+}
+
+int
+_Jv_MutexLock (_Jv_Mutex_t *mu)
+{
+  pthread_t self = pthread_self();
+  if (mu->owner == self)
+    {
+      mu->count++;
+}
+  else
+    {
+#     ifdef LOCK_DEBUG
+        int result = pthread_mutex_lock (&mu->mutex);
+        if (0 != result)
+          {
+            fprintf(stderr, "Pthread_mutex_lock returned %d\n", result);
+            for (;;) {}
+          }
+#     else
+        pthread_mutex_lock (&mu->mutex);
+#     endif
+      mu->count = 1;
+      mu->owner = self;
+    }
+  return 0;
+}
+
+int
+_Jv_MutexUnlock (_Jv_Mutex_t *mu)
+{
+  if (_Jv_PthreadCheckMonitor (mu))
+    {
+#     ifdef LOCK_DEBUG
+        fprintf(stderr, "_Jv_MutexUnlock: Not owner\n");
+        for (;;) {}
+#     endif
+      return 1;
+    }
+    
+  mu->count--;
+
+  if (mu->count == 0)
+    {
+      mu->owner = 0;
+#     ifdef LOCK_DEBUG
+        int result = pthread_mutex_unlock (&mu->mutex);
+        if (0 != result)
+          {
+            fprintf(stderr, "Pthread_mutex_unlock returned %d\n", result);
+            for (;;) {}
+          }
+#     else
+        pthread_mutex_unlock (&mu->mutex);
+#     endif
+    }
+  return 0;
+}
diff -Nurp ../gcc/libjava/prims.cc ./libjava/prims.cc
--- ../gcc/libjava/prims.cc	Fri Oct 24 10:26:33 2003
+++ ./libjava/prims.cc	Fri Aug  5 22:03:52 2005
@@ -17,6 +17,8 @@ details.  */
 #include <string.h>
 #include <signal.h>
 
+#include <sys/mman.h>
+
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -59,13 +61,18 @@ details.  */
 #include <java/lang/UnsatisfiedLinkError.h>
 #include <java/lang/VirtualMachineError.h>
 #include <gnu/gcj/runtime/VMClassLoader.h>
-#include <gnu/gcj/runtime/FinalizerThread.h>
+// #include <gnu/gcj/runtime/FinalizerThread.h>
 #include <gnu/gcj/runtime/FirstThread.h>
+#include <jrate/binding/java/OutOfMemoryHandler.h>
 
 #ifdef USE_LTDL
 #include <ltdl.h>
 #endif
 
+#include <jrate/binding/java/Types.h>
+
+extern int JRATE_SCHED_TYPE;
+
 // We allocate a single OutOfMemoryError exception which we keep
 // around for use if we run out of memory.
 static java::lang::OutOfMemoryError *no_memory;
@@ -362,6 +369,8 @@ _Jv_ThrowNullPointerException ()
 // The collector calls this when it encounters an out-of-memory condition.
 void _Jv_ThrowNoMemory()
 {
+    fprintf(stderr, "[jRateRuntime]: OutOfMemory!!!");
+    fflush(stderr);
   throw no_memory;
 }
 
@@ -399,6 +408,15 @@ jvmpi_notify_alloc(jclass klass, jint si
 # define jvmpi_notify_alloc(klass,size,obj) /* do nothing */
 #endif
 
+///////////////////////////////////////////////////////////////////////////
+//
+//
+//                    Allocation API
+//
+//
+/////////////////////////////////////////////////////////////////////////////
+//
+//
 // Allocate a new object of class KLASS.  SIZE is the size of the object
 // to allocate.  You might think this is redundant, but it isn't; some
 // classes, such as String, aren't of fixed size.
@@ -409,27 +427,36 @@ jvmpi_notify_alloc(jclass klass, jint si
 jobject
 _Jv_AllocObjectNoInitNoFinalizer (jclass klass, jint size)
 {
-  jobject obj = (jobject) _Jv_AllocObj (size, klass);
+  jobject obj;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
+  obj = ma->allocateObjectNoFinalizer(size, klass);
   jvmpi_notify_alloc (klass, size, obj);
   return obj;
 }
 
+
 // And now a version that initializes if necessary.
 jobject
 _Jv_AllocObjectNoFinalizer (jclass klass, jint size)
 {
   _Jv_InitClass (klass);
-  jobject obj = (jobject) _Jv_AllocObj (size, klass);
+  jobject obj;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
+  obj = ma->allocateObjectNoFinalizer(size, klass);
   jvmpi_notify_alloc (klass, size, obj);
   return obj;
 }
 
-// And now the general version that registers a finalizer if necessary.
 jobject
 _Jv_AllocObject (jclass klass, jint size)
 {
-  jobject obj = _Jv_AllocObjectNoFinalizer (klass, size);
+  jobject obj;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
 
+  _Jv_InitClass (klass);
   // We assume that the compiler only generates calls to this routine
   // if there really is an interesting finalizer.
   // Unfortunately, we still have to the dynamic test, since there may
@@ -437,8 +464,13 @@ _Jv_AllocObject (jclass klass, jint size
   // Note that on IA64 get_finalizer() returns the starting address of the
   // function, not a function pointer.  Thus this still works.
   if (klass->vtable->get_finalizer ()
-      != java::lang::Object::class$.vtable->get_finalizer ())
+      != java::lang::Object::class$.vtable->get_finalizer ()) {
+    obj = ma->allocateObject(size, klass);
     _Jv_RegisterFinalizer (obj, _Jv_FinalizeObject);
+  } else {
+    obj = ma->allocateObjectNoFinalizer(size, klass);
+  }
+
   return obj;
 }
 
@@ -451,7 +483,10 @@ _Jv_AllocPtrFreeObject (jclass klass, ji
 {
   _Jv_InitClass (klass);
 
-  jobject obj = (jobject) _Jv_AllocPtrFreeObj (size, klass);
+  jobject obj;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
+  obj = ma->allocatePtrFreeObject(size, klass);
 
 #ifdef ENABLE_JVMPI
   // Service JVMPI request.
@@ -536,12 +571,31 @@ _Jv_NewPrimArray (jclass eltype, jint co
 # ifdef JV_HASH_SYNCHRONIZATION
   // Since the vtable is always statically allocated,
   // these are completely pointerfree!  Make sure the GC doesn't touch them.
-  __JArray *arr =
-    (__JArray*) _Jv_AllocPtrFreeObj (size + elsize * count, klass);
-  memset((char *)arr + size, 0, elsize * count);
+  __JArray *arr;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
+
+  if (__builtin_expect(ma != 0, true)) {
+    // arr = (__JArray *)ma->allocateArray(size + elsize * count, klass);
+    arr = (__JArray *)ma->allocatePtrFreeObject(size + elsize * count, klass);
+  }
+  else {
+    arr = (__JArray*) _Jv_AllocPtrFreeObj (size + elsize * count, klass);
+    memset((char *)arr + size, 0, elsize * count);
+  }
 # else
-  __JArray *arr = (__JArray*) _Jv_AllocObj (size + elsize * count, klass);
   // Note that we assume we are given zeroed memory by the allocator.
+  __JArray *arr;
+  ::jrate::binding::java::IMemoryArea_t* ma =
+      ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
+
+  if (__builtin_expect(ma != 0, true)) {
+    // arr = (__JArray *)ma->allocateArray(size + elsize * count, klass);
+    arr = (__JArray *)ma->allocateObject(size + elsize * count, klass);
+  }
+  else {
+    arr = (__JArray*) _Jv_AllocObj (size + elsize * count, klass);
+  }
 # endif
   // Cast away const.
   jsize *lp = const_cast<jsize *> (&arr->length);
@@ -954,6 +1008,7 @@ _Jv_CreateJavaVM (void* /*vm_args*/)
 
   _Jv_JNI_Init ();
 
+#ifndef HAVE_JRATE_GC
   _Jv_GCInitializeFinalizers (&::gnu::gcj::runtime::FinalizerThread::finalizerReady);
 
   // Start the GC finalizer thread.  A VirtualMachineError can be
@@ -968,6 +1023,7 @@ _Jv_CreateJavaVM (void* /*vm_args*/)
   catch (java::lang::VirtualMachineError *ignore)
     {
     }
+#endif /* ! HAVE_JRATE_GC */
 
   return 0;
 }
@@ -988,6 +1044,13 @@ _Jv_RunMain (jclass klass, const char *n
 	_Jv_Jar_Class_Path = strdup (name);
       _Jv_CreateJavaVM (NULL);
 
+      // -- Initialize jRate OutOfMemoryHandler
+      ::jrate::binding::java::OutOfMemoryHandler::init();
+
+
+      // -- Initialize jRate RTSJ Exception Objects --
+      jRateInitExceptionObjects();
+      
       // Get the Runtime here.  We want to initialize it before searching
       // for `main'; that way it will be set up if `main' is a JNI method.
       runtime = java::lang::Runtime::getRuntime ();
@@ -1024,6 +1087,13 @@ _Jv_RunMain (jclass klass, const char *n
 void
 JvRunMain (jclass klass, int argc, const char **argv)
 {
+    jRateInitMemorySubSystem();
+    sched_param sp;
+    sp.sched_priority = java::lang::Thread::NORM_PRIORITY;
+    if (sched_setscheduler(getpid(), SCHED_FIFO, &sp) != 0) {
+        fprintf(stderr, "[WARNING]:\n[WARNING]: You must be root to run jRate in Real-Time Scheduling Class\n[WARNING]:\n");
+        JRATE_SCHED_TYPE = SCHED_OTHER;
+    }
   _Jv_RunMain (klass, NULL, argc, argv, false);
 }
 
diff -Nurp ../gcc/libjava/resolve.cc ./libjava/resolve.cc
--- ../gcc/libjava/resolve.cc	Mon Feb  3 15:04:50 2003
+++ ./libjava/resolve.cc	Fri Aug  5 22:03:52 2005
@@ -638,9 +638,9 @@ _Jv_InitField (jobject obj, jclass klass
     {
     case JV_CONSTANT_String:
       {
-	_Jv_MonitorEnter (clz);
 	jstring str;
 	str = _Jv_NewStringUtf8Const (pool->data[init].utf8);
+        _Jv_MonitorEnter (clz);
 	pool->data[init].string = str;
 	pool->tags[init] = JV_CONSTANT_ResolvedString;
 	_Jv_MonitorExit (clz);
diff -Nurp ../gcc.std/libjava/prims.cc ./libjava/prims.cc
--- ../gcc.std/libjava/prims.cc	Wed Jul 13 13:43:05 2005
+++ ./libjava/prims.cc	Wed Jul 13 13:43:19 2005
@@ -431,6 +431,17 @@ _Jv_AllocObjectNoInitNoFinalizer (jclass
   ::jrate::binding::java::IMemoryArea_t* ma =
       ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
   obj = ma->allocateObjectNoFinalizer(size, klass);
+
+  /* START ALLOC TRACING MGD */
+  jstring str = klass->getName();
+  jchar *name = JvGetStringChars(str);
+  jchar *limit = name + str->length();
+  fprintf(stderr, "%ld:", size);
+  while(name != limit)
+    putc((char)(*name++), stderr);
+  putc('\n', stderr);
+  /* END ALLOC TRACING MGD */
+
   jvmpi_notify_alloc (klass, size, obj);
   return obj;
 }
@@ -445,6 +456,17 @@ _Jv_AllocObjectNoFinalizer (jclass klass
   ::jrate::binding::java::IMemoryArea_t* ma =
       ::jrate::sys::getTSS< ::jrate::binding::java::IMemoryAreaTSS_t >().get();
   obj = ma->allocateObjectNoFinalizer(size, klass);
+
+  /* START ALLOC TRACING MGD */
+  jstring str = klass->getName();
+  jchar *name = JvGetStringChars(str);
+  jchar *limit = name + str->length();
+  fprintf(stderr, "%ld:", size);
+  while(name != limit)
+    putc((char)(*name++), stderr);
+  putc('\n', stderr);
+  /* END ALLOC TRACING MGD */
+
   jvmpi_notify_alloc (klass, size, obj);
   return obj;
 }
@@ -467,8 +489,30 @@ _Jv_AllocObject (jclass klass, jint size
       != java::lang::Object::class$.vtable->get_finalizer ()) {
     obj = ma->allocateObject(size, klass);
     _Jv_RegisterFinalizer (obj, _Jv_FinalizeObject);
+
+    /* START ALLOC TRACING MGD */
+    jstring str = klass->getName();
+    jchar *name = JvGetStringChars(str);
+    jchar *limit = name + str->length();
+    fprintf(stderr, "%ld:", size);
+    while(name != limit)
+      putc((char)(*name++), stderr);
+    putc('\n', stderr);
+    /* END ALLOC TRACING MGD */
+
   } else {
     obj = ma->allocateObjectNoFinalizer(size, klass);
+
+    /* START ALLOC TRACING MGD */
+    jstring str = klass->getName();
+    jchar *name = JvGetStringChars(str);
+    jchar *limit = name + str->length();
+    fprintf(stderr, "%ld:", size);
+    while(name != limit)
+      putc((char)(*name++), stderr);
+    putc('\n', stderr);
+    /* END ALLOC TRACING MGD */
+
   }
 
   return obj;
@@ -545,6 +589,17 @@ _Jv_NewObjectArray (jsize count, jclass 
       while (--count >= 0)
 	*ptr++ = init;
     }
+
+  /* START ALLOC TRACING MGD */
+  jstring str = elementClass->getName();
+  jchar *name = JvGetStringChars(str);
+  jchar *limit = name + str->length();
+  fprintf(stderr, "%zu:", size);
+  while(name != limit)
+    putc((char)(*name++), stderr);
+  fprintf(stderr, "[%zu]\n", count);
+  /* END ALLOC TRACING MGD */
+
   return obj;
 }
 
@@ -601,6 +656,16 @@ _Jv_NewPrimArray (jclass eltype, jint co
   jsize *lp = const_cast<jsize *> (&arr->length);
   *lp = count;
 
+  /* START ALLOC TRACING MGD */
+  jstring str = eltype->getName();
+  jchar *name = JvGetStringChars(str);
+  jchar *limit = name + str->length();
+  fprintf(stderr, "%zu:", size);
+  while(name != limit)
+    putc((char)(*name++), stderr);
+  fprintf(stderr, "[%zu]\n", count);
+  /* END ALLOC TRACING MGD */
+
   return arr;
 }
 

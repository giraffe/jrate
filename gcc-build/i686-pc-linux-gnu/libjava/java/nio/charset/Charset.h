// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_nio_charset_Charset__
#define __java_nio_charset_Charset__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace nio
    {
      class ByteBuffer;
      class CharBuffer;
      namespace charset
      {
        namespace spi
        {
          class CharsetProvider;
        }
        class Charset;
        class CharsetDecoder;
        class CharsetEncoder;
      }
    }
  }
};

class ::java::nio::charset::Charset : public ::java::lang::Object
{
public:  // actually protected
  Charset (::java::lang::String *, JArray< ::java::lang::String *> *);
private:
  static void checkName (::java::lang::String *);
public:
  static jboolean isSupported (::java::lang::String *);
  static ::java::nio::charset::Charset *forName (::java::lang::String *);
private:
  static ::java::nio::charset::Charset *charsetForName (::java::lang::String *);
public:
  static ::java::util::SortedMap *availableCharsets ();
private:
  static ::java::nio::charset::spi::CharsetProvider *provider ();
public:
  ::java::lang::String *name () { return canonicalName; }
  ::java::util::Set *aliases ();
  virtual ::java::lang::String *displayName () { return canonicalName; }
  virtual ::java::lang::String *displayName (::java::util::Locale *) { return canonicalName; }
  jboolean isRegistered ();
  virtual jboolean contains (::java::nio::charset::Charset *) = 0;
  virtual ::java::nio::charset::CharsetDecoder *newDecoder () = 0;
  virtual ::java::nio::charset::CharsetEncoder *newEncoder () = 0;
  virtual jboolean canEncode ();
  ::java::nio::ByteBuffer *encode (::java::nio::CharBuffer *);
  ::java::nio::ByteBuffer *encode (::java::lang::String *);
  virtual ::java::nio::CharBuffer *decode (::java::nio::ByteBuffer *);
  jint compareTo (::java::lang::Object *);
  jint hashCode ();
  jboolean equals (::java::lang::Object *);
  ::java::lang::String *toString () { return canonicalName; }
private:
  static ::java::nio::charset::CharsetEncoder *cachedEncoder;
  static ::java::nio::charset::CharsetDecoder *cachedDecoder;
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object )))) canonicalName;
  JArray< ::java::lang::String *> *aliases__;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_nio_charset_Charset__ */

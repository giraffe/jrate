// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_realtime_BoundAsyncEventHandler__
#define __javax_realtime_BoundAsyncEventHandler__

#pragma interface

#include <javax/realtime/AsyncEventHandler.h>

extern "Java"
{
  namespace javax
  {
    namespace realtime
    {
      class BoundAsyncEventHandler;
      class Scheduler;
      class ProcessingGroupParameters;
      class MemoryArea;
      class MemoryParameters;
      class ReleaseParameters;
      class SchedulingParameters;
      class BoundAsyncEventHandler$HandlerLogic;
      class RealtimeThread;
    }
  }
};

class ::javax::realtime::BoundAsyncEventHandler : public ::javax::realtime::AsyncEventHandler
{
public:
  BoundAsyncEventHandler ();
  BoundAsyncEventHandler (jboolean);
  BoundAsyncEventHandler (::java::lang::Runnable *);
  BoundAsyncEventHandler (jboolean, ::java::lang::Runnable *);
  BoundAsyncEventHandler (::javax::realtime::SchedulingParameters *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *, ::javax::realtime::MemoryArea *, ::javax::realtime::ProcessingGroupParameters *, jboolean);
  BoundAsyncEventHandler (::javax::realtime::SchedulingParameters *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *, ::javax::realtime::MemoryArea *, ::javax::realtime::ProcessingGroupParameters *, ::java::lang::Runnable *);
  BoundAsyncEventHandler (::javax::realtime::SchedulingParameters *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *, ::javax::realtime::MemoryArea *, ::javax::realtime::ProcessingGroupParameters *, jboolean, ::java::lang::Runnable *);
  virtual void handleAsyncEvent ();
public:  // actually protected
  virtual void handleAsyncEventImpl ();
public:
  virtual void activate ();
  virtual void deactivate ();
  virtual jboolean addIfFeasible ();
  virtual jboolean addToFeasibility ();
  virtual ::javax::realtime::MemoryParameters *getMemoryParameters ();
  virtual void setMemoryParameters (::javax::realtime::MemoryParameters *);
  virtual jboolean setMemoryParametersIfFeasible (::javax::realtime::MemoryParameters *);
  virtual ::javax::realtime::ProcessingGroupParameters *getProcessingGroupParameters ();
  virtual void setProcessingGroupParameters (::javax::realtime::ProcessingGroupParameters *);
  virtual jboolean setProcessingGroupParametersIfFeasible (::javax::realtime::ProcessingGroupParameters *);
  virtual ::javax::realtime::ReleaseParameters *getReleaseParameters ();
  virtual void setReleaseParameters (::javax::realtime::ReleaseParameters *);
  virtual jboolean setReleaseParametersIfFeasible (::javax::realtime::ReleaseParameters *);
  virtual ::javax::realtime::Scheduler *getScheduler ();
  virtual void setScheduler (::javax::realtime::Scheduler *);
  virtual void setScheduler (::javax::realtime::Scheduler *, ::javax::realtime::SchedulingParameters *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *, ::javax::realtime::ProcessingGroupParameters *);
  virtual ::javax::realtime::SchedulingParameters *getSchedulingParameters ();
  virtual void setSchedulingParameters (::javax::realtime::SchedulingParameters *);
  virtual jboolean setSchedulingParametersIfFeasible (::javax::realtime::SchedulingParameters *);
  virtual jboolean removeFromFeasibility ();
  virtual jint executionEligibility ();
public:  // actually protected
  ::javax::realtime::RealtimeThread * __attribute__((aligned(__alignof__( ::javax::realtime::AsyncEventHandler )))) thread;
  jboolean active;
  ::java::lang::Runnable *logic;
public: // actually package-private
  ::javax::realtime::BoundAsyncEventHandler$HandlerLogic *handlerLogic;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_realtime_BoundAsyncEventHandler__ */

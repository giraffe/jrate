// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_realtime_PriorityScheduler__
#define __javax_realtime_PriorityScheduler__

#pragma interface

#include <javax/realtime/Scheduler.h>

extern "Java"
{
  namespace javax
  {
    namespace realtime
    {
      class RealtimeThread;
      class ProcessingGroupParameters;
      class MemoryParameters;
      class ReleaseParameters;
      class Schedulable;
      class PriorityScheduler;
    }
  }
};

class ::javax::realtime::PriorityScheduler : public ::javax::realtime::Scheduler
{
public:  // actually protected
  PriorityScheduler ();
  virtual jboolean addToFeasibility (::javax::realtime::Schedulable *);
public:
  virtual void fireSchedulable (::javax::realtime::Schedulable *) { }
  virtual jint getMaxPriority ();
  virtual jint getMaxPriority (::java::lang::Thread *);
  virtual jint getMinPriority ();
  virtual jint getMinPriority (::java::lang::Thread *);
  virtual jint getNormPriority ();
  virtual jint getNormPriority (::java::lang::Thread *);
  virtual ::java::lang::String *getPolicyName ();
  static ::javax::realtime::PriorityScheduler *instance ();
  virtual jboolean isFeasible ();
public:  // actually protected
  virtual jboolean removeFromFeasibility (::javax::realtime::Schedulable *);
public:
  virtual jboolean setIfFeasible (::javax::realtime::Schedulable *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *);
  virtual jboolean setIfFeasible (::javax::realtime::Schedulable *, ::javax::realtime::ReleaseParameters *, ::javax::realtime::MemoryParameters *, ::javax::realtime::ProcessingGroupParameters *);
private:
  jint priorityValueSelector (::java::lang::Thread *, jint, jint);
public:
  virtual jboolean validateSchedulingParameters (::javax::realtime::Schedulable *);
  virtual void notifyThreadStart (::javax::realtime::RealtimeThread *);
  virtual jint computeExecutionEligibility (::javax::realtime::Schedulable *);
private:
  static jint getMaxPriorityImpl ();
  static jint getMinPriorityImpl ();
public:
  static jint MAX_PRIORITY;
  static jint MIN_PRIORITY;
  static jint NORM_PRIORITY;
public:  // actually protected
  static ::javax::realtime::PriorityScheduler *theInstance;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_realtime_PriorityScheduler__ */

// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_nio_Buffer__
#define __java_nio_Buffer__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace java
  {
    namespace nio
    {
      class Buffer;
    }
  }
};

class ::java::nio::Buffer : public ::java::lang::Object
{
public: // actually package-private
  Buffer (jint, jint, jint, jint);
public:
  jint capacity () { return cap; }
  ::java::nio::Buffer *clear ();
  ::java::nio::Buffer *flip ();
  jboolean hasRemaining ();
  virtual jboolean isReadOnly () = 0;
  jint limit () { return limit__; }
  ::java::nio::Buffer *limit (jint);
  ::java::nio::Buffer *mark ();
  jint position () { return pos; }
  ::java::nio::Buffer *position (jint);
  jint remaining ();
  ::java::nio::Buffer *reset ();
  ::java::nio::Buffer *rewind ();
private:
  jint __attribute__((aligned(__alignof__( ::java::lang::Object ))))  cap;
  jint limit__;
  jint pos;
  jint mark__;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_nio_Buffer__ */

// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_nio_charset_CharsetDecoder__
#define __java_nio_charset_CharsetDecoder__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace java
  {
    namespace nio
    {
      class CharBuffer;
      class ByteBuffer;
      namespace charset
      {
        class CharsetDecoder;
        class CoderResult;
        class CodingErrorAction;
        class Charset;
      }
    }
  }
};

class ::java::nio::charset::CharsetDecoder : public ::java::lang::Object
{
private:
  CharsetDecoder (::java::nio::charset::Charset *, jfloat, jfloat, ::java::lang::String *);
public:  // actually protected
  CharsetDecoder (::java::nio::charset::Charset *, jfloat, jfloat);
public:
  jfloat averageCharsPerByte () { return averageCharsPerByte__; }
  ::java::nio::charset::Charset *charset () { return charset__; }
  ::java::nio::CharBuffer *decode (::java::nio::ByteBuffer *);
  ::java::nio::charset::CoderResult *decode (::java::nio::ByteBuffer *, ::java::nio::CharBuffer *, jboolean);
public:  // actually protected
  virtual ::java::nio::charset::CoderResult *decodeLoop (::java::nio::ByteBuffer *, ::java::nio::CharBuffer *) = 0;
public:
  virtual ::java::nio::charset::Charset *detectedCharset ();
  ::java::nio::charset::CoderResult *flush (::java::nio::CharBuffer *);
public:  // actually protected
  virtual ::java::nio::charset::CoderResult *implFlush (::java::nio::CharBuffer *);
public:
  ::java::nio::charset::CharsetDecoder *onMalformedInput (::java::nio::charset::CodingErrorAction *);
public:  // actually protected
  virtual void implOnMalformedInput (::java::nio::charset::CodingErrorAction *) { }
  virtual void implOnUnmappableCharacter (::java::nio::charset::CodingErrorAction *) { }
  virtual void implReplaceWith (::java::lang::String *) { }
  virtual void implReset () { }
public:
  virtual jboolean isAutoDetecting ();
  virtual jboolean isCharsetDetected ();
  virtual ::java::nio::charset::CodingErrorAction *malformedInputAction () { return malformedInputAction__; }
  jfloat maxCharsPerByte () { return maxCharsPerByte__; }
  ::java::nio::charset::CharsetDecoder *onUnmappableCharacter (::java::nio::charset::CodingErrorAction *);
  ::java::lang::String *replacement () { return replacement__; }
  ::java::nio::charset::CharsetDecoder *replaceWith (::java::lang::String *);
  ::java::nio::charset::CharsetDecoder *reset ();
  virtual ::java::nio::charset::CodingErrorAction *unmappableCharacterAction () { return unmappableCharacterAction__; }
private:
  static const jint STATE_RESET = 0L;
  static const jint STATE_CODING = 1L;
  static const jint STATE_END = 2L;
  static const jint STATE_FLUSHED = 3L;
  static ::java::lang::String *DEFAULT_REPLACEMENT;
  ::java::nio::charset::Charset * __attribute__((aligned(__alignof__( ::java::lang::Object )))) charset__;
  jfloat averageCharsPerByte__;
  jfloat maxCharsPerByte__;
  ::java::lang::String *replacement__;
  jint state;
  ::java::nio::charset::CodingErrorAction *malformedInputAction__;
  ::java::nio::charset::CodingErrorAction *unmappableCharacterAction__;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_nio_charset_CharsetDecoder__ */
